/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package Flexible_OpenSource_EBike_firmware_configuration_tool;

public class Configuration_tool extends javax.swing.JFrame {
    
    /**
     * Creates new form ContactEditor
     */
    public Configuration_tool() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        throotle_type = new javax.swing.JComboBox<>();
        LABEL_throotle_control_algorithm_output = new javax.swing.JLabel();
        throotle_control_algorithm_output = new javax.swing.JComboBox<>();
        LABEL_throotle_type = new javax.swing.JLabel();
        LABEL_torque_sensor_control_algorithm_output = new javax.swing.JLabel();
        torque_sensor_control_algorithm_output = new javax.swing.JComboBox<>();
        pas_number_of_magnets = new javax.swing.JTextField();
        LABEL_pas_number_of_magnets = new javax.swing.JLabel();
        LABEL_pedal_max_cadence_in_rpm = new javax.swing.JLabel();
        pedal_max_cadence_in_rpm = new javax.swing.JTextField();
        LABEL_pas_rotation_direction = new javax.swing.JLabel();
        pas_rotation_direction = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        LABEL_pas_number_of_magnets1 = new javax.swing.JLabel();
        pas_number_of_magnets1 = new javax.swing.JTextField();
        LABEL_pas_number_of_magnets2 = new javax.swing.JLabel();
        pas_number_of_magnets2 = new javax.swing.JTextField();
        LABEL_pas_number_of_magnets3 = new javax.swing.JLabel();
        pas_number_of_magnets3 = new javax.swing.JTextField();
        LABEL_pas_number_of_magnets4 = new javax.swing.JLabel();
        pas_number_of_magnets4 = new javax.swing.JTextField();
        LABEL_pas_number_of_magnets5 = new javax.swing.JLabel();
        pas_number_of_magnets5 = new javax.swing.JTextField();
        LABEL_pas_number_of_magnets6 = new javax.swing.JLabel();
        pas_number_of_magnets6 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flexible OpenSource EBike firmware: Configuration tool");
        setBounds(new java.awt.Rectangle(0, 0, 500, 500));
        setMinimumSize(new java.awt.Dimension(500, 800));
        setPreferredSize(new java.awt.Dimension(500, 800));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Throotle type");

        throotle_type.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        throotle_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "throootle and/or PAS", "torque sensor" }));
        throotle_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                throotle_typeActionPerformed(evt);
            }
        });

        LABEL_throotle_control_algorithm_output.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_throotle_control_algorithm_output.setText("Throotle control algorithm output");

        throotle_control_algorithm_output.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        throotle_control_algorithm_output.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "direct PWM duty-cycle", "motor current and/or speed" }));
        throotle_control_algorithm_output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                throotle_control_algorithm_outputActionPerformed(evt);
            }
        });

        LABEL_throotle_type.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_throotle_type.setText("Choose throotle type");

        LABEL_torque_sensor_control_algorithm_output.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_torque_sensor_control_algorithm_output.setText("Torque sensor control algorithm output");
        LABEL_torque_sensor_control_algorithm_output.setVisible(false);

        torque_sensor_control_algorithm_output.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        torque_sensor_control_algorithm_output.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "direct torque value", "human power (troque * cadence)" }));
        torque_sensor_control_algorithm_output.setVisible(false);
        torque_sensor_control_algorithm_output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                torque_sensor_control_algorithm_outputActionPerformed(evt);
            }
        });

        pas_number_of_magnets.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets.setText("5");
        pas_number_of_magnets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnetsActionPerformed(evt);
            }
        });

        LABEL_pas_number_of_magnets.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets.setText("PAS number of magnets");

        LABEL_pedal_max_cadence_in_rpm.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pedal_max_cadence_in_rpm.setText("Pedal max cadence in RPM");

        pedal_max_cadence_in_rpm.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pedal_max_cadence_in_rpm.setText("80");
        pedal_max_cadence_in_rpm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedal_max_cadence_in_rpmActionPerformed(evt);
            }
        });

        LABEL_pas_rotation_direction.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_rotation_direction.setText("PAS rotation direction");

        pas_rotation_direction.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_rotation_direction.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "left", "right" }));
        pas_rotation_direction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_rotation_directionActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel2.setText("LCD");

        LABEL_pas_number_of_magnets1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets1.setText("Assist level 0");

        pas_number_of_magnets1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets1.setText("0.0");
        pas_number_of_magnets1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnets1ActionPerformed(evt);
            }
        });

        LABEL_pas_number_of_magnets2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets2.setText("Assist level 1");

        pas_number_of_magnets2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets2.setText("0.2");
        pas_number_of_magnets2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnets2ActionPerformed(evt);
            }
        });

        LABEL_pas_number_of_magnets3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets3.setText("Assist level 2");

        pas_number_of_magnets3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets3.setText("0.4");
        pas_number_of_magnets3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnets3ActionPerformed(evt);
            }
        });

        LABEL_pas_number_of_magnets4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets4.setText("Assist level 3");

        pas_number_of_magnets4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets4.setText("0.6");
        pas_number_of_magnets4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnets4ActionPerformed(evt);
            }
        });

        LABEL_pas_number_of_magnets5.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets5.setText("Assist level 4");

        pas_number_of_magnets5.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets5.setText("0.8");
        pas_number_of_magnets5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnets5ActionPerformed(evt);
            }
        });

        LABEL_pas_number_of_magnets6.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        LABEL_pas_number_of_magnets6.setText("Assist level 3");

        pas_number_of_magnets6.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        pas_number_of_magnets6.setText("0.6");
        pas_number_of_magnets6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pas_number_of_magnets6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(LABEL_pas_number_of_magnets1)
                            .add(pas_number_of_magnets1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(127, 127, 127)
                        .add(jSeparator1))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 445, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pas_number_of_magnets5)
                            .add(pas_number_of_magnets5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pas_number_of_magnets6)
                            .add(pas_number_of_magnets6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pas_number_of_magnets3)
                            .add(pas_number_of_magnets3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pas_number_of_magnets4)
                            .add(pas_number_of_magnets4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pas_number_of_magnets2)
                            .add(pas_number_of_magnets2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 445, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_throotle_control_algorithm_output, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 610, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1)
                            .add(throotle_control_algorithm_output, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 400, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_throotle_type, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 610, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_torque_sensor_control_algorithm_output, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 610, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(throotle_type, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 400, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pas_number_of_magnets)
                            .add(pas_number_of_magnets, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pedal_max_cadence_in_rpm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(LABEL_pedal_max_cadence_in_rpm)
                            .add(LABEL_pas_rotation_direction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 610, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pas_rotation_direction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 400, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(torque_sensor_control_algorithm_output, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 400, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jLabel1)
                .add(20, 20, 20)
                .add(LABEL_throotle_type)
                .add(6, 6, 6)
                .add(throotle_type, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_throotle_control_algorithm_output)
                .add(6, 6, 6)
                .add(throotle_control_algorithm_output, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_torque_sensor_control_algorithm_output)
                .add(6, 6, 6)
                .add(torque_sensor_control_algorithm_output, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pas_number_of_magnets)
                .add(6, 6, 6)
                .add(pas_number_of_magnets, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pedal_max_cadence_in_rpm)
                .add(6, 6, 6)
                .add(pedal_max_cadence_in_rpm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pas_rotation_direction)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pas_rotation_direction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(jLabel2)
                .add(20, 20, 20)
                .add(LABEL_pas_number_of_magnets1)
                .add(6, 6, 6)
                .add(pas_number_of_magnets1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(LABEL_pas_number_of_magnets2)
                .add(6, 6, 6)
                .add(pas_number_of_magnets2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pas_number_of_magnets3)
                .add(6, 6, 6)
                .add(pas_number_of_magnets3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pas_number_of_magnets4)
                .add(6, 6, 6)
                .add(pas_number_of_magnets4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pas_number_of_magnets5)
                .add(6, 6, 6)
                .add(pas_number_of_magnets5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(LABEL_pas_number_of_magnets6)
                .add(6, 6, 6)
                .add(pas_number_of_magnets6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void throotle_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_throotle_typeActionPerformed
       if ("throootle and/or PAS".equals(throotle_type.getSelectedItem())){
            LABEL_throotle_control_algorithm_output.setVisible(true);
            throotle_control_algorithm_output.setVisible(true);
            LABEL_pas_number_of_magnets.setVisible(true);
            pas_number_of_magnets.setVisible(true);
            LABEL_pedal_max_cadence_in_rpm.setVisible(true);
            pedal_max_cadence_in_rpm.setVisible(true);
            LABEL_pas_rotation_direction.setVisible(true);
            pas_rotation_direction.setVisible(true);
   
            LABEL_torque_sensor_control_algorithm_output.setVisible(false);
            torque_sensor_control_algorithm_output.setVisible(false);       
       } else if ("torque sensor".equals(throotle_type.getSelectedItem())) {
            LABEL_torque_sensor_control_algorithm_output.setVisible(true);
            torque_sensor_control_algorithm_output.setVisible(true);   
           
            LABEL_throotle_control_algorithm_output.setVisible(false);
            throotle_control_algorithm_output.setVisible(false);
            LABEL_pas_number_of_magnets.setVisible(false);
            pas_number_of_magnets.setVisible(false);
            LABEL_pedal_max_cadence_in_rpm.setVisible(false);
            pedal_max_cadence_in_rpm.setVisible(false);
            LABEL_pas_rotation_direction.setVisible(false);
            pas_rotation_direction.setVisible(false);
       }
    }//GEN-LAST:event_throotle_typeActionPerformed

    private void throotle_control_algorithm_outputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_throotle_control_algorithm_outputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_throotle_control_algorithm_outputActionPerformed

    private void torque_sensor_control_algorithm_outputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_torque_sensor_control_algorithm_outputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_torque_sensor_control_algorithm_outputActionPerformed

    private void pas_number_of_magnetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnetsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnetsActionPerformed

    private void pedal_max_cadence_in_rpmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedal_max_cadence_in_rpmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pedal_max_cadence_in_rpmActionPerformed

    private void pas_rotation_directionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_rotation_directionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_rotation_directionActionPerformed

    private void pas_number_of_magnets1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnets1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnets1ActionPerformed

    private void pas_number_of_magnets2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnets2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnets2ActionPerformed

    private void pas_number_of_magnets3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnets3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnets3ActionPerformed

    private void pas_number_of_magnets4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnets4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnets4ActionPerformed

    private void pas_number_of_magnets5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnets5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnets5ActionPerformed

    private void pas_number_of_magnets6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pas_number_of_magnets6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pas_number_of_magnets6ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configuration_tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configuration_tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configuration_tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configuration_tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Configuration_tool().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LABEL_pas_number_of_magnets;
    private javax.swing.JLabel LABEL_pas_number_of_magnets1;
    private javax.swing.JLabel LABEL_pas_number_of_magnets2;
    private javax.swing.JLabel LABEL_pas_number_of_magnets3;
    private javax.swing.JLabel LABEL_pas_number_of_magnets4;
    private javax.swing.JLabel LABEL_pas_number_of_magnets5;
    private javax.swing.JLabel LABEL_pas_number_of_magnets6;
    private javax.swing.JLabel LABEL_pas_rotation_direction;
    private javax.swing.JLabel LABEL_pedal_max_cadence_in_rpm;
    private javax.swing.JLabel LABEL_throotle_control_algorithm_output;
    private javax.swing.JLabel LABEL_throotle_type;
    private javax.swing.JLabel LABEL_torque_sensor_control_algorithm_output;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField pas_number_of_magnets;
    private javax.swing.JTextField pas_number_of_magnets1;
    private javax.swing.JTextField pas_number_of_magnets2;
    private javax.swing.JTextField pas_number_of_magnets3;
    private javax.swing.JTextField pas_number_of_magnets4;
    private javax.swing.JTextField pas_number_of_magnets5;
    private javax.swing.JTextField pas_number_of_magnets6;
    private javax.swing.JComboBox<String> pas_rotation_direction;
    private javax.swing.JTextField pedal_max_cadence_in_rpm;
    private javax.swing.JComboBox<String> throotle_control_algorithm_output;
    private javax.swing.JComboBox<String> throotle_type;
    private javax.swing.JComboBox<String> torque_sensor_control_algorithm_output;
    // End of variables declaration//GEN-END:variables
    
}
