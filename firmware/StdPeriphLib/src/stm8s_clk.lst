                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CLKPrescTable
                                     12 	.globl _HSIDivFactor
                                     13 	.globl _CLK_DeInit
                                     14 	.globl _CLK_FastHaltWakeUpCmd
                                     15 	.globl _CLK_HSECmd
                                     16 	.globl _CLK_HSICmd
                                     17 	.globl _CLK_LSICmd
                                     18 	.globl _CLK_CCOCmd
                                     19 	.globl _CLK_ClockSwitchCmd
                                     20 	.globl _CLK_SlowActiveHaltWakeUpCmd
                                     21 	.globl _CLK_PeripheralClockConfig
                                     22 	.globl _CLK_ClockSwitchConfig
                                     23 	.globl _CLK_HSIPrescalerConfig
                                     24 	.globl _CLK_CCOConfig
                                     25 	.globl _CLK_ITConfig
                                     26 	.globl _CLK_SYSCLKConfig
                                     27 	.globl _CLK_SWIMConfig
                                     28 	.globl _CLK_ClockSecuritySystemEnable
                                     29 	.globl _CLK_GetSYSCLKSource
                                     30 	.globl _CLK_GetClockFreq
                                     31 	.globl _CLK_AdjustHSICalibrationValue
                                     32 	.globl _CLK_SYSCLKEmergencyClear
                                     33 	.globl _CLK_GetFlagStatus
                                     34 	.globl _CLK_GetITStatus
                                     35 	.globl _CLK_ClearITPendingBit
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area DATA
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area INITIALIZED
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DABS (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; global & static initialisations
                                     50 ;--------------------------------------------------------
                                     51 	.area HOME
                                     52 	.area GSINIT
                                     53 	.area GSFINAL
                                     54 	.area GSINIT
                                     55 ;--------------------------------------------------------
                                     56 ; Home
                                     57 ;--------------------------------------------------------
                                     58 	.area HOME
                                     59 	.area HOME
                                     60 ;--------------------------------------------------------
                                     61 ; code
                                     62 ;--------------------------------------------------------
                                     63 	.area CODE
                           000000    64 	Sstm8s_clk$CLK_DeInit$0 ==.
                                     65 ;	StdPeriphLib/src/stm8s_clk.c: 72: void CLK_DeInit(void)
                                     66 ;	-----------------------------------------
                                     67 ;	 function CLK_DeInit
                                     68 ;	-----------------------------------------
      000000                         69 _CLK_DeInit:
      000000 3Bu00u01         [ 1]   70 	push	_fp_+1
      000003 3Bu00u00         [ 1]   71 	push	_fp_
      000006 90 96            [ 1]   72 	ldw	y, sp
      000008 90 CFu00u00      [ 2]   73 	ldw	_fp_, y
                           00000C    74 	Sstm8s_clk$CLK_DeInit$1 ==.
                           00000C    75 	Sstm8s_clk$CLK_DeInit$2 ==.
                                     76 ;	StdPeriphLib/src/stm8s_clk.c: 74: CLK->ICKR = CLK_ICKR_RESET_VALUE;
      00000C 35 01 50 C0      [ 1]   77 	mov	0x50c0+0, #0x01
                           000010    78 	Sstm8s_clk$CLK_DeInit$3 ==.
                                     79 ;	StdPeriphLib/src/stm8s_clk.c: 75: CLK->ECKR = CLK_ECKR_RESET_VALUE;
      000010 35 00 50 C1      [ 1]   80 	mov	0x50c1+0, #0x00
                           000014    81 	Sstm8s_clk$CLK_DeInit$4 ==.
                                     82 ;	StdPeriphLib/src/stm8s_clk.c: 76: CLK->SWR  = CLK_SWR_RESET_VALUE;
      000014 35 E1 50 C4      [ 1]   83 	mov	0x50c4+0, #0xe1
                           000018    84 	Sstm8s_clk$CLK_DeInit$5 ==.
                                     85 ;	StdPeriphLib/src/stm8s_clk.c: 77: CLK->SWCR = CLK_SWCR_RESET_VALUE;
      000018 35 00 50 C5      [ 1]   86 	mov	0x50c5+0, #0x00
                           00001C    87 	Sstm8s_clk$CLK_DeInit$6 ==.
                                     88 ;	StdPeriphLib/src/stm8s_clk.c: 78: CLK->CKDIVR = CLK_CKDIVR_RESET_VALUE;
      00001C 35 18 50 C6      [ 1]   89 	mov	0x50c6+0, #0x18
                           000020    90 	Sstm8s_clk$CLK_DeInit$7 ==.
                                     91 ;	StdPeriphLib/src/stm8s_clk.c: 79: CLK->PCKENR1 = CLK_PCKENR1_RESET_VALUE;
      000020 35 FF 50 C7      [ 1]   92 	mov	0x50c7+0, #0xff
                           000024    93 	Sstm8s_clk$CLK_DeInit$8 ==.
                                     94 ;	StdPeriphLib/src/stm8s_clk.c: 80: CLK->PCKENR2 = CLK_PCKENR2_RESET_VALUE;
      000024 35 FF 50 CA      [ 1]   95 	mov	0x50ca+0, #0xff
                           000028    96 	Sstm8s_clk$CLK_DeInit$9 ==.
                                     97 ;	StdPeriphLib/src/stm8s_clk.c: 81: CLK->CSSR = CLK_CSSR_RESET_VALUE;
      000028 35 00 50 C8      [ 1]   98 	mov	0x50c8+0, #0x00
                           00002C    99 	Sstm8s_clk$CLK_DeInit$10 ==.
                                    100 ;	StdPeriphLib/src/stm8s_clk.c: 82: CLK->CCOR = CLK_CCOR_RESET_VALUE;
      00002C 35 00 50 C9      [ 1]  101 	mov	0x50c9+0, #0x00
                           000030   102 	Sstm8s_clk$CLK_DeInit$11 ==.
                                    103 ;	StdPeriphLib/src/stm8s_clk.c: 83: while ((CLK->CCOR & CLK_CCOR_CCOEN)!= 0)
      000030                        104 00101$:
      000030 AE 50 C9         [ 2]  105 	ldw	x, #0x50c9
      000033 F6               [ 1]  106 	ld	a, (x)
      000034 44               [ 1]  107 	srl	a
      000035 25 F9            [ 1]  108 	jrc	00101$
                           000037   109 	Sstm8s_clk$CLK_DeInit$12 ==.
                                    110 ;	StdPeriphLib/src/stm8s_clk.c: 85: CLK->CCOR = CLK_CCOR_RESET_VALUE;
      000037 35 00 50 C9      [ 1]  111 	mov	0x50c9+0, #0x00
                           00003B   112 	Sstm8s_clk$CLK_DeInit$13 ==.
                                    113 ;	StdPeriphLib/src/stm8s_clk.c: 86: CLK->HSITRIMR = CLK_HSITRIMR_RESET_VALUE;
      00003B 35 00 50 CC      [ 1]  114 	mov	0x50cc+0, #0x00
                           00003F   115 	Sstm8s_clk$CLK_DeInit$14 ==.
                                    116 ;	StdPeriphLib/src/stm8s_clk.c: 87: CLK->SWIMCCR = CLK_SWIMCCR_RESET_VALUE;
      00003F 35 00 50 CD      [ 1]  117 	mov	0x50cd+0, #0x00
                           000043   118 	Sstm8s_clk$CLK_DeInit$15 ==.
                                    119 ;	StdPeriphLib/src/stm8s_clk.c: 88: }
                           000043   120 	Sstm8s_clk$CLK_DeInit$16 ==.
                           000043   121 	XG$CLK_DeInit$0$0 ==.
      000043 32u00u00         [ 1]  122 	pop	_fp_
      000046 32u00u01         [ 1]  123 	pop	_fp_+1
      000049 81               [ 4]  124 	ret
                           00004A   125 	Sstm8s_clk$CLK_DeInit$17 ==.
                           00004A   126 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$18 ==.
                                    127 ;	StdPeriphLib/src/stm8s_clk.c: 99: void CLK_FastHaltWakeUpCmd(FunctionalState NewState)
                                    128 ;	-----------------------------------------
                                    129 ;	 function CLK_FastHaltWakeUpCmd
                                    130 ;	-----------------------------------------
      00004A                        131 _CLK_FastHaltWakeUpCmd:
      00004A 3Bu00u01         [ 1]  132 	push	_fp_+1
      00004D 3Bu00u00         [ 1]  133 	push	_fp_
      000050 90 96            [ 1]  134 	ldw	y, sp
      000052 90 CFu00u00      [ 2]  135 	ldw	_fp_, y
                           000056   136 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$19 ==.
                           000056   137 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$20 ==.
                                    138 ;	StdPeriphLib/src/stm8s_clk.c: 104: if (NewState != DISABLE)
      000056 0D 05            [ 1]  139 	tnz	(0x05, sp)
      000058 27 09            [ 1]  140 	jreq	00102$
                           00005A   141 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$21 ==.
                                    142 ;	StdPeriphLib/src/stm8s_clk.c: 107: CLK->ICKR |= CLK_ICKR_FHWU;
      00005A AE 50 C0         [ 2]  143 	ldw	x, #0x50c0
      00005D F6               [ 1]  144 	ld	a, (x)
      00005E AA 04            [ 1]  145 	or	a, #0x04
      000060 F7               [ 1]  146 	ld	(x), a
      000061 20 07            [ 2]  147 	jra	00104$
      000063                        148 00102$:
                           000063   149 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$22 ==.
                                    150 ;	StdPeriphLib/src/stm8s_clk.c: 112: CLK->ICKR &= (uint8_t)(~CLK_ICKR_FHWU);
      000063 AE 50 C0         [ 2]  151 	ldw	x, #0x50c0
      000066 F6               [ 1]  152 	ld	a, (x)
      000067 A4 FB            [ 1]  153 	and	a, #0xfb
      000069 F7               [ 1]  154 	ld	(x), a
      00006A                        155 00104$:
                           00006A   156 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$23 ==.
                                    157 ;	StdPeriphLib/src/stm8s_clk.c: 114: }
                           00006A   158 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$24 ==.
                           00006A   159 	XG$CLK_FastHaltWakeUpCmd$0$0 ==.
      00006A 32u00u00         [ 1]  160 	pop	_fp_
      00006D 32u00u01         [ 1]  161 	pop	_fp_+1
      000070 81               [ 4]  162 	ret
                           000071   163 	Sstm8s_clk$CLK_FastHaltWakeUpCmd$25 ==.
                           000071   164 	Sstm8s_clk$CLK_HSECmd$26 ==.
                                    165 ;	StdPeriphLib/src/stm8s_clk.c: 121: void CLK_HSECmd(FunctionalState NewState)
                                    166 ;	-----------------------------------------
                                    167 ;	 function CLK_HSECmd
                                    168 ;	-----------------------------------------
      000071                        169 _CLK_HSECmd:
      000071 3Bu00u01         [ 1]  170 	push	_fp_+1
      000074 3Bu00u00         [ 1]  171 	push	_fp_
      000077 90 96            [ 1]  172 	ldw	y, sp
      000079 90 CFu00u00      [ 2]  173 	ldw	_fp_, y
                           00007D   174 	Sstm8s_clk$CLK_HSECmd$27 ==.
                           00007D   175 	Sstm8s_clk$CLK_HSECmd$28 ==.
                                    176 ;	StdPeriphLib/src/stm8s_clk.c: 126: if (NewState != DISABLE)
      00007D 0D 05            [ 1]  177 	tnz	(0x05, sp)
      00007F 27 06            [ 1]  178 	jreq	00102$
                           000081   179 	Sstm8s_clk$CLK_HSECmd$29 ==.
                                    180 ;	StdPeriphLib/src/stm8s_clk.c: 129: CLK->ECKR |= CLK_ECKR_HSEEN;
      000081 72 10 50 C1      [ 1]  181 	bset	0x50c1, #0
      000085 20 04            [ 2]  182 	jra	00104$
      000087                        183 00102$:
                           000087   184 	Sstm8s_clk$CLK_HSECmd$30 ==.
                                    185 ;	StdPeriphLib/src/stm8s_clk.c: 134: CLK->ECKR &= (uint8_t)(~CLK_ECKR_HSEEN);
      000087 72 11 50 C1      [ 1]  186 	bres	0x50c1, #0
      00008B                        187 00104$:
                           00008B   188 	Sstm8s_clk$CLK_HSECmd$31 ==.
                                    189 ;	StdPeriphLib/src/stm8s_clk.c: 136: }
                           00008B   190 	Sstm8s_clk$CLK_HSECmd$32 ==.
                           00008B   191 	XG$CLK_HSECmd$0$0 ==.
      00008B 32u00u00         [ 1]  192 	pop	_fp_
      00008E 32u00u01         [ 1]  193 	pop	_fp_+1
      000091 81               [ 4]  194 	ret
                           000092   195 	Sstm8s_clk$CLK_HSECmd$33 ==.
                           000092   196 	Sstm8s_clk$CLK_HSICmd$34 ==.
                                    197 ;	StdPeriphLib/src/stm8s_clk.c: 143: void CLK_HSICmd(FunctionalState NewState)
                                    198 ;	-----------------------------------------
                                    199 ;	 function CLK_HSICmd
                                    200 ;	-----------------------------------------
      000092                        201 _CLK_HSICmd:
      000092 3Bu00u01         [ 1]  202 	push	_fp_+1
      000095 3Bu00u00         [ 1]  203 	push	_fp_
      000098 90 96            [ 1]  204 	ldw	y, sp
      00009A 90 CFu00u00      [ 2]  205 	ldw	_fp_, y
                           00009E   206 	Sstm8s_clk$CLK_HSICmd$35 ==.
                           00009E   207 	Sstm8s_clk$CLK_HSICmd$36 ==.
                                    208 ;	StdPeriphLib/src/stm8s_clk.c: 148: if (NewState != DISABLE)
      00009E 0D 05            [ 1]  209 	tnz	(0x05, sp)
      0000A0 27 06            [ 1]  210 	jreq	00102$
                           0000A2   211 	Sstm8s_clk$CLK_HSICmd$37 ==.
                                    212 ;	StdPeriphLib/src/stm8s_clk.c: 151: CLK->ICKR |= CLK_ICKR_HSIEN;
      0000A2 72 10 50 C0      [ 1]  213 	bset	0x50c0, #0
      0000A6 20 04            [ 2]  214 	jra	00104$
      0000A8                        215 00102$:
                           0000A8   216 	Sstm8s_clk$CLK_HSICmd$38 ==.
                                    217 ;	StdPeriphLib/src/stm8s_clk.c: 156: CLK->ICKR &= (uint8_t)(~CLK_ICKR_HSIEN);
      0000A8 72 11 50 C0      [ 1]  218 	bres	0x50c0, #0
      0000AC                        219 00104$:
                           0000AC   220 	Sstm8s_clk$CLK_HSICmd$39 ==.
                                    221 ;	StdPeriphLib/src/stm8s_clk.c: 158: }
                           0000AC   222 	Sstm8s_clk$CLK_HSICmd$40 ==.
                           0000AC   223 	XG$CLK_HSICmd$0$0 ==.
      0000AC 32u00u00         [ 1]  224 	pop	_fp_
      0000AF 32u00u01         [ 1]  225 	pop	_fp_+1
      0000B2 81               [ 4]  226 	ret
                           0000B3   227 	Sstm8s_clk$CLK_HSICmd$41 ==.
                           0000B3   228 	Sstm8s_clk$CLK_LSICmd$42 ==.
                                    229 ;	StdPeriphLib/src/stm8s_clk.c: 166: void CLK_LSICmd(FunctionalState NewState)
                                    230 ;	-----------------------------------------
                                    231 ;	 function CLK_LSICmd
                                    232 ;	-----------------------------------------
      0000B3                        233 _CLK_LSICmd:
      0000B3 3Bu00u01         [ 1]  234 	push	_fp_+1
      0000B6 3Bu00u00         [ 1]  235 	push	_fp_
      0000B9 90 96            [ 1]  236 	ldw	y, sp
      0000BB 90 CFu00u00      [ 2]  237 	ldw	_fp_, y
                           0000BF   238 	Sstm8s_clk$CLK_LSICmd$43 ==.
                           0000BF   239 	Sstm8s_clk$CLK_LSICmd$44 ==.
                                    240 ;	StdPeriphLib/src/stm8s_clk.c: 171: if (NewState != DISABLE)
      0000BF 0D 05            [ 1]  241 	tnz	(0x05, sp)
      0000C1 27 09            [ 1]  242 	jreq	00102$
                           0000C3   243 	Sstm8s_clk$CLK_LSICmd$45 ==.
                                    244 ;	StdPeriphLib/src/stm8s_clk.c: 174: CLK->ICKR |= CLK_ICKR_LSIEN;
      0000C3 AE 50 C0         [ 2]  245 	ldw	x, #0x50c0
      0000C6 F6               [ 1]  246 	ld	a, (x)
      0000C7 AA 08            [ 1]  247 	or	a, #0x08
      0000C9 F7               [ 1]  248 	ld	(x), a
      0000CA 20 07            [ 2]  249 	jra	00104$
      0000CC                        250 00102$:
                           0000CC   251 	Sstm8s_clk$CLK_LSICmd$46 ==.
                                    252 ;	StdPeriphLib/src/stm8s_clk.c: 179: CLK->ICKR &= (uint8_t)(~CLK_ICKR_LSIEN);
      0000CC AE 50 C0         [ 2]  253 	ldw	x, #0x50c0
      0000CF F6               [ 1]  254 	ld	a, (x)
      0000D0 A4 F7            [ 1]  255 	and	a, #0xf7
      0000D2 F7               [ 1]  256 	ld	(x), a
      0000D3                        257 00104$:
                           0000D3   258 	Sstm8s_clk$CLK_LSICmd$47 ==.
                                    259 ;	StdPeriphLib/src/stm8s_clk.c: 181: }
                           0000D3   260 	Sstm8s_clk$CLK_LSICmd$48 ==.
                           0000D3   261 	XG$CLK_LSICmd$0$0 ==.
      0000D3 32u00u00         [ 1]  262 	pop	_fp_
      0000D6 32u00u01         [ 1]  263 	pop	_fp_+1
      0000D9 81               [ 4]  264 	ret
                           0000DA   265 	Sstm8s_clk$CLK_LSICmd$49 ==.
                           0000DA   266 	Sstm8s_clk$CLK_CCOCmd$50 ==.
                                    267 ;	StdPeriphLib/src/stm8s_clk.c: 189: void CLK_CCOCmd(FunctionalState NewState)
                                    268 ;	-----------------------------------------
                                    269 ;	 function CLK_CCOCmd
                                    270 ;	-----------------------------------------
      0000DA                        271 _CLK_CCOCmd:
      0000DA 3Bu00u01         [ 1]  272 	push	_fp_+1
      0000DD 3Bu00u00         [ 1]  273 	push	_fp_
      0000E0 90 96            [ 1]  274 	ldw	y, sp
      0000E2 90 CFu00u00      [ 2]  275 	ldw	_fp_, y
                           0000E6   276 	Sstm8s_clk$CLK_CCOCmd$51 ==.
                           0000E6   277 	Sstm8s_clk$CLK_CCOCmd$52 ==.
                                    278 ;	StdPeriphLib/src/stm8s_clk.c: 194: if (NewState != DISABLE)
      0000E6 0D 05            [ 1]  279 	tnz	(0x05, sp)
      0000E8 27 06            [ 1]  280 	jreq	00102$
                           0000EA   281 	Sstm8s_clk$CLK_CCOCmd$53 ==.
                                    282 ;	StdPeriphLib/src/stm8s_clk.c: 197: CLK->CCOR |= CLK_CCOR_CCOEN;
      0000EA 72 10 50 C9      [ 1]  283 	bset	0x50c9, #0
      0000EE 20 04            [ 2]  284 	jra	00104$
      0000F0                        285 00102$:
                           0000F0   286 	Sstm8s_clk$CLK_CCOCmd$54 ==.
                                    287 ;	StdPeriphLib/src/stm8s_clk.c: 202: CLK->CCOR &= (uint8_t)(~CLK_CCOR_CCOEN);
      0000F0 72 11 50 C9      [ 1]  288 	bres	0x50c9, #0
      0000F4                        289 00104$:
                           0000F4   290 	Sstm8s_clk$CLK_CCOCmd$55 ==.
                                    291 ;	StdPeriphLib/src/stm8s_clk.c: 204: }
                           0000F4   292 	Sstm8s_clk$CLK_CCOCmd$56 ==.
                           0000F4   293 	XG$CLK_CCOCmd$0$0 ==.
      0000F4 32u00u00         [ 1]  294 	pop	_fp_
      0000F7 32u00u01         [ 1]  295 	pop	_fp_+1
      0000FA 81               [ 4]  296 	ret
                           0000FB   297 	Sstm8s_clk$CLK_CCOCmd$57 ==.
                           0000FB   298 	Sstm8s_clk$CLK_ClockSwitchCmd$58 ==.
                                    299 ;	StdPeriphLib/src/stm8s_clk.c: 213: void CLK_ClockSwitchCmd(FunctionalState NewState)
                                    300 ;	-----------------------------------------
                                    301 ;	 function CLK_ClockSwitchCmd
                                    302 ;	-----------------------------------------
      0000FB                        303 _CLK_ClockSwitchCmd:
      0000FB 3Bu00u01         [ 1]  304 	push	_fp_+1
      0000FE 3Bu00u00         [ 1]  305 	push	_fp_
      000101 90 96            [ 1]  306 	ldw	y, sp
      000103 90 CFu00u00      [ 2]  307 	ldw	_fp_, y
                           000107   308 	Sstm8s_clk$CLK_ClockSwitchCmd$59 ==.
                           000107   309 	Sstm8s_clk$CLK_ClockSwitchCmd$60 ==.
                                    310 ;	StdPeriphLib/src/stm8s_clk.c: 218: if (NewState != DISABLE )
      000107 0D 05            [ 1]  311 	tnz	(0x05, sp)
      000109 27 09            [ 1]  312 	jreq	00102$
                           00010B   313 	Sstm8s_clk$CLK_ClockSwitchCmd$61 ==.
                                    314 ;	StdPeriphLib/src/stm8s_clk.c: 221: CLK->SWCR |= CLK_SWCR_SWEN;
      00010B AE 50 C5         [ 2]  315 	ldw	x, #0x50c5
      00010E F6               [ 1]  316 	ld	a, (x)
      00010F AA 02            [ 1]  317 	or	a, #0x02
      000111 F7               [ 1]  318 	ld	(x), a
      000112 20 07            [ 2]  319 	jra	00104$
      000114                        320 00102$:
                           000114   321 	Sstm8s_clk$CLK_ClockSwitchCmd$62 ==.
                                    322 ;	StdPeriphLib/src/stm8s_clk.c: 226: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWEN);
      000114 AE 50 C5         [ 2]  323 	ldw	x, #0x50c5
      000117 F6               [ 1]  324 	ld	a, (x)
      000118 A4 FD            [ 1]  325 	and	a, #0xfd
      00011A F7               [ 1]  326 	ld	(x), a
      00011B                        327 00104$:
                           00011B   328 	Sstm8s_clk$CLK_ClockSwitchCmd$63 ==.
                                    329 ;	StdPeriphLib/src/stm8s_clk.c: 228: }
                           00011B   330 	Sstm8s_clk$CLK_ClockSwitchCmd$64 ==.
                           00011B   331 	XG$CLK_ClockSwitchCmd$0$0 ==.
      00011B 32u00u00         [ 1]  332 	pop	_fp_
      00011E 32u00u01         [ 1]  333 	pop	_fp_+1
      000121 81               [ 4]  334 	ret
                           000122   335 	Sstm8s_clk$CLK_ClockSwitchCmd$65 ==.
                           000122   336 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$66 ==.
                                    337 ;	StdPeriphLib/src/stm8s_clk.c: 238: void CLK_SlowActiveHaltWakeUpCmd(FunctionalState NewState)
                                    338 ;	-----------------------------------------
                                    339 ;	 function CLK_SlowActiveHaltWakeUpCmd
                                    340 ;	-----------------------------------------
      000122                        341 _CLK_SlowActiveHaltWakeUpCmd:
      000122 3Bu00u01         [ 1]  342 	push	_fp_+1
      000125 3Bu00u00         [ 1]  343 	push	_fp_
      000128 90 96            [ 1]  344 	ldw	y, sp
      00012A 90 CFu00u00      [ 2]  345 	ldw	_fp_, y
                           00012E   346 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$67 ==.
                           00012E   347 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$68 ==.
                                    348 ;	StdPeriphLib/src/stm8s_clk.c: 243: if (NewState != DISABLE)
      00012E 0D 05            [ 1]  349 	tnz	(0x05, sp)
      000130 27 09            [ 1]  350 	jreq	00102$
                           000132   351 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$69 ==.
                                    352 ;	StdPeriphLib/src/stm8s_clk.c: 246: CLK->ICKR |= CLK_ICKR_SWUAH;
      000132 AE 50 C0         [ 2]  353 	ldw	x, #0x50c0
      000135 F6               [ 1]  354 	ld	a, (x)
      000136 AA 20            [ 1]  355 	or	a, #0x20
      000138 F7               [ 1]  356 	ld	(x), a
      000139 20 07            [ 2]  357 	jra	00104$
      00013B                        358 00102$:
                           00013B   359 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$70 ==.
                                    360 ;	StdPeriphLib/src/stm8s_clk.c: 251: CLK->ICKR &= (uint8_t)(~CLK_ICKR_SWUAH);
      00013B AE 50 C0         [ 2]  361 	ldw	x, #0x50c0
      00013E F6               [ 1]  362 	ld	a, (x)
      00013F A4 DF            [ 1]  363 	and	a, #0xdf
      000141 F7               [ 1]  364 	ld	(x), a
      000142                        365 00104$:
                           000142   366 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$71 ==.
                                    367 ;	StdPeriphLib/src/stm8s_clk.c: 253: }
                           000142   368 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$72 ==.
                           000142   369 	XG$CLK_SlowActiveHaltWakeUpCmd$0$0 ==.
      000142 32u00u00         [ 1]  370 	pop	_fp_
      000145 32u00u01         [ 1]  371 	pop	_fp_+1
      000148 81               [ 4]  372 	ret
                           000149   373 	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$73 ==.
                           000149   374 	Sstm8s_clk$CLK_PeripheralClockConfig$74 ==.
                                    375 ;	StdPeriphLib/src/stm8s_clk.c: 263: void CLK_PeripheralClockConfig(CLK_Peripheral_TypeDef CLK_Peripheral, FunctionalState NewState)
                                    376 ;	-----------------------------------------
                                    377 ;	 function CLK_PeripheralClockConfig
                                    378 ;	-----------------------------------------
      000149                        379 _CLK_PeripheralClockConfig:
      000149 3Bu00u01         [ 1]  380 	push	_fp_+1
      00014C 3Bu00u00         [ 1]  381 	push	_fp_
      00014F 90 96            [ 1]  382 	ldw	y, sp
      000151 90 CFu00u00      [ 2]  383 	ldw	_fp_, y
                           000155   384 	Sstm8s_clk$CLK_PeripheralClockConfig$75 ==.
      000155 52 04            [ 2]  385 	sub	sp, #4
                           000157   386 	Sstm8s_clk$CLK_PeripheralClockConfig$76 ==.
                                    387 ;	StdPeriphLib/src/stm8s_clk.c: 269: if (((uint8_t)CLK_Peripheral & (uint8_t)0x10) == 0x00)
      000157 7B 09            [ 1]  388 	ld	a, (0x09, sp)
      000159 A5 10            [ 1]  389 	bcp	a, #0x10
      00015B 26 46            [ 1]  390 	jrne	00108$
                           00015D   391 	Sstm8s_clk$CLK_PeripheralClockConfig$77 ==.
                                    392 ;	StdPeriphLib/src/stm8s_clk.c: 271: if (NewState != DISABLE)
      00015D 0D 0A            [ 1]  393 	tnz	(0x0a, sp)
      00015F 27 21            [ 1]  394 	jreq	00102$
                           000161   395 	Sstm8s_clk$CLK_PeripheralClockConfig$78 ==.
                                    396 ;	StdPeriphLib/src/stm8s_clk.c: 274: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      000161 AE 50 C7         [ 2]  397 	ldw	x, #0x50c7
      000164 F6               [ 1]  398 	ld	a, (x)
      000165 97               [ 1]  399 	ld	xl, a
      000166 7B 09            [ 1]  400 	ld	a, (0x09, sp)
      000168 A4 0F            [ 1]  401 	and	a, #0x0f
      00016A 88               [ 1]  402 	push	a
      00016B A6 01            [ 1]  403 	ld	a, #0x01
      00016D 6B 05            [ 1]  404 	ld	(0x05, sp), a
      00016F 84               [ 1]  405 	pop	a
      000170 4D               [ 1]  406 	tnz	a
      000171 27 05            [ 1]  407 	jreq	00124$
      000173                        408 00123$:
      000173 08 04            [ 1]  409 	sll	(0x04, sp)
      000175 4A               [ 1]  410 	dec	a
      000176 26 FB            [ 1]  411 	jrne	00123$
      000178                        412 00124$:
      000178 9F               [ 1]  413 	ld	a, xl
      000179 1A 04            [ 1]  414 	or	a, (0x04, sp)
      00017B AE 50 C7         [ 2]  415 	ldw	x, #0x50c7
      00017E F7               [ 1]  416 	ld	(x), a
      00017F CCr01rE6         [ 2]  417 	jp	00110$
      000182                        418 00102$:
                           000182   419 	Sstm8s_clk$CLK_PeripheralClockConfig$79 ==.
                                    420 ;	StdPeriphLib/src/stm8s_clk.c: 279: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      000182 AE 50 C7         [ 2]  421 	ldw	x, #0x50c7
      000185 F6               [ 1]  422 	ld	a, (x)
      000186 6B 03            [ 1]  423 	ld	(0x03, sp), a
      000188 7B 09            [ 1]  424 	ld	a, (0x09, sp)
      00018A A4 0F            [ 1]  425 	and	a, #0x0f
      00018C 97               [ 1]  426 	ld	xl, a
      00018D A6 01            [ 1]  427 	ld	a, #0x01
      00018F 88               [ 1]  428 	push	a
      000190 9F               [ 1]  429 	ld	a, xl
      000191 4D               [ 1]  430 	tnz	a
      000192 27 05            [ 1]  431 	jreq	00126$
      000194                        432 00125$:
      000194 08 01            [ 1]  433 	sll	(1, sp)
      000196 4A               [ 1]  434 	dec	a
      000197 26 FB            [ 1]  435 	jrne	00125$
      000199                        436 00126$:
      000199 84               [ 1]  437 	pop	a
      00019A 43               [ 1]  438 	cpl	a
      00019B 14 03            [ 1]  439 	and	a, (0x03, sp)
      00019D AE 50 C7         [ 2]  440 	ldw	x, #0x50c7
      0001A0 F7               [ 1]  441 	ld	(x), a
      0001A1 20 43            [ 2]  442 	jra	00110$
      0001A3                        443 00108$:
                           0001A3   444 	Sstm8s_clk$CLK_PeripheralClockConfig$80 ==.
                                    445 ;	StdPeriphLib/src/stm8s_clk.c: 284: if (NewState != DISABLE)
      0001A3 0D 0A            [ 1]  446 	tnz	(0x0a, sp)
      0001A5 27 20            [ 1]  447 	jreq	00105$
                           0001A7   448 	Sstm8s_clk$CLK_PeripheralClockConfig$81 ==.
                                    449 ;	StdPeriphLib/src/stm8s_clk.c: 287: CLK->PCKENR2 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      0001A7 AE 50 CA         [ 2]  450 	ldw	x, #0x50ca
      0001AA F6               [ 1]  451 	ld	a, (x)
      0001AB 97               [ 1]  452 	ld	xl, a
      0001AC 7B 09            [ 1]  453 	ld	a, (0x09, sp)
      0001AE A4 0F            [ 1]  454 	and	a, #0x0f
      0001B0 88               [ 1]  455 	push	a
      0001B1 A6 01            [ 1]  456 	ld	a, #0x01
      0001B3 6B 03            [ 1]  457 	ld	(0x03, sp), a
      0001B5 84               [ 1]  458 	pop	a
      0001B6 4D               [ 1]  459 	tnz	a
      0001B7 27 05            [ 1]  460 	jreq	00129$
      0001B9                        461 00128$:
      0001B9 08 02            [ 1]  462 	sll	(0x02, sp)
      0001BB 4A               [ 1]  463 	dec	a
      0001BC 26 FB            [ 1]  464 	jrne	00128$
      0001BE                        465 00129$:
      0001BE 9F               [ 1]  466 	ld	a, xl
      0001BF 1A 02            [ 1]  467 	or	a, (0x02, sp)
      0001C1 AE 50 CA         [ 2]  468 	ldw	x, #0x50ca
      0001C4 F7               [ 1]  469 	ld	(x), a
      0001C5 20 1F            [ 2]  470 	jra	00110$
      0001C7                        471 00105$:
                           0001C7   472 	Sstm8s_clk$CLK_PeripheralClockConfig$82 ==.
                                    473 ;	StdPeriphLib/src/stm8s_clk.c: 292: CLK->PCKENR2 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      0001C7 AE 50 CA         [ 2]  474 	ldw	x, #0x50ca
      0001CA F6               [ 1]  475 	ld	a, (x)
      0001CB 6B 01            [ 1]  476 	ld	(0x01, sp), a
      0001CD 7B 09            [ 1]  477 	ld	a, (0x09, sp)
      0001CF A4 0F            [ 1]  478 	and	a, #0x0f
      0001D1 97               [ 1]  479 	ld	xl, a
      0001D2 A6 01            [ 1]  480 	ld	a, #0x01
      0001D4 88               [ 1]  481 	push	a
      0001D5 9F               [ 1]  482 	ld	a, xl
      0001D6 4D               [ 1]  483 	tnz	a
      0001D7 27 05            [ 1]  484 	jreq	00131$
      0001D9                        485 00130$:
      0001D9 08 01            [ 1]  486 	sll	(1, sp)
      0001DB 4A               [ 1]  487 	dec	a
      0001DC 26 FB            [ 1]  488 	jrne	00130$
      0001DE                        489 00131$:
      0001DE 84               [ 1]  490 	pop	a
      0001DF 43               [ 1]  491 	cpl	a
      0001E0 14 01            [ 1]  492 	and	a, (0x01, sp)
      0001E2 AE 50 CA         [ 2]  493 	ldw	x, #0x50ca
      0001E5 F7               [ 1]  494 	ld	(x), a
      0001E6                        495 00110$:
                           0001E6   496 	Sstm8s_clk$CLK_PeripheralClockConfig$83 ==.
                                    497 ;	StdPeriphLib/src/stm8s_clk.c: 295: }
      0001E6 5B 04            [ 2]  498 	addw	sp, #4
                           0001E8   499 	Sstm8s_clk$CLK_PeripheralClockConfig$84 ==.
                           0001E8   500 	XG$CLK_PeripheralClockConfig$0$0 ==.
      0001E8 32u00u00         [ 1]  501 	pop	_fp_
      0001EB 32u00u01         [ 1]  502 	pop	_fp_+1
      0001EE 81               [ 4]  503 	ret
                           0001EF   504 	Sstm8s_clk$CLK_PeripheralClockConfig$85 ==.
                           0001EF   505 	Sstm8s_clk$CLK_ClockSwitchConfig$86 ==.
                                    506 ;	StdPeriphLib/src/stm8s_clk.c: 309: ErrorStatus CLK_ClockSwitchConfig(CLK_SwitchMode_TypeDef CLK_SwitchMode, CLK_Source_TypeDef CLK_NewClock, FunctionalState ITState, CLK_CurrentClockState_TypeDef CLK_CurrentClockState)
                                    507 ;	-----------------------------------------
                                    508 ;	 function CLK_ClockSwitchConfig
                                    509 ;	-----------------------------------------
      0001EF                        510 _CLK_ClockSwitchConfig:
      0001EF 3Bu00u01         [ 1]  511 	push	_fp_+1
      0001F2 3Bu00u00         [ 1]  512 	push	_fp_
      0001F5 90 96            [ 1]  513 	ldw	y, sp
      0001F7 90 CFu00u00      [ 2]  514 	ldw	_fp_, y
                           0001FB   515 	Sstm8s_clk$CLK_ClockSwitchConfig$87 ==.
      0001FB 52 02            [ 2]  516 	sub	sp, #2
                           0001FD   517 	Sstm8s_clk$CLK_ClockSwitchConfig$88 ==.
                                    518 ;	StdPeriphLib/src/stm8s_clk.c: 322: clock_master = (CLK_Source_TypeDef)CLK->CMSR;
      0001FD AE 50 C3         [ 2]  519 	ldw	x, #0x50c3
      000200 F6               [ 1]  520 	ld	a, (x)
      000201 6B 02            [ 1]  521 	ld	(0x02, sp), a
                           000203   522 	Sstm8s_clk$CLK_ClockSwitchConfig$89 ==.
                                    523 ;	StdPeriphLib/src/stm8s_clk.c: 325: if (CLK_SwitchMode == CLK_SWITCHMODE_AUTO)
      000203 7B 07            [ 1]  524 	ld	a, (0x07, sp)
      000205 A1 01            [ 1]  525 	cp	a, #0x01
      000207 26 40            [ 1]  526 	jrne	00122$
                           000209   527 	Sstm8s_clk$CLK_ClockSwitchConfig$90 ==.
                                    528 ;	StdPeriphLib/src/stm8s_clk.c: 328: CLK->SWCR |= CLK_SWCR_SWEN;
      000209 AE 50 C5         [ 2]  529 	ldw	x, #0x50c5
      00020C F6               [ 1]  530 	ld	a, (x)
      00020D AA 02            [ 1]  531 	or	a, #0x02
      00020F F7               [ 1]  532 	ld	(x), a
                           000210   533 	Sstm8s_clk$CLK_ClockSwitchConfig$91 ==.
                                    534 ;	StdPeriphLib/src/stm8s_clk.c: 331: if (ITState != DISABLE)
      000210 0D 09            [ 1]  535 	tnz	(0x09, sp)
      000212 27 09            [ 1]  536 	jreq	00102$
                           000214   537 	Sstm8s_clk$CLK_ClockSwitchConfig$92 ==.
                                    538 ;	StdPeriphLib/src/stm8s_clk.c: 333: CLK->SWCR |= CLK_SWCR_SWIEN;
      000214 AE 50 C5         [ 2]  539 	ldw	x, #0x50c5
      000217 F6               [ 1]  540 	ld	a, (x)
      000218 AA 04            [ 1]  541 	or	a, #0x04
      00021A F7               [ 1]  542 	ld	(x), a
      00021B 20 07            [ 2]  543 	jra	00103$
      00021D                        544 00102$:
                           00021D   545 	Sstm8s_clk$CLK_ClockSwitchConfig$93 ==.
                                    546 ;	StdPeriphLib/src/stm8s_clk.c: 337: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWIEN);
      00021D AE 50 C5         [ 2]  547 	ldw	x, #0x50c5
      000220 F6               [ 1]  548 	ld	a, (x)
      000221 A4 FB            [ 1]  549 	and	a, #0xfb
      000223 F7               [ 1]  550 	ld	(x), a
      000224                        551 00103$:
                           000224   552 	Sstm8s_clk$CLK_ClockSwitchConfig$94 ==.
                                    553 ;	StdPeriphLib/src/stm8s_clk.c: 341: CLK->SWR = (uint8_t)CLK_NewClock;
      000224 AE 50 C4         [ 2]  554 	ldw	x, #0x50c4
      000227 7B 08            [ 1]  555 	ld	a, (0x08, sp)
      000229 F7               [ 1]  556 	ld	(x), a
                           00022A   557 	Sstm8s_clk$CLK_ClockSwitchConfig$95 ==.
                                    558 ;	StdPeriphLib/src/stm8s_clk.c: 344: while((((CLK->SWCR & CLK_SWCR_SWBSY) != 0 )&& (DownCounter != 0)))
      00022A AE FF FF         [ 2]  559 	ldw	x, #0xffff
      00022D                        560 00105$:
      00022D 90 AE 50 C5      [ 2]  561 	ldw	y, #0x50c5
      000231 90 F6            [ 1]  562 	ld	a, (y)
      000233 44               [ 1]  563 	srl	a
      000234 24 06            [ 1]  564 	jrnc	00107$
      000236 5D               [ 2]  565 	tnzw	x
      000237 27 03            [ 1]  566 	jreq	00107$
                           000239   567 	Sstm8s_clk$CLK_ClockSwitchConfig$96 ==.
                                    568 ;	StdPeriphLib/src/stm8s_clk.c: 346: DownCounter--;
      000239 5A               [ 2]  569 	decw	x
      00023A 20 F1            [ 2]  570 	jra	00105$
      00023C                        571 00107$:
                           00023C   572 	Sstm8s_clk$CLK_ClockSwitchConfig$97 ==.
                                    573 ;	StdPeriphLib/src/stm8s_clk.c: 349: if(DownCounter != 0)
      00023C 5D               [ 2]  574 	tnzw	x
      00023D 27 06            [ 1]  575 	jreq	00109$
                           00023F   576 	Sstm8s_clk$CLK_ClockSwitchConfig$98 ==.
                                    577 ;	StdPeriphLib/src/stm8s_clk.c: 351: Swif = SUCCESS;
      00023F A6 01            [ 1]  578 	ld	a, #0x01
      000241 6B 01            [ 1]  579 	ld	(0x01, sp), a
      000243 20 43            [ 2]  580 	jra	00123$
      000245                        581 00109$:
                           000245   582 	Sstm8s_clk$CLK_ClockSwitchConfig$99 ==.
                                    583 ;	StdPeriphLib/src/stm8s_clk.c: 355: Swif = ERROR;
      000245 0F 01            [ 1]  584 	clr	(0x01, sp)
      000247 20 3F            [ 2]  585 	jra	00123$
      000249                        586 00122$:
                           000249   587 	Sstm8s_clk$CLK_ClockSwitchConfig$100 ==.
                                    588 ;	StdPeriphLib/src/stm8s_clk.c: 361: if (ITState != DISABLE)
      000249 0D 09            [ 1]  589 	tnz	(0x09, sp)
      00024B 27 09            [ 1]  590 	jreq	00112$
                           00024D   591 	Sstm8s_clk$CLK_ClockSwitchConfig$101 ==.
                                    592 ;	StdPeriphLib/src/stm8s_clk.c: 363: CLK->SWCR |= CLK_SWCR_SWIEN;
      00024D AE 50 C5         [ 2]  593 	ldw	x, #0x50c5
      000250 F6               [ 1]  594 	ld	a, (x)
      000251 AA 04            [ 1]  595 	or	a, #0x04
      000253 F7               [ 1]  596 	ld	(x), a
      000254 20 07            [ 2]  597 	jra	00113$
      000256                        598 00112$:
                           000256   599 	Sstm8s_clk$CLK_ClockSwitchConfig$102 ==.
                                    600 ;	StdPeriphLib/src/stm8s_clk.c: 367: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWIEN);
      000256 AE 50 C5         [ 2]  601 	ldw	x, #0x50c5
      000259 F6               [ 1]  602 	ld	a, (x)
      00025A A4 FB            [ 1]  603 	and	a, #0xfb
      00025C F7               [ 1]  604 	ld	(x), a
      00025D                        605 00113$:
                           00025D   606 	Sstm8s_clk$CLK_ClockSwitchConfig$103 ==.
                                    607 ;	StdPeriphLib/src/stm8s_clk.c: 371: CLK->SWR = (uint8_t)CLK_NewClock;
      00025D AE 50 C4         [ 2]  608 	ldw	x, #0x50c4
      000260 7B 08            [ 1]  609 	ld	a, (0x08, sp)
      000262 F7               [ 1]  610 	ld	(x), a
                           000263   611 	Sstm8s_clk$CLK_ClockSwitchConfig$104 ==.
                                    612 ;	StdPeriphLib/src/stm8s_clk.c: 374: while((((CLK->SWCR & CLK_SWCR_SWIF) != 0 ) && (DownCounter != 0)))
      000263 AE FF FF         [ 2]  613 	ldw	x, #0xffff
      000266                        614 00115$:
      000266 90 AE 50 C5      [ 2]  615 	ldw	y, #0x50c5
      00026A 90 F6            [ 1]  616 	ld	a, (y)
      00026C A5 08            [ 1]  617 	bcp	a, #0x08
      00026E 27 06            [ 1]  618 	jreq	00117$
      000270 5D               [ 2]  619 	tnzw	x
      000271 27 03            [ 1]  620 	jreq	00117$
                           000273   621 	Sstm8s_clk$CLK_ClockSwitchConfig$105 ==.
                                    622 ;	StdPeriphLib/src/stm8s_clk.c: 376: DownCounter--;
      000273 5A               [ 2]  623 	decw	x
      000274 20 F0            [ 2]  624 	jra	00115$
      000276                        625 00117$:
                           000276   626 	Sstm8s_clk$CLK_ClockSwitchConfig$106 ==.
                                    627 ;	StdPeriphLib/src/stm8s_clk.c: 379: if(DownCounter != 0)
      000276 5D               [ 2]  628 	tnzw	x
      000277 27 0D            [ 1]  629 	jreq	00119$
                           000279   630 	Sstm8s_clk$CLK_ClockSwitchConfig$107 ==.
                                    631 ;	StdPeriphLib/src/stm8s_clk.c: 382: CLK->SWCR |= CLK_SWCR_SWEN;
      000279 AE 50 C5         [ 2]  632 	ldw	x, #0x50c5
      00027C F6               [ 1]  633 	ld	a, (x)
      00027D AA 02            [ 1]  634 	or	a, #0x02
      00027F F7               [ 1]  635 	ld	(x), a
                           000280   636 	Sstm8s_clk$CLK_ClockSwitchConfig$108 ==.
                                    637 ;	StdPeriphLib/src/stm8s_clk.c: 383: Swif = SUCCESS;
      000280 A6 01            [ 1]  638 	ld	a, #0x01
      000282 6B 01            [ 1]  639 	ld	(0x01, sp), a
      000284 20 02            [ 2]  640 	jra	00123$
      000286                        641 00119$:
                           000286   642 	Sstm8s_clk$CLK_ClockSwitchConfig$109 ==.
                                    643 ;	StdPeriphLib/src/stm8s_clk.c: 387: Swif = ERROR;
      000286 0F 01            [ 1]  644 	clr	(0x01, sp)
      000288                        645 00123$:
                           000288   646 	Sstm8s_clk$CLK_ClockSwitchConfig$110 ==.
                                    647 ;	StdPeriphLib/src/stm8s_clk.c: 390: if(Swif != ERROR)
      000288 0D 01            [ 1]  648 	tnz	(0x01, sp)
      00028A 27 37            [ 1]  649 	jreq	00136$
                           00028C   650 	Sstm8s_clk$CLK_ClockSwitchConfig$111 ==.
                                    651 ;	StdPeriphLib/src/stm8s_clk.c: 393: if((CLK_CurrentClockState == CLK_CURRENTCLOCKSTATE_DISABLE) && ( clock_master == CLK_SOURCE_HSI))
      00028C 0D 0A            [ 1]  652 	tnz	(0x0a, sp)
      00028E 26 0F            [ 1]  653 	jrne	00132$
      000290 7B 02            [ 1]  654 	ld	a, (0x02, sp)
      000292 A1 E1            [ 1]  655 	cp	a, #0xe1
      000294 26 09            [ 1]  656 	jrne	00132$
                           000296   657 	Sstm8s_clk$CLK_ClockSwitchConfig$112 ==.
                                    658 ;	StdPeriphLib/src/stm8s_clk.c: 395: CLK->ICKR &= (uint8_t)(~CLK_ICKR_HSIEN);
      000296 AE 50 C0         [ 2]  659 	ldw	x, #0x50c0
      000299 F6               [ 1]  660 	ld	a, (x)
      00029A A4 FE            [ 1]  661 	and	a, #0xfe
      00029C F7               [ 1]  662 	ld	(x), a
      00029D 20 24            [ 2]  663 	jra	00136$
      00029F                        664 00132$:
                           00029F   665 	Sstm8s_clk$CLK_ClockSwitchConfig$113 ==.
                                    666 ;	StdPeriphLib/src/stm8s_clk.c: 397: else if((CLK_CurrentClockState == CLK_CURRENTCLOCKSTATE_DISABLE) && ( clock_master == CLK_SOURCE_LSI))
      00029F 0D 0A            [ 1]  667 	tnz	(0x0a, sp)
      0002A1 26 0F            [ 1]  668 	jrne	00128$
      0002A3 7B 02            [ 1]  669 	ld	a, (0x02, sp)
      0002A5 A1 D2            [ 1]  670 	cp	a, #0xd2
      0002A7 26 09            [ 1]  671 	jrne	00128$
                           0002A9   672 	Sstm8s_clk$CLK_ClockSwitchConfig$114 ==.
                                    673 ;	StdPeriphLib/src/stm8s_clk.c: 399: CLK->ICKR &= (uint8_t)(~CLK_ICKR_LSIEN);
      0002A9 AE 50 C0         [ 2]  674 	ldw	x, #0x50c0
      0002AC F6               [ 1]  675 	ld	a, (x)
      0002AD A4 F7            [ 1]  676 	and	a, #0xf7
      0002AF F7               [ 1]  677 	ld	(x), a
      0002B0 20 11            [ 2]  678 	jra	00136$
      0002B2                        679 00128$:
                           0002B2   680 	Sstm8s_clk$CLK_ClockSwitchConfig$115 ==.
                                    681 ;	StdPeriphLib/src/stm8s_clk.c: 401: else if ((CLK_CurrentClockState == CLK_CURRENTCLOCKSTATE_DISABLE) && ( clock_master == CLK_SOURCE_HSE))
      0002B2 0D 0A            [ 1]  682 	tnz	(0x0a, sp)
      0002B4 26 0D            [ 1]  683 	jrne	00136$
      0002B6 7B 02            [ 1]  684 	ld	a, (0x02, sp)
      0002B8 A1 B4            [ 1]  685 	cp	a, #0xb4
      0002BA 26 07            [ 1]  686 	jrne	00136$
                           0002BC   687 	Sstm8s_clk$CLK_ClockSwitchConfig$116 ==.
                                    688 ;	StdPeriphLib/src/stm8s_clk.c: 403: CLK->ECKR &= (uint8_t)(~CLK_ECKR_HSEEN);
      0002BC AE 50 C1         [ 2]  689 	ldw	x, #0x50c1
      0002BF F6               [ 1]  690 	ld	a, (x)
      0002C0 A4 FE            [ 1]  691 	and	a, #0xfe
      0002C2 F7               [ 1]  692 	ld	(x), a
      0002C3                        693 00136$:
                           0002C3   694 	Sstm8s_clk$CLK_ClockSwitchConfig$117 ==.
                                    695 ;	StdPeriphLib/src/stm8s_clk.c: 406: return(Swif);
      0002C3 7B 01            [ 1]  696 	ld	a, (0x01, sp)
                           0002C5   697 	Sstm8s_clk$CLK_ClockSwitchConfig$118 ==.
                                    698 ;	StdPeriphLib/src/stm8s_clk.c: 407: }
      0002C5 5B 02            [ 2]  699 	addw	sp, #2
                           0002C7   700 	Sstm8s_clk$CLK_ClockSwitchConfig$119 ==.
                           0002C7   701 	XG$CLK_ClockSwitchConfig$0$0 ==.
      0002C7 32u00u00         [ 1]  702 	pop	_fp_
      0002CA 32u00u01         [ 1]  703 	pop	_fp_+1
      0002CD 81               [ 4]  704 	ret
                           0002CE   705 	Sstm8s_clk$CLK_ClockSwitchConfig$120 ==.
                           0002CE   706 	Sstm8s_clk$CLK_HSIPrescalerConfig$121 ==.
                                    707 ;	StdPeriphLib/src/stm8s_clk.c: 415: void CLK_HSIPrescalerConfig(CLK_Prescaler_TypeDef HSIPrescaler)
                                    708 ;	-----------------------------------------
                                    709 ;	 function CLK_HSIPrescalerConfig
                                    710 ;	-----------------------------------------
      0002CE                        711 _CLK_HSIPrescalerConfig:
      0002CE 3Bu00u01         [ 1]  712 	push	_fp_+1
      0002D1 3Bu00u00         [ 1]  713 	push	_fp_
      0002D4 90 96            [ 1]  714 	ldw	y, sp
      0002D6 90 CFu00u00      [ 2]  715 	ldw	_fp_, y
                           0002DA   716 	Sstm8s_clk$CLK_HSIPrescalerConfig$122 ==.
                           0002DA   717 	Sstm8s_clk$CLK_HSIPrescalerConfig$123 ==.
                                    718 ;	StdPeriphLib/src/stm8s_clk.c: 421: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      0002DA AE 50 C6         [ 2]  719 	ldw	x, #0x50c6
      0002DD F6               [ 1]  720 	ld	a, (x)
      0002DE A4 E7            [ 1]  721 	and	a, #0xe7
      0002E0 F7               [ 1]  722 	ld	(x), a
                           0002E1   723 	Sstm8s_clk$CLK_HSIPrescalerConfig$124 ==.
                                    724 ;	StdPeriphLib/src/stm8s_clk.c: 424: CLK->CKDIVR |= (uint8_t)HSIPrescaler;
      0002E1 AE 50 C6         [ 2]  725 	ldw	x, #0x50c6
      0002E4 F6               [ 1]  726 	ld	a, (x)
      0002E5 1A 05            [ 1]  727 	or	a, (0x05, sp)
      0002E7 AE 50 C6         [ 2]  728 	ldw	x, #0x50c6
      0002EA F7               [ 1]  729 	ld	(x), a
                           0002EB   730 	Sstm8s_clk$CLK_HSIPrescalerConfig$125 ==.
                                    731 ;	StdPeriphLib/src/stm8s_clk.c: 425: }
                           0002EB   732 	Sstm8s_clk$CLK_HSIPrescalerConfig$126 ==.
                           0002EB   733 	XG$CLK_HSIPrescalerConfig$0$0 ==.
      0002EB 32u00u00         [ 1]  734 	pop	_fp_
      0002EE 32u00u01         [ 1]  735 	pop	_fp_+1
      0002F1 81               [ 4]  736 	ret
                           0002F2   737 	Sstm8s_clk$CLK_HSIPrescalerConfig$127 ==.
                           0002F2   738 	Sstm8s_clk$CLK_CCOConfig$128 ==.
                                    739 ;	StdPeriphLib/src/stm8s_clk.c: 436: void CLK_CCOConfig(CLK_Output_TypeDef CLK_CCO)
                                    740 ;	-----------------------------------------
                                    741 ;	 function CLK_CCOConfig
                                    742 ;	-----------------------------------------
      0002F2                        743 _CLK_CCOConfig:
      0002F2 3Bu00u01         [ 1]  744 	push	_fp_+1
      0002F5 3Bu00u00         [ 1]  745 	push	_fp_
      0002F8 90 96            [ 1]  746 	ldw	y, sp
      0002FA 90 CFu00u00      [ 2]  747 	ldw	_fp_, y
                           0002FE   748 	Sstm8s_clk$CLK_CCOConfig$129 ==.
                           0002FE   749 	Sstm8s_clk$CLK_CCOConfig$130 ==.
                                    750 ;	StdPeriphLib/src/stm8s_clk.c: 442: CLK->CCOR &= (uint8_t)(~CLK_CCOR_CCOSEL);
      0002FE AE 50 C9         [ 2]  751 	ldw	x, #0x50c9
      000301 F6               [ 1]  752 	ld	a, (x)
      000302 A4 E1            [ 1]  753 	and	a, #0xe1
      000304 F7               [ 1]  754 	ld	(x), a
                           000305   755 	Sstm8s_clk$CLK_CCOConfig$131 ==.
                                    756 ;	StdPeriphLib/src/stm8s_clk.c: 445: CLK->CCOR |= (uint8_t)CLK_CCO;
      000305 AE 50 C9         [ 2]  757 	ldw	x, #0x50c9
      000308 F6               [ 1]  758 	ld	a, (x)
      000309 1A 05            [ 1]  759 	or	a, (0x05, sp)
      00030B AE 50 C9         [ 2]  760 	ldw	x, #0x50c9
      00030E F7               [ 1]  761 	ld	(x), a
                           00030F   762 	Sstm8s_clk$CLK_CCOConfig$132 ==.
                                    763 ;	StdPeriphLib/src/stm8s_clk.c: 448: CLK->CCOR |= CLK_CCOR_CCOEN;
      00030F 72 10 50 C9      [ 1]  764 	bset	0x50c9, #0
                           000313   765 	Sstm8s_clk$CLK_CCOConfig$133 ==.
                                    766 ;	StdPeriphLib/src/stm8s_clk.c: 449: }
                           000313   767 	Sstm8s_clk$CLK_CCOConfig$134 ==.
                           000313   768 	XG$CLK_CCOConfig$0$0 ==.
      000313 32u00u00         [ 1]  769 	pop	_fp_
      000316 32u00u01         [ 1]  770 	pop	_fp_+1
      000319 81               [ 4]  771 	ret
                           00031A   772 	Sstm8s_clk$CLK_CCOConfig$135 ==.
                           00031A   773 	Sstm8s_clk$CLK_ITConfig$136 ==.
                                    774 ;	StdPeriphLib/src/stm8s_clk.c: 459: void CLK_ITConfig(CLK_IT_TypeDef CLK_IT, FunctionalState NewState)
                                    775 ;	-----------------------------------------
                                    776 ;	 function CLK_ITConfig
                                    777 ;	-----------------------------------------
      00031A                        778 _CLK_ITConfig:
      00031A 3Bu00u01         [ 1]  779 	push	_fp_+1
      00031D 3Bu00u00         [ 1]  780 	push	_fp_
      000320 90 96            [ 1]  781 	ldw	y, sp
      000322 90 CFu00u00      [ 2]  782 	ldw	_fp_, y
                           000326   783 	Sstm8s_clk$CLK_ITConfig$137 ==.
                           000326   784 	Sstm8s_clk$CLK_ITConfig$138 ==.
                                    785 ;	StdPeriphLib/src/stm8s_clk.c: 465: if (NewState != DISABLE)
      000326 0D 06            [ 1]  786 	tnz	(0x06, sp)
      000328 27 1E            [ 1]  787 	jreq	00110$
                           00032A   788 	Sstm8s_clk$CLK_ITConfig$139 ==.
                                    789 ;	StdPeriphLib/src/stm8s_clk.c: 467: switch (CLK_IT)
      00032A 7B 05            [ 1]  790 	ld	a, (0x05, sp)
      00032C A1 0C            [ 1]  791 	cp	a, #0x0c
      00032E 27 0F            [ 1]  792 	jreq	00102$
      000330 7B 05            [ 1]  793 	ld	a, (0x05, sp)
      000332 A1 1C            [ 1]  794 	cp	a, #0x1c
      000334 26 2E            [ 1]  795 	jrne	00112$
                           000336   796 	Sstm8s_clk$CLK_ITConfig$140 ==.
                                    797 ;	StdPeriphLib/src/stm8s_clk.c: 470: CLK->SWCR |= CLK_SWCR_SWIEN;
      000336 AE 50 C5         [ 2]  798 	ldw	x, #0x50c5
      000339 F6               [ 1]  799 	ld	a, (x)
      00033A AA 04            [ 1]  800 	or	a, #0x04
      00033C F7               [ 1]  801 	ld	(x), a
                           00033D   802 	Sstm8s_clk$CLK_ITConfig$141 ==.
                                    803 ;	StdPeriphLib/src/stm8s_clk.c: 471: break;
      00033D 20 25            [ 2]  804 	jra	00112$
                           00033F   805 	Sstm8s_clk$CLK_ITConfig$142 ==.
                                    806 ;	StdPeriphLib/src/stm8s_clk.c: 472: case CLK_IT_CSSD: /* Enable the clock security system detection interrupt */
      00033F                        807 00102$:
                           00033F   808 	Sstm8s_clk$CLK_ITConfig$143 ==.
                                    809 ;	StdPeriphLib/src/stm8s_clk.c: 473: CLK->CSSR |= CLK_CSSR_CSSDIE;
      00033F AE 50 C8         [ 2]  810 	ldw	x, #0x50c8
      000342 F6               [ 1]  811 	ld	a, (x)
      000343 AA 04            [ 1]  812 	or	a, #0x04
      000345 F7               [ 1]  813 	ld	(x), a
                           000346   814 	Sstm8s_clk$CLK_ITConfig$144 ==.
                                    815 ;	StdPeriphLib/src/stm8s_clk.c: 474: break;
      000346 20 1C            [ 2]  816 	jra	00112$
                           000348   817 	Sstm8s_clk$CLK_ITConfig$145 ==.
                                    818 ;	StdPeriphLib/src/stm8s_clk.c: 477: }
      000348                        819 00110$:
                           000348   820 	Sstm8s_clk$CLK_ITConfig$146 ==.
                                    821 ;	StdPeriphLib/src/stm8s_clk.c: 481: switch (CLK_IT)
      000348 7B 05            [ 1]  822 	ld	a, (0x05, sp)
      00034A A1 0C            [ 1]  823 	cp	a, #0x0c
      00034C 27 0F            [ 1]  824 	jreq	00106$
      00034E 7B 05            [ 1]  825 	ld	a, (0x05, sp)
      000350 A1 1C            [ 1]  826 	cp	a, #0x1c
      000352 26 10            [ 1]  827 	jrne	00112$
                           000354   828 	Sstm8s_clk$CLK_ITConfig$147 ==.
                                    829 ;	StdPeriphLib/src/stm8s_clk.c: 484: CLK->SWCR  &= (uint8_t)(~CLK_SWCR_SWIEN);
      000354 AE 50 C5         [ 2]  830 	ldw	x, #0x50c5
      000357 F6               [ 1]  831 	ld	a, (x)
      000358 A4 FB            [ 1]  832 	and	a, #0xfb
      00035A F7               [ 1]  833 	ld	(x), a
                           00035B   834 	Sstm8s_clk$CLK_ITConfig$148 ==.
                                    835 ;	StdPeriphLib/src/stm8s_clk.c: 485: break;
      00035B 20 07            [ 2]  836 	jra	00112$
                           00035D   837 	Sstm8s_clk$CLK_ITConfig$149 ==.
                                    838 ;	StdPeriphLib/src/stm8s_clk.c: 486: case CLK_IT_CSSD: /* Disable the clock security system detection interrupt */
      00035D                        839 00106$:
                           00035D   840 	Sstm8s_clk$CLK_ITConfig$150 ==.
                                    841 ;	StdPeriphLib/src/stm8s_clk.c: 487: CLK->CSSR &= (uint8_t)(~CLK_CSSR_CSSDIE);
      00035D AE 50 C8         [ 2]  842 	ldw	x, #0x50c8
      000360 F6               [ 1]  843 	ld	a, (x)
      000361 A4 FB            [ 1]  844 	and	a, #0xfb
      000363 F7               [ 1]  845 	ld	(x), a
                           000364   846 	Sstm8s_clk$CLK_ITConfig$151 ==.
                                    847 ;	StdPeriphLib/src/stm8s_clk.c: 491: }
      000364                        848 00112$:
                           000364   849 	Sstm8s_clk$CLK_ITConfig$152 ==.
                                    850 ;	StdPeriphLib/src/stm8s_clk.c: 493: }
                           000364   851 	Sstm8s_clk$CLK_ITConfig$153 ==.
                           000364   852 	XG$CLK_ITConfig$0$0 ==.
      000364 32u00u00         [ 1]  853 	pop	_fp_
      000367 32u00u01         [ 1]  854 	pop	_fp_+1
      00036A 81               [ 4]  855 	ret
                           00036B   856 	Sstm8s_clk$CLK_ITConfig$154 ==.
                           00036B   857 	Sstm8s_clk$CLK_SYSCLKConfig$155 ==.
                                    858 ;	StdPeriphLib/src/stm8s_clk.c: 500: void CLK_SYSCLKConfig(CLK_Prescaler_TypeDef CLK_Prescaler)
                                    859 ;	-----------------------------------------
                                    860 ;	 function CLK_SYSCLKConfig
                                    861 ;	-----------------------------------------
      00036B                        862 _CLK_SYSCLKConfig:
      00036B 3Bu00u01         [ 1]  863 	push	_fp_+1
      00036E 3Bu00u00         [ 1]  864 	push	_fp_
      000371 90 96            [ 1]  865 	ldw	y, sp
      000373 90 CFu00u00      [ 2]  866 	ldw	_fp_, y
                           000377   867 	Sstm8s_clk$CLK_SYSCLKConfig$156 ==.
      000377 52 02            [ 2]  868 	sub	sp, #2
                           000379   869 	Sstm8s_clk$CLK_SYSCLKConfig$157 ==.
                                    870 ;	StdPeriphLib/src/stm8s_clk.c: 505: if (((uint8_t)CLK_Prescaler & (uint8_t)0x80) == 0x00) /* Bit7 = 0 means HSI divider */
      000379 0D 07            [ 1]  871 	tnz	(0x07, sp)
      00037B 2B 19            [ 1]  872 	jrmi	00102$
                           00037D   873 	Sstm8s_clk$CLK_SYSCLKConfig$158 ==.
                                    874 ;	StdPeriphLib/src/stm8s_clk.c: 507: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      00037D AE 50 C6         [ 2]  875 	ldw	x, #0x50c6
      000380 F6               [ 1]  876 	ld	a, (x)
      000381 A4 E7            [ 1]  877 	and	a, #0xe7
      000383 F7               [ 1]  878 	ld	(x), a
                           000384   879 	Sstm8s_clk$CLK_SYSCLKConfig$159 ==.
                                    880 ;	StdPeriphLib/src/stm8s_clk.c: 508: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_HSIDIV);
      000384 AE 50 C6         [ 2]  881 	ldw	x, #0x50c6
      000387 F6               [ 1]  882 	ld	a, (x)
      000388 6B 02            [ 1]  883 	ld	(0x02, sp), a
      00038A 7B 07            [ 1]  884 	ld	a, (0x07, sp)
      00038C A4 18            [ 1]  885 	and	a, #0x18
      00038E 1A 02            [ 1]  886 	or	a, (0x02, sp)
      000390 AE 50 C6         [ 2]  887 	ldw	x, #0x50c6
      000393 F7               [ 1]  888 	ld	(x), a
      000394 20 17            [ 2]  889 	jra	00104$
      000396                        890 00102$:
                           000396   891 	Sstm8s_clk$CLK_SYSCLKConfig$160 ==.
                                    892 ;	StdPeriphLib/src/stm8s_clk.c: 512: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_CPUDIV);
      000396 AE 50 C6         [ 2]  893 	ldw	x, #0x50c6
      000399 F6               [ 1]  894 	ld	a, (x)
      00039A A4 F8            [ 1]  895 	and	a, #0xf8
      00039C F7               [ 1]  896 	ld	(x), a
                           00039D   897 	Sstm8s_clk$CLK_SYSCLKConfig$161 ==.
                                    898 ;	StdPeriphLib/src/stm8s_clk.c: 513: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_CPUDIV);
      00039D AE 50 C6         [ 2]  899 	ldw	x, #0x50c6
      0003A0 F6               [ 1]  900 	ld	a, (x)
      0003A1 6B 01            [ 1]  901 	ld	(0x01, sp), a
      0003A3 7B 07            [ 1]  902 	ld	a, (0x07, sp)
      0003A5 A4 07            [ 1]  903 	and	a, #0x07
      0003A7 1A 01            [ 1]  904 	or	a, (0x01, sp)
      0003A9 AE 50 C6         [ 2]  905 	ldw	x, #0x50c6
      0003AC F7               [ 1]  906 	ld	(x), a
      0003AD                        907 00104$:
                           0003AD   908 	Sstm8s_clk$CLK_SYSCLKConfig$162 ==.
                                    909 ;	StdPeriphLib/src/stm8s_clk.c: 515: }
      0003AD 5B 02            [ 2]  910 	addw	sp, #2
                           0003AF   911 	Sstm8s_clk$CLK_SYSCLKConfig$163 ==.
                           0003AF   912 	XG$CLK_SYSCLKConfig$0$0 ==.
      0003AF 32u00u00         [ 1]  913 	pop	_fp_
      0003B2 32u00u01         [ 1]  914 	pop	_fp_+1
      0003B5 81               [ 4]  915 	ret
                           0003B6   916 	Sstm8s_clk$CLK_SYSCLKConfig$164 ==.
                           0003B6   917 	Sstm8s_clk$CLK_SWIMConfig$165 ==.
                                    918 ;	StdPeriphLib/src/stm8s_clk.c: 523: void CLK_SWIMConfig(CLK_SWIMDivider_TypeDef CLK_SWIMDivider)
                                    919 ;	-----------------------------------------
                                    920 ;	 function CLK_SWIMConfig
                                    921 ;	-----------------------------------------
      0003B6                        922 _CLK_SWIMConfig:
      0003B6 3Bu00u01         [ 1]  923 	push	_fp_+1
      0003B9 3Bu00u00         [ 1]  924 	push	_fp_
      0003BC 90 96            [ 1]  925 	ldw	y, sp
      0003BE 90 CFu00u00      [ 2]  926 	ldw	_fp_, y
                           0003C2   927 	Sstm8s_clk$CLK_SWIMConfig$166 ==.
                           0003C2   928 	Sstm8s_clk$CLK_SWIMConfig$167 ==.
                                    929 ;	StdPeriphLib/src/stm8s_clk.c: 528: if (CLK_SWIMDivider != CLK_SWIMDIVIDER_2)
      0003C2 0D 05            [ 1]  930 	tnz	(0x05, sp)
      0003C4 27 06            [ 1]  931 	jreq	00102$
                           0003C6   932 	Sstm8s_clk$CLK_SWIMConfig$168 ==.
                                    933 ;	StdPeriphLib/src/stm8s_clk.c: 531: CLK->SWIMCCR |= CLK_SWIMCCR_SWIMDIV;
      0003C6 72 10 50 CD      [ 1]  934 	bset	0x50cd, #0
      0003CA 20 04            [ 2]  935 	jra	00104$
      0003CC                        936 00102$:
                           0003CC   937 	Sstm8s_clk$CLK_SWIMConfig$169 ==.
                                    938 ;	StdPeriphLib/src/stm8s_clk.c: 536: CLK->SWIMCCR &= (uint8_t)(~CLK_SWIMCCR_SWIMDIV);
      0003CC 72 11 50 CD      [ 1]  939 	bres	0x50cd, #0
      0003D0                        940 00104$:
                           0003D0   941 	Sstm8s_clk$CLK_SWIMConfig$170 ==.
                                    942 ;	StdPeriphLib/src/stm8s_clk.c: 538: }
                           0003D0   943 	Sstm8s_clk$CLK_SWIMConfig$171 ==.
                           0003D0   944 	XG$CLK_SWIMConfig$0$0 ==.
      0003D0 32u00u00         [ 1]  945 	pop	_fp_
      0003D3 32u00u01         [ 1]  946 	pop	_fp_+1
      0003D6 81               [ 4]  947 	ret
                           0003D7   948 	Sstm8s_clk$CLK_SWIMConfig$172 ==.
                           0003D7   949 	Sstm8s_clk$CLK_ClockSecuritySystemEnable$173 ==.
                                    950 ;	StdPeriphLib/src/stm8s_clk.c: 547: void CLK_ClockSecuritySystemEnable(void)
                                    951 ;	-----------------------------------------
                                    952 ;	 function CLK_ClockSecuritySystemEnable
                                    953 ;	-----------------------------------------
      0003D7                        954 _CLK_ClockSecuritySystemEnable:
      0003D7 3Bu00u01         [ 1]  955 	push	_fp_+1
      0003DA 3Bu00u00         [ 1]  956 	push	_fp_
      0003DD 90 96            [ 1]  957 	ldw	y, sp
      0003DF 90 CFu00u00      [ 2]  958 	ldw	_fp_, y
                           0003E3   959 	Sstm8s_clk$CLK_ClockSecuritySystemEnable$174 ==.
                           0003E3   960 	Sstm8s_clk$CLK_ClockSecuritySystemEnable$175 ==.
                                    961 ;	StdPeriphLib/src/stm8s_clk.c: 550: CLK->CSSR |= CLK_CSSR_CSSEN;
      0003E3 72 10 50 C8      [ 1]  962 	bset	0x50c8, #0
                           0003E7   963 	Sstm8s_clk$CLK_ClockSecuritySystemEnable$176 ==.
                                    964 ;	StdPeriphLib/src/stm8s_clk.c: 551: }
                           0003E7   965 	Sstm8s_clk$CLK_ClockSecuritySystemEnable$177 ==.
                           0003E7   966 	XG$CLK_ClockSecuritySystemEnable$0$0 ==.
      0003E7 32u00u00         [ 1]  967 	pop	_fp_
      0003EA 32u00u01         [ 1]  968 	pop	_fp_+1
      0003ED 81               [ 4]  969 	ret
                           0003EE   970 	Sstm8s_clk$CLK_ClockSecuritySystemEnable$178 ==.
                           0003EE   971 	Sstm8s_clk$CLK_GetSYSCLKSource$179 ==.
                                    972 ;	StdPeriphLib/src/stm8s_clk.c: 559: CLK_Source_TypeDef CLK_GetSYSCLKSource(void)
                                    973 ;	-----------------------------------------
                                    974 ;	 function CLK_GetSYSCLKSource
                                    975 ;	-----------------------------------------
      0003EE                        976 _CLK_GetSYSCLKSource:
      0003EE 3Bu00u01         [ 1]  977 	push	_fp_+1
      0003F1 3Bu00u00         [ 1]  978 	push	_fp_
      0003F4 90 96            [ 1]  979 	ldw	y, sp
      0003F6 90 CFu00u00      [ 2]  980 	ldw	_fp_, y
                           0003FA   981 	Sstm8s_clk$CLK_GetSYSCLKSource$180 ==.
                           0003FA   982 	Sstm8s_clk$CLK_GetSYSCLKSource$181 ==.
                                    983 ;	StdPeriphLib/src/stm8s_clk.c: 561: return((CLK_Source_TypeDef)CLK->CMSR);
      0003FA AE 50 C3         [ 2]  984 	ldw	x, #0x50c3
      0003FD F6               [ 1]  985 	ld	a, (x)
                           0003FE   986 	Sstm8s_clk$CLK_GetSYSCLKSource$182 ==.
                                    987 ;	StdPeriphLib/src/stm8s_clk.c: 562: }
                           0003FE   988 	Sstm8s_clk$CLK_GetSYSCLKSource$183 ==.
                           0003FE   989 	XG$CLK_GetSYSCLKSource$0$0 ==.
      0003FE 32u00u00         [ 1]  990 	pop	_fp_
      000401 32u00u01         [ 1]  991 	pop	_fp_+1
      000404 81               [ 4]  992 	ret
                           000405   993 	Sstm8s_clk$CLK_GetSYSCLKSource$184 ==.
                           000405   994 	Sstm8s_clk$CLK_GetClockFreq$185 ==.
                                    995 ;	StdPeriphLib/src/stm8s_clk.c: 569: uint32_t CLK_GetClockFreq(void)
                                    996 ;	-----------------------------------------
                                    997 ;	 function CLK_GetClockFreq
                                    998 ;	-----------------------------------------
      000405                        999 _CLK_GetClockFreq:
      000405 3Bu00u01         [ 1] 1000 	push	_fp_+1
      000408 3Bu00u00         [ 1] 1001 	push	_fp_
      00040B 90 96            [ 1] 1002 	ldw	y, sp
      00040D 90 CFu00u00      [ 2] 1003 	ldw	_fp_, y
                           000411  1004 	Sstm8s_clk$CLK_GetClockFreq$186 ==.
      000411 52 07            [ 2] 1005 	sub	sp, #7
                           000413  1006 	Sstm8s_clk$CLK_GetClockFreq$187 ==.
                                   1007 ;	StdPeriphLib/src/stm8s_clk.c: 576: clocksource = (CLK_Source_TypeDef)CLK->CMSR;
      000413 AE 50 C3         [ 2] 1008 	ldw	x, #0x50c3
      000416 F6               [ 1] 1009 	ld	a, (x)
      000417 6B 01            [ 1] 1010 	ld	(0x01, sp), a
                           000419  1011 	Sstm8s_clk$CLK_GetClockFreq$188 ==.
                                   1012 ;	StdPeriphLib/src/stm8s_clk.c: 578: if (clocksource == CLK_SOURCE_HSI)
      000419 7B 01            [ 1] 1013 	ld	a, (0x01, sp)
      00041B A1 E1            [ 1] 1014 	cp	a, #0xe1
      00041D 26 2C            [ 1] 1015 	jrne	00105$
                           00041F  1016 	Sstm8s_clk$CLK_GetClockFreq$189 ==.
                                   1017 ;	StdPeriphLib/src/stm8s_clk.c: 580: tmp = (uint8_t)(CLK->CKDIVR & CLK_CKDIVR_HSIDIV);
      00041F AE 50 C6         [ 2] 1018 	ldw	x, #0x50c6
      000422 F6               [ 1] 1019 	ld	a, (x)
      000423 A4 18            [ 1] 1020 	and	a, #0x18
                           000425  1021 	Sstm8s_clk$CLK_GetClockFreq$190 ==.
                                   1022 ;	StdPeriphLib/src/stm8s_clk.c: 581: tmp = (uint8_t)(tmp >> 3);
      000425 44               [ 1] 1023 	srl	a
      000426 44               [ 1] 1024 	srl	a
      000427 44               [ 1] 1025 	srl	a
                           000428  1026 	Sstm8s_clk$CLK_GetClockFreq$191 ==.
                                   1027 ;	StdPeriphLib/src/stm8s_clk.c: 582: presc = HSIDivFactor[tmp];
      000428 AEr05r63         [ 2] 1028 	ldw	x, #_HSIDivFactor+0
      00042B 1F 06            [ 2] 1029 	ldw	(0x06, sp), x
      00042D 5F               [ 1] 1030 	clrw	x
      00042E 97               [ 1] 1031 	ld	xl, a
      00042F 72 FB 06         [ 2] 1032 	addw	x, (0x06, sp)
      000432 F6               [ 1] 1033 	ld	a, (x)
                           000433  1034 	Sstm8s_clk$CLK_GetClockFreq$192 ==.
                                   1035 ;	StdPeriphLib/src/stm8s_clk.c: 583: clockfrequency = HSI_VALUE / presc;
      000433 5F               [ 1] 1036 	clrw	x
      000434 97               [ 1] 1037 	ld	xl, a
      000435 90 5F            [ 1] 1038 	clrw	y
      000437 89               [ 2] 1039 	pushw	x
      000438 90 89            [ 2] 1040 	pushw	y
      00043A 4B 00            [ 1] 1041 	push	#0x00
      00043C 4B 24            [ 1] 1042 	push	#0x24
      00043E 4B F4            [ 1] 1043 	push	#0xf4
      000440 4B 00            [ 1] 1044 	push	#0x00
      000442 CDr00r00         [ 4] 1045 	call	__divulong
      000445 5B 08            [ 2] 1046 	addw	sp, #8
      000447 1F 04            [ 2] 1047 	ldw	(0x04, sp), x
      000449 20 1A            [ 2] 1048 	jra	00106$
      00044B                       1049 00105$:
                           00044B  1050 	Sstm8s_clk$CLK_GetClockFreq$193 ==.
                                   1051 ;	StdPeriphLib/src/stm8s_clk.c: 585: else if ( clocksource == CLK_SOURCE_LSI)
      00044B 7B 01            [ 1] 1052 	ld	a, (0x01, sp)
      00044D A1 D2            [ 1] 1053 	cp	a, #0xd2
      00044F 26 0B            [ 1] 1054 	jrne	00102$
                           000451  1055 	Sstm8s_clk$CLK_GetClockFreq$194 ==.
                                   1056 ;	StdPeriphLib/src/stm8s_clk.c: 587: clockfrequency = LSI_VALUE;
      000451 AE F4 00         [ 2] 1057 	ldw	x, #0xf400
      000454 1F 04            [ 2] 1058 	ldw	(0x04, sp), x
      000456 90 AE 00 01      [ 2] 1059 	ldw	y, #0x0001
      00045A 20 09            [ 2] 1060 	jra	00106$
      00045C                       1061 00102$:
                           00045C  1062 	Sstm8s_clk$CLK_GetClockFreq$195 ==.
                                   1063 ;	StdPeriphLib/src/stm8s_clk.c: 591: clockfrequency = HSE_VALUE;
      00045C AE 24 00         [ 2] 1064 	ldw	x, #0x2400
      00045F 1F 04            [ 2] 1065 	ldw	(0x04, sp), x
      000461 90 AE 00 F4      [ 2] 1066 	ldw	y, #0x00f4
      000465                       1067 00106$:
                           000465  1068 	Sstm8s_clk$CLK_GetClockFreq$196 ==.
                                   1069 ;	StdPeriphLib/src/stm8s_clk.c: 594: return((uint32_t)clockfrequency);
      000465 1E 04            [ 2] 1070 	ldw	x, (0x04, sp)
                           000467  1071 	Sstm8s_clk$CLK_GetClockFreq$197 ==.
                                   1072 ;	StdPeriphLib/src/stm8s_clk.c: 595: }
      000467 5B 07            [ 2] 1073 	addw	sp, #7
                           000469  1074 	Sstm8s_clk$CLK_GetClockFreq$198 ==.
                           000469  1075 	XG$CLK_GetClockFreq$0$0 ==.
      000469 32u00u00         [ 1] 1076 	pop	_fp_
      00046C 32u00u01         [ 1] 1077 	pop	_fp_+1
      00046F 81               [ 4] 1078 	ret
                           000470  1079 	Sstm8s_clk$CLK_GetClockFreq$199 ==.
                           000470  1080 	Sstm8s_clk$CLK_AdjustHSICalibrationValue$200 ==.
                                   1081 ;	StdPeriphLib/src/stm8s_clk.c: 604: void CLK_AdjustHSICalibrationValue(CLK_HSITrimValue_TypeDef CLK_HSICalibrationValue)
                                   1082 ;	-----------------------------------------
                                   1083 ;	 function CLK_AdjustHSICalibrationValue
                                   1084 ;	-----------------------------------------
      000470                       1085 _CLK_AdjustHSICalibrationValue:
      000470 3Bu00u01         [ 1] 1086 	push	_fp_+1
      000473 3Bu00u00         [ 1] 1087 	push	_fp_
      000476 90 96            [ 1] 1088 	ldw	y, sp
      000478 90 CFu00u00      [ 2] 1089 	ldw	_fp_, y
                           00047C  1090 	Sstm8s_clk$CLK_AdjustHSICalibrationValue$201 ==.
                           00047C  1091 	Sstm8s_clk$CLK_AdjustHSICalibrationValue$202 ==.
                                   1092 ;	StdPeriphLib/src/stm8s_clk.c: 610: CLK->HSITRIMR = (uint8_t)( (uint8_t)(CLK->HSITRIMR & (uint8_t)(~CLK_HSITRIMR_HSITRIM))|((uint8_t)CLK_HSICalibrationValue));
      00047C AE 50 CC         [ 2] 1093 	ldw	x, #0x50cc
      00047F F6               [ 1] 1094 	ld	a, (x)
      000480 A4 F8            [ 1] 1095 	and	a, #0xf8
      000482 1A 05            [ 1] 1096 	or	a, (0x05, sp)
      000484 AE 50 CC         [ 2] 1097 	ldw	x, #0x50cc
      000487 F7               [ 1] 1098 	ld	(x), a
                           000488  1099 	Sstm8s_clk$CLK_AdjustHSICalibrationValue$203 ==.
                                   1100 ;	StdPeriphLib/src/stm8s_clk.c: 611: }
                           000488  1101 	Sstm8s_clk$CLK_AdjustHSICalibrationValue$204 ==.
                           000488  1102 	XG$CLK_AdjustHSICalibrationValue$0$0 ==.
      000488 32u00u00         [ 1] 1103 	pop	_fp_
      00048B 32u00u01         [ 1] 1104 	pop	_fp_+1
      00048E 81               [ 4] 1105 	ret
                           00048F  1106 	Sstm8s_clk$CLK_AdjustHSICalibrationValue$205 ==.
                           00048F  1107 	Sstm8s_clk$CLK_SYSCLKEmergencyClear$206 ==.
                                   1108 ;	StdPeriphLib/src/stm8s_clk.c: 622: void CLK_SYSCLKEmergencyClear(void)
                                   1109 ;	-----------------------------------------
                                   1110 ;	 function CLK_SYSCLKEmergencyClear
                                   1111 ;	-----------------------------------------
      00048F                       1112 _CLK_SYSCLKEmergencyClear:
      00048F 3Bu00u01         [ 1] 1113 	push	_fp_+1
      000492 3Bu00u00         [ 1] 1114 	push	_fp_
      000495 90 96            [ 1] 1115 	ldw	y, sp
      000497 90 CFu00u00      [ 2] 1116 	ldw	_fp_, y
                           00049B  1117 	Sstm8s_clk$CLK_SYSCLKEmergencyClear$207 ==.
                           00049B  1118 	Sstm8s_clk$CLK_SYSCLKEmergencyClear$208 ==.
                                   1119 ;	StdPeriphLib/src/stm8s_clk.c: 624: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWBSY);
      00049B 72 11 50 C5      [ 1] 1120 	bres	0x50c5, #0
                           00049F  1121 	Sstm8s_clk$CLK_SYSCLKEmergencyClear$209 ==.
                                   1122 ;	StdPeriphLib/src/stm8s_clk.c: 625: }
                           00049F  1123 	Sstm8s_clk$CLK_SYSCLKEmergencyClear$210 ==.
                           00049F  1124 	XG$CLK_SYSCLKEmergencyClear$0$0 ==.
      00049F 32u00u00         [ 1] 1125 	pop	_fp_
      0004A2 32u00u01         [ 1] 1126 	pop	_fp_+1
      0004A5 81               [ 4] 1127 	ret
                           0004A6  1128 	Sstm8s_clk$CLK_SYSCLKEmergencyClear$211 ==.
                           0004A6  1129 	Sstm8s_clk$CLK_GetFlagStatus$212 ==.
                                   1130 ;	StdPeriphLib/src/stm8s_clk.c: 634: FlagStatus CLK_GetFlagStatus(CLK_Flag_TypeDef CLK_FLAG)
                                   1131 ;	-----------------------------------------
                                   1132 ;	 function CLK_GetFlagStatus
                                   1133 ;	-----------------------------------------
      0004A6                       1134 _CLK_GetFlagStatus:
      0004A6 3Bu00u01         [ 1] 1135 	push	_fp_+1
      0004A9 3Bu00u00         [ 1] 1136 	push	_fp_
      0004AC 90 96            [ 1] 1137 	ldw	y, sp
      0004AE 90 CFu00u00      [ 2] 1138 	ldw	_fp_, y
                           0004B2  1139 	Sstm8s_clk$CLK_GetFlagStatus$213 ==.
      0004B2 88               [ 1] 1140 	push	a
                           0004B3  1141 	Sstm8s_clk$CLK_GetFlagStatus$214 ==.
                                   1142 ;	StdPeriphLib/src/stm8s_clk.c: 644: statusreg = (uint16_t)((uint16_t)CLK_FLAG & (uint16_t)0xFF00);
      0004B3 4F               [ 1] 1143 	clr	a
      0004B4 97               [ 1] 1144 	ld	xl, a
      0004B5 7B 06            [ 1] 1145 	ld	a, (0x06, sp)
      0004B7 95               [ 1] 1146 	ld	xh, a
                           0004B8  1147 	Sstm8s_clk$CLK_GetFlagStatus$215 ==.
                                   1148 ;	StdPeriphLib/src/stm8s_clk.c: 647: if (statusreg == 0x0100) /* The flag to check is in ICKRregister */
      0004B8 A3 01 00         [ 2] 1149 	cpw	x, #0x0100
      0004BB 26 06            [ 1] 1150 	jrne	00111$
                           0004BD  1151 	Sstm8s_clk$CLK_GetFlagStatus$216 ==.
                                   1152 ;	StdPeriphLib/src/stm8s_clk.c: 649: tmpreg = CLK->ICKR;
      0004BD AE 50 C0         [ 2] 1153 	ldw	x, #0x50c0
      0004C0 F6               [ 1] 1154 	ld	a, (x)
      0004C1 20 25            [ 2] 1155 	jra	00112$
      0004C3                       1156 00111$:
                           0004C3  1157 	Sstm8s_clk$CLK_GetFlagStatus$217 ==.
                                   1158 ;	StdPeriphLib/src/stm8s_clk.c: 651: else if (statusreg == 0x0200) /* The flag to check is in ECKRregister */
      0004C3 A3 02 00         [ 2] 1159 	cpw	x, #0x0200
      0004C6 26 06            [ 1] 1160 	jrne	00108$
                           0004C8  1161 	Sstm8s_clk$CLK_GetFlagStatus$218 ==.
                                   1162 ;	StdPeriphLib/src/stm8s_clk.c: 653: tmpreg = CLK->ECKR;
      0004C8 AE 50 C1         [ 2] 1163 	ldw	x, #0x50c1
      0004CB F6               [ 1] 1164 	ld	a, (x)
      0004CC 20 1A            [ 2] 1165 	jra	00112$
      0004CE                       1166 00108$:
                           0004CE  1167 	Sstm8s_clk$CLK_GetFlagStatus$219 ==.
                                   1168 ;	StdPeriphLib/src/stm8s_clk.c: 655: else if (statusreg == 0x0300) /* The flag to check is in SWIC register */
      0004CE A3 03 00         [ 2] 1169 	cpw	x, #0x0300
      0004D1 26 06            [ 1] 1170 	jrne	00105$
                           0004D3  1171 	Sstm8s_clk$CLK_GetFlagStatus$220 ==.
                                   1172 ;	StdPeriphLib/src/stm8s_clk.c: 657: tmpreg = CLK->SWCR;
      0004D3 AE 50 C5         [ 2] 1173 	ldw	x, #0x50c5
      0004D6 F6               [ 1] 1174 	ld	a, (x)
      0004D7 20 0F            [ 2] 1175 	jra	00112$
      0004D9                       1176 00105$:
                           0004D9  1177 	Sstm8s_clk$CLK_GetFlagStatus$221 ==.
                                   1178 ;	StdPeriphLib/src/stm8s_clk.c: 659: else if (statusreg == 0x0400) /* The flag to check is in CSS register */
      0004D9 A3 04 00         [ 2] 1179 	cpw	x, #0x0400
      0004DC 26 06            [ 1] 1180 	jrne	00102$
                           0004DE  1181 	Sstm8s_clk$CLK_GetFlagStatus$222 ==.
                                   1182 ;	StdPeriphLib/src/stm8s_clk.c: 661: tmpreg = CLK->CSSR;
      0004DE AE 50 C8         [ 2] 1183 	ldw	x, #0x50c8
      0004E1 F6               [ 1] 1184 	ld	a, (x)
      0004E2 20 04            [ 2] 1185 	jra	00112$
      0004E4                       1186 00102$:
                           0004E4  1187 	Sstm8s_clk$CLK_GetFlagStatus$223 ==.
                                   1188 ;	StdPeriphLib/src/stm8s_clk.c: 665: tmpreg = CLK->CCOR;
      0004E4 AE 50 C9         [ 2] 1189 	ldw	x, #0x50c9
      0004E7 F6               [ 1] 1190 	ld	a, (x)
      0004E8                       1191 00112$:
                           0004E8  1192 	Sstm8s_clk$CLK_GetFlagStatus$224 ==.
                                   1193 ;	StdPeriphLib/src/stm8s_clk.c: 668: if ((tmpreg & (uint8_t)CLK_FLAG) != (uint8_t)RESET)
      0004E8 88               [ 1] 1194 	push	a
      0004E9 7B 08            [ 1] 1195 	ld	a, (0x08, sp)
      0004EB 6B 02            [ 1] 1196 	ld	(0x02, sp), a
      0004ED 84               [ 1] 1197 	pop	a
      0004EE 14 01            [ 1] 1198 	and	a, (0x01, sp)
      0004F0 4D               [ 1] 1199 	tnz	a
      0004F1 27 04            [ 1] 1200 	jreq	00114$
                           0004F3  1201 	Sstm8s_clk$CLK_GetFlagStatus$225 ==.
                                   1202 ;	StdPeriphLib/src/stm8s_clk.c: 670: bitstatus = SET;
      0004F3 A6 01            [ 1] 1203 	ld	a, #0x01
      0004F5 20 01            [ 2] 1204 	jra	00115$
      0004F7                       1205 00114$:
                           0004F7  1206 	Sstm8s_clk$CLK_GetFlagStatus$226 ==.
                                   1207 ;	StdPeriphLib/src/stm8s_clk.c: 674: bitstatus = RESET;
      0004F7 4F               [ 1] 1208 	clr	a
      0004F8                       1209 00115$:
                           0004F8  1210 	Sstm8s_clk$CLK_GetFlagStatus$227 ==.
                                   1211 ;	StdPeriphLib/src/stm8s_clk.c: 678: return((FlagStatus)bitstatus);
                           0004F8  1212 	Sstm8s_clk$CLK_GetFlagStatus$228 ==.
                                   1213 ;	StdPeriphLib/src/stm8s_clk.c: 679: }
      0004F8 5B 01            [ 2] 1214 	addw	sp, #1
                           0004FA  1215 	Sstm8s_clk$CLK_GetFlagStatus$229 ==.
                           0004FA  1216 	XG$CLK_GetFlagStatus$0$0 ==.
      0004FA 32u00u00         [ 1] 1217 	pop	_fp_
      0004FD 32u00u01         [ 1] 1218 	pop	_fp_+1
      000500 81               [ 4] 1219 	ret
                           000501  1220 	Sstm8s_clk$CLK_GetFlagStatus$230 ==.
                           000501  1221 	Sstm8s_clk$CLK_GetITStatus$231 ==.
                                   1222 ;	StdPeriphLib/src/stm8s_clk.c: 687: ITStatus CLK_GetITStatus(CLK_IT_TypeDef CLK_IT)
                                   1223 ;	-----------------------------------------
                                   1224 ;	 function CLK_GetITStatus
                                   1225 ;	-----------------------------------------
      000501                       1226 _CLK_GetITStatus:
      000501 3Bu00u01         [ 1] 1227 	push	_fp_+1
      000504 3Bu00u00         [ 1] 1228 	push	_fp_
      000507 90 96            [ 1] 1229 	ldw	y, sp
      000509 90 CFu00u00      [ 2] 1230 	ldw	_fp_, y
                           00050D  1231 	Sstm8s_clk$CLK_GetITStatus$232 ==.
                           00050D  1232 	Sstm8s_clk$CLK_GetITStatus$233 ==.
                                   1233 ;	StdPeriphLib/src/stm8s_clk.c: 694: if (CLK_IT == CLK_IT_SWIF)
      00050D 7B 05            [ 1] 1234 	ld	a, (0x05, sp)
      00050F A1 1C            [ 1] 1235 	cp	a, #0x1c
      000511 26 11            [ 1] 1236 	jrne	00108$
                           000513  1237 	Sstm8s_clk$CLK_GetITStatus$234 ==.
                                   1238 ;	StdPeriphLib/src/stm8s_clk.c: 697: if ((CLK->SWCR & (uint8_t)CLK_IT) == (uint8_t)0x0C)
      000513 AE 50 C5         [ 2] 1239 	ldw	x, #0x50c5
      000516 F6               [ 1] 1240 	ld	a, (x)
      000517 14 05            [ 1] 1241 	and	a, (0x05, sp)
      000519 A1 0C            [ 1] 1242 	cp	a, #0x0c
      00051B 26 04            [ 1] 1243 	jrne	00102$
                           00051D  1244 	Sstm8s_clk$CLK_GetITStatus$235 ==.
                                   1245 ;	StdPeriphLib/src/stm8s_clk.c: 699: bitstatus = SET;
      00051D A6 01            [ 1] 1246 	ld	a, #0x01
      00051F 20 12            [ 2] 1247 	jra	00109$
      000521                       1248 00102$:
                           000521  1249 	Sstm8s_clk$CLK_GetITStatus$236 ==.
                                   1250 ;	StdPeriphLib/src/stm8s_clk.c: 703: bitstatus = RESET;
      000521 4F               [ 1] 1251 	clr	a
      000522 20 0F            [ 2] 1252 	jra	00109$
      000524                       1253 00108$:
                           000524  1254 	Sstm8s_clk$CLK_GetITStatus$237 ==.
                                   1255 ;	StdPeriphLib/src/stm8s_clk.c: 709: if ((CLK->CSSR & (uint8_t)CLK_IT) == (uint8_t)0x0C)
      000524 AE 50 C8         [ 2] 1256 	ldw	x, #0x50c8
      000527 F6               [ 1] 1257 	ld	a, (x)
      000528 14 05            [ 1] 1258 	and	a, (0x05, sp)
      00052A A1 0C            [ 1] 1259 	cp	a, #0x0c
      00052C 26 04            [ 1] 1260 	jrne	00105$
                           00052E  1261 	Sstm8s_clk$CLK_GetITStatus$238 ==.
                                   1262 ;	StdPeriphLib/src/stm8s_clk.c: 711: bitstatus = SET;
      00052E A6 01            [ 1] 1263 	ld	a, #0x01
      000530 20 01            [ 2] 1264 	jra	00109$
      000532                       1265 00105$:
                           000532  1266 	Sstm8s_clk$CLK_GetITStatus$239 ==.
                                   1267 ;	StdPeriphLib/src/stm8s_clk.c: 715: bitstatus = RESET;
      000532 4F               [ 1] 1268 	clr	a
      000533                       1269 00109$:
                           000533  1270 	Sstm8s_clk$CLK_GetITStatus$240 ==.
                                   1271 ;	StdPeriphLib/src/stm8s_clk.c: 720: return bitstatus;
                           000533  1272 	Sstm8s_clk$CLK_GetITStatus$241 ==.
                                   1273 ;	StdPeriphLib/src/stm8s_clk.c: 721: }
                           000533  1274 	Sstm8s_clk$CLK_GetITStatus$242 ==.
                           000533  1275 	XG$CLK_GetITStatus$0$0 ==.
      000533 32u00u00         [ 1] 1276 	pop	_fp_
      000536 32u00u01         [ 1] 1277 	pop	_fp_+1
      000539 81               [ 4] 1278 	ret
                           00053A  1279 	Sstm8s_clk$CLK_GetITStatus$243 ==.
                           00053A  1280 	Sstm8s_clk$CLK_ClearITPendingBit$244 ==.
                                   1281 ;	StdPeriphLib/src/stm8s_clk.c: 729: void CLK_ClearITPendingBit(CLK_IT_TypeDef CLK_IT)
                                   1282 ;	-----------------------------------------
                                   1283 ;	 function CLK_ClearITPendingBit
                                   1284 ;	-----------------------------------------
      00053A                       1285 _CLK_ClearITPendingBit:
      00053A 3Bu00u01         [ 1] 1286 	push	_fp_+1
      00053D 3Bu00u00         [ 1] 1287 	push	_fp_
      000540 90 96            [ 1] 1288 	ldw	y, sp
      000542 90 CFu00u00      [ 2] 1289 	ldw	_fp_, y
                           000546  1290 	Sstm8s_clk$CLK_ClearITPendingBit$245 ==.
                           000546  1291 	Sstm8s_clk$CLK_ClearITPendingBit$246 ==.
                                   1292 ;	StdPeriphLib/src/stm8s_clk.c: 734: if (CLK_IT == (uint8_t)CLK_IT_CSSD)
      000546 7B 05            [ 1] 1293 	ld	a, (0x05, sp)
      000548 A1 0C            [ 1] 1294 	cp	a, #0x0c
      00054A 26 09            [ 1] 1295 	jrne	00102$
                           00054C  1296 	Sstm8s_clk$CLK_ClearITPendingBit$247 ==.
                                   1297 ;	StdPeriphLib/src/stm8s_clk.c: 737: CLK->CSSR &= (uint8_t)(~CLK_CSSR_CSSD);
      00054C AE 50 C8         [ 2] 1298 	ldw	x, #0x50c8
      00054F F6               [ 1] 1299 	ld	a, (x)
      000550 A4 F7            [ 1] 1300 	and	a, #0xf7
      000552 F7               [ 1] 1301 	ld	(x), a
      000553 20 07            [ 2] 1302 	jra	00104$
      000555                       1303 00102$:
                           000555  1304 	Sstm8s_clk$CLK_ClearITPendingBit$248 ==.
                                   1305 ;	StdPeriphLib/src/stm8s_clk.c: 742: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWIF);
      000555 AE 50 C5         [ 2] 1306 	ldw	x, #0x50c5
      000558 F6               [ 1] 1307 	ld	a, (x)
      000559 A4 F7            [ 1] 1308 	and	a, #0xf7
      00055B F7               [ 1] 1309 	ld	(x), a
      00055C                       1310 00104$:
                           00055C  1311 	Sstm8s_clk$CLK_ClearITPendingBit$249 ==.
                                   1312 ;	StdPeriphLib/src/stm8s_clk.c: 745: }
                           00055C  1313 	Sstm8s_clk$CLK_ClearITPendingBit$250 ==.
                           00055C  1314 	XG$CLK_ClearITPendingBit$0$0 ==.
      00055C 32u00u00         [ 1] 1315 	pop	_fp_
      00055F 32u00u01         [ 1] 1316 	pop	_fp_+1
      000562 81               [ 4] 1317 	ret
                           000563  1318 	Sstm8s_clk$CLK_ClearITPendingBit$251 ==.
                                   1319 	.area CODE
                           000563  1320 G$HSIDivFactor$0$0 == .
      000563                       1321 _HSIDivFactor:
      000563 01                    1322 	.db #0x01	; 1
      000564 02                    1323 	.db #0x02	; 2
      000565 04                    1324 	.db #0x04	; 4
      000566 08                    1325 	.db #0x08	; 8
                           000567  1326 G$CLKPrescTable$0$0 == .
      000567                       1327 _CLKPrescTable:
      000567 01                    1328 	.db #0x01	; 1
      000568 02                    1329 	.db #0x02	; 2
      000569 04                    1330 	.db #0x04	; 4
      00056A 08                    1331 	.db #0x08	; 8
      00056B 0A                    1332 	.db #0x0a	; 10
      00056C 10                    1333 	.db #0x10	; 16
      00056D 14                    1334 	.db #0x14	; 20
      00056E 28                    1335 	.db #0x28	; 40
                                   1336 	.area INITIALIZER
                                   1337 	.area CABS (ABS)
                                   1338 
                                   1339 	.area .debug_line (NOLOAD)
      000000 00 00 06 65           1340 	.dw	0,Ldebug_line_end-Ldebug_line_start
      000004                       1341 Ldebug_line_start:
      000004 00 02                 1342 	.dw	2
      000006 00 00 01 18           1343 	.dw	0,Ldebug_line_stmt-6-Ldebug_line_start
      00000A 01                    1344 	.db	1
      00000B 01                    1345 	.db	1
      00000C FB                    1346 	.db	-5
      00000D 0F                    1347 	.db	15
      00000E 0A                    1348 	.db	10
      00000F 00                    1349 	.db	0
      000010 01                    1350 	.db	1
      000011 01                    1351 	.db	1
      000012 01                    1352 	.db	1
      000013 01                    1353 	.db	1
      000014 00                    1354 	.db	0
      000015 00                    1355 	.db	0
      000016 00                    1356 	.db	0
      000017 01                    1357 	.db	1
      000018 2F 68 6F 6D 65 2F 63  1358 	.ascii "/home/cas/software/stm8-binutils/bin/../share/sdcc/include/stm8"
             61 73 2F 73 6F 66 74
             77 61 72 65 2F 73 74
             6D 38 2D 62 69 6E 75
             74 69 6C 73 2F 62 69
             6E 2F 2E 2E 2F 73 68
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65 2F 73 74 6D 38
      000057 00                    1359 	.db	0
      000058 2F 68 6F 6D 65 2F 63  1360 	.ascii "/home/cas/software/stm8-binutils/share/sdcc/include/stm8"
             61 73 2F 73 6F 66 74
             77 61 72 65 2F 73 74
             6D 38 2D 62 69 6E 75
             74 69 6C 73 2F 73 68
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65 2F 73 74 6D 38
      000090 00                    1361 	.db	0
      000091 2F 68 6F 6D 65 2F 63  1362 	.ascii "/home/cas/software/stm8-binutils/bin/../share/sdcc/include"
             61 73 2F 73 6F 66 74
             77 61 72 65 2F 73 74
             6D 38 2D 62 69 6E 75
             74 69 6C 73 2F 62 69
             6E 2F 2E 2E 2F 73 68
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65
      0000CB 00                    1363 	.db	0
      0000CC 2F 68 6F 6D 65 2F 63  1364 	.ascii "/home/cas/software/stm8-binutils/share/sdcc/include"
             61 73 2F 73 6F 66 74
             77 61 72 65 2F 73 74
             6D 38 2D 62 69 6E 75
             74 69 6C 73 2F 73 68
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65
      0000FF 00                    1365 	.db	0
      000100 00                    1366 	.db	0
      000101 53 74 64 50 65 72 69  1367 	.ascii "StdPeriphLib/src/stm8s_clk.c"
             70 68 4C 69 62 2F 73
             72 63 2F 73 74 6D 38
             73 5F 63 6C 6B 2E 63
      00011D 00                    1368 	.db	0
      00011E 00                    1369 	.uleb128	0
      00011F 00                    1370 	.uleb128	0
      000120 00                    1371 	.uleb128	0
      000121 00                    1372 	.db	0
      000122                       1373 Ldebug_line_stmt:
      000122 00                    1374 	.db	0
      000123 05                    1375 	.uleb128	5
      000124 02                    1376 	.db	2
      000125 00 00r00r00           1377 	.dw	0,(Sstm8s_clk$CLK_DeInit$0)
      000129 03                    1378 	.db	3
      00012A C7 00                 1379 	.sleb128	71
      00012C 01                    1380 	.db	1
      00012D 09                    1381 	.db	9
      00012E 00 0C                 1382 	.dw	Sstm8s_clk$CLK_DeInit$2-Sstm8s_clk$CLK_DeInit$0
      000130 03                    1383 	.db	3
      000131 02                    1384 	.sleb128	2
      000132 01                    1385 	.db	1
      000133 09                    1386 	.db	9
      000134 00 04                 1387 	.dw	Sstm8s_clk$CLK_DeInit$3-Sstm8s_clk$CLK_DeInit$2
      000136 03                    1388 	.db	3
      000137 01                    1389 	.sleb128	1
      000138 01                    1390 	.db	1
      000139 09                    1391 	.db	9
      00013A 00 04                 1392 	.dw	Sstm8s_clk$CLK_DeInit$4-Sstm8s_clk$CLK_DeInit$3
      00013C 03                    1393 	.db	3
      00013D 01                    1394 	.sleb128	1
      00013E 01                    1395 	.db	1
      00013F 09                    1396 	.db	9
      000140 00 04                 1397 	.dw	Sstm8s_clk$CLK_DeInit$5-Sstm8s_clk$CLK_DeInit$4
      000142 03                    1398 	.db	3
      000143 01                    1399 	.sleb128	1
      000144 01                    1400 	.db	1
      000145 09                    1401 	.db	9
      000146 00 04                 1402 	.dw	Sstm8s_clk$CLK_DeInit$6-Sstm8s_clk$CLK_DeInit$5
      000148 03                    1403 	.db	3
      000149 01                    1404 	.sleb128	1
      00014A 01                    1405 	.db	1
      00014B 09                    1406 	.db	9
      00014C 00 04                 1407 	.dw	Sstm8s_clk$CLK_DeInit$7-Sstm8s_clk$CLK_DeInit$6
      00014E 03                    1408 	.db	3
      00014F 01                    1409 	.sleb128	1
      000150 01                    1410 	.db	1
      000151 09                    1411 	.db	9
      000152 00 04                 1412 	.dw	Sstm8s_clk$CLK_DeInit$8-Sstm8s_clk$CLK_DeInit$7
      000154 03                    1413 	.db	3
      000155 01                    1414 	.sleb128	1
      000156 01                    1415 	.db	1
      000157 09                    1416 	.db	9
      000158 00 04                 1417 	.dw	Sstm8s_clk$CLK_DeInit$9-Sstm8s_clk$CLK_DeInit$8
      00015A 03                    1418 	.db	3
      00015B 01                    1419 	.sleb128	1
      00015C 01                    1420 	.db	1
      00015D 09                    1421 	.db	9
      00015E 00 04                 1422 	.dw	Sstm8s_clk$CLK_DeInit$10-Sstm8s_clk$CLK_DeInit$9
      000160 03                    1423 	.db	3
      000161 01                    1424 	.sleb128	1
      000162 01                    1425 	.db	1
      000163 09                    1426 	.db	9
      000164 00 04                 1427 	.dw	Sstm8s_clk$CLK_DeInit$11-Sstm8s_clk$CLK_DeInit$10
      000166 03                    1428 	.db	3
      000167 01                    1429 	.sleb128	1
      000168 01                    1430 	.db	1
      000169 09                    1431 	.db	9
      00016A 00 07                 1432 	.dw	Sstm8s_clk$CLK_DeInit$12-Sstm8s_clk$CLK_DeInit$11
      00016C 03                    1433 	.db	3
      00016D 02                    1434 	.sleb128	2
      00016E 01                    1435 	.db	1
      00016F 09                    1436 	.db	9
      000170 00 04                 1437 	.dw	Sstm8s_clk$CLK_DeInit$13-Sstm8s_clk$CLK_DeInit$12
      000172 03                    1438 	.db	3
      000173 01                    1439 	.sleb128	1
      000174 01                    1440 	.db	1
      000175 09                    1441 	.db	9
      000176 00 04                 1442 	.dw	Sstm8s_clk$CLK_DeInit$14-Sstm8s_clk$CLK_DeInit$13
      000178 03                    1443 	.db	3
      000179 01                    1444 	.sleb128	1
      00017A 01                    1445 	.db	1
      00017B 09                    1446 	.db	9
      00017C 00 04                 1447 	.dw	Sstm8s_clk$CLK_DeInit$15-Sstm8s_clk$CLK_DeInit$14
      00017E 03                    1448 	.db	3
      00017F 01                    1449 	.sleb128	1
      000180 01                    1450 	.db	1
      000181 09                    1451 	.db	9
      000182 00 07                 1452 	.dw	7+Sstm8s_clk$CLK_DeInit$16-Sstm8s_clk$CLK_DeInit$15
      000184 00                    1453 	.db	0
      000185 01                    1454 	.uleb128	1
      000186 01                    1455 	.db	1
      000187 00                    1456 	.db	0
      000188 05                    1457 	.uleb128	5
      000189 02                    1458 	.db	2
      00018A 00 00r00r4A           1459 	.dw	0,(Sstm8s_clk$CLK_FastHaltWakeUpCmd$18)
      00018E 03                    1460 	.db	3
      00018F E2 00                 1461 	.sleb128	98
      000191 01                    1462 	.db	1
      000192 09                    1463 	.db	9
      000193 00 0C                 1464 	.dw	Sstm8s_clk$CLK_FastHaltWakeUpCmd$20-Sstm8s_clk$CLK_FastHaltWakeUpCmd$18
      000195 03                    1465 	.db	3
      000196 05                    1466 	.sleb128	5
      000197 01                    1467 	.db	1
      000198 09                    1468 	.db	9
      000199 00 04                 1469 	.dw	Sstm8s_clk$CLK_FastHaltWakeUpCmd$21-Sstm8s_clk$CLK_FastHaltWakeUpCmd$20
      00019B 03                    1470 	.db	3
      00019C 03                    1471 	.sleb128	3
      00019D 01                    1472 	.db	1
      00019E 09                    1473 	.db	9
      00019F 00 09                 1474 	.dw	Sstm8s_clk$CLK_FastHaltWakeUpCmd$22-Sstm8s_clk$CLK_FastHaltWakeUpCmd$21
      0001A1 03                    1475 	.db	3
      0001A2 05                    1476 	.sleb128	5
      0001A3 01                    1477 	.db	1
      0001A4 09                    1478 	.db	9
      0001A5 00 07                 1479 	.dw	Sstm8s_clk$CLK_FastHaltWakeUpCmd$23-Sstm8s_clk$CLK_FastHaltWakeUpCmd$22
      0001A7 03                    1480 	.db	3
      0001A8 02                    1481 	.sleb128	2
      0001A9 01                    1482 	.db	1
      0001AA 09                    1483 	.db	9
      0001AB 00 07                 1484 	.dw	7+Sstm8s_clk$CLK_FastHaltWakeUpCmd$24-Sstm8s_clk$CLK_FastHaltWakeUpCmd$23
      0001AD 00                    1485 	.db	0
      0001AE 01                    1486 	.uleb128	1
      0001AF 01                    1487 	.db	1
      0001B0 00                    1488 	.db	0
      0001B1 05                    1489 	.uleb128	5
      0001B2 02                    1490 	.db	2
      0001B3 00 00r00r71           1491 	.dw	0,(Sstm8s_clk$CLK_HSECmd$26)
      0001B7 03                    1492 	.db	3
      0001B8 F8 00                 1493 	.sleb128	120
      0001BA 01                    1494 	.db	1
      0001BB 09                    1495 	.db	9
      0001BC 00 0C                 1496 	.dw	Sstm8s_clk$CLK_HSECmd$28-Sstm8s_clk$CLK_HSECmd$26
      0001BE 03                    1497 	.db	3
      0001BF 05                    1498 	.sleb128	5
      0001C0 01                    1499 	.db	1
      0001C1 09                    1500 	.db	9
      0001C2 00 04                 1501 	.dw	Sstm8s_clk$CLK_HSECmd$29-Sstm8s_clk$CLK_HSECmd$28
      0001C4 03                    1502 	.db	3
      0001C5 03                    1503 	.sleb128	3
      0001C6 01                    1504 	.db	1
      0001C7 09                    1505 	.db	9
      0001C8 00 06                 1506 	.dw	Sstm8s_clk$CLK_HSECmd$30-Sstm8s_clk$CLK_HSECmd$29
      0001CA 03                    1507 	.db	3
      0001CB 05                    1508 	.sleb128	5
      0001CC 01                    1509 	.db	1
      0001CD 09                    1510 	.db	9
      0001CE 00 04                 1511 	.dw	Sstm8s_clk$CLK_HSECmd$31-Sstm8s_clk$CLK_HSECmd$30
      0001D0 03                    1512 	.db	3
      0001D1 02                    1513 	.sleb128	2
      0001D2 01                    1514 	.db	1
      0001D3 09                    1515 	.db	9
      0001D4 00 07                 1516 	.dw	7+Sstm8s_clk$CLK_HSECmd$32-Sstm8s_clk$CLK_HSECmd$31
      0001D6 00                    1517 	.db	0
      0001D7 01                    1518 	.uleb128	1
      0001D8 01                    1519 	.db	1
      0001D9 00                    1520 	.db	0
      0001DA 05                    1521 	.uleb128	5
      0001DB 02                    1522 	.db	2
      0001DC 00 00r00r92           1523 	.dw	0,(Sstm8s_clk$CLK_HSICmd$34)
      0001E0 03                    1524 	.db	3
      0001E1 8E 01                 1525 	.sleb128	142
      0001E3 01                    1526 	.db	1
      0001E4 09                    1527 	.db	9
      0001E5 00 0C                 1528 	.dw	Sstm8s_clk$CLK_HSICmd$36-Sstm8s_clk$CLK_HSICmd$34
      0001E7 03                    1529 	.db	3
      0001E8 05                    1530 	.sleb128	5
      0001E9 01                    1531 	.db	1
      0001EA 09                    1532 	.db	9
      0001EB 00 04                 1533 	.dw	Sstm8s_clk$CLK_HSICmd$37-Sstm8s_clk$CLK_HSICmd$36
      0001ED 03                    1534 	.db	3
      0001EE 03                    1535 	.sleb128	3
      0001EF 01                    1536 	.db	1
      0001F0 09                    1537 	.db	9
      0001F1 00 06                 1538 	.dw	Sstm8s_clk$CLK_HSICmd$38-Sstm8s_clk$CLK_HSICmd$37
      0001F3 03                    1539 	.db	3
      0001F4 05                    1540 	.sleb128	5
      0001F5 01                    1541 	.db	1
      0001F6 09                    1542 	.db	9
      0001F7 00 04                 1543 	.dw	Sstm8s_clk$CLK_HSICmd$39-Sstm8s_clk$CLK_HSICmd$38
      0001F9 03                    1544 	.db	3
      0001FA 02                    1545 	.sleb128	2
      0001FB 01                    1546 	.db	1
      0001FC 09                    1547 	.db	9
      0001FD 00 07                 1548 	.dw	7+Sstm8s_clk$CLK_HSICmd$40-Sstm8s_clk$CLK_HSICmd$39
      0001FF 00                    1549 	.db	0
      000200 01                    1550 	.uleb128	1
      000201 01                    1551 	.db	1
      000202 00                    1552 	.db	0
      000203 05                    1553 	.uleb128	5
      000204 02                    1554 	.db	2
      000205 00 00r00rB3           1555 	.dw	0,(Sstm8s_clk$CLK_LSICmd$42)
      000209 03                    1556 	.db	3
      00020A A5 01                 1557 	.sleb128	165
      00020C 01                    1558 	.db	1
      00020D 09                    1559 	.db	9
      00020E 00 0C                 1560 	.dw	Sstm8s_clk$CLK_LSICmd$44-Sstm8s_clk$CLK_LSICmd$42
      000210 03                    1561 	.db	3
      000211 05                    1562 	.sleb128	5
      000212 01                    1563 	.db	1
      000213 09                    1564 	.db	9
      000214 00 04                 1565 	.dw	Sstm8s_clk$CLK_LSICmd$45-Sstm8s_clk$CLK_LSICmd$44
      000216 03                    1566 	.db	3
      000217 03                    1567 	.sleb128	3
      000218 01                    1568 	.db	1
      000219 09                    1569 	.db	9
      00021A 00 09                 1570 	.dw	Sstm8s_clk$CLK_LSICmd$46-Sstm8s_clk$CLK_LSICmd$45
      00021C 03                    1571 	.db	3
      00021D 05                    1572 	.sleb128	5
      00021E 01                    1573 	.db	1
      00021F 09                    1574 	.db	9
      000220 00 07                 1575 	.dw	Sstm8s_clk$CLK_LSICmd$47-Sstm8s_clk$CLK_LSICmd$46
      000222 03                    1576 	.db	3
      000223 02                    1577 	.sleb128	2
      000224 01                    1578 	.db	1
      000225 09                    1579 	.db	9
      000226 00 07                 1580 	.dw	7+Sstm8s_clk$CLK_LSICmd$48-Sstm8s_clk$CLK_LSICmd$47
      000228 00                    1581 	.db	0
      000229 01                    1582 	.uleb128	1
      00022A 01                    1583 	.db	1
      00022B 00                    1584 	.db	0
      00022C 05                    1585 	.uleb128	5
      00022D 02                    1586 	.db	2
      00022E 00 00r00rDA           1587 	.dw	0,(Sstm8s_clk$CLK_CCOCmd$50)
      000232 03                    1588 	.db	3
      000233 BC 01                 1589 	.sleb128	188
      000235 01                    1590 	.db	1
      000236 09                    1591 	.db	9
      000237 00 0C                 1592 	.dw	Sstm8s_clk$CLK_CCOCmd$52-Sstm8s_clk$CLK_CCOCmd$50
      000239 03                    1593 	.db	3
      00023A 05                    1594 	.sleb128	5
      00023B 01                    1595 	.db	1
      00023C 09                    1596 	.db	9
      00023D 00 04                 1597 	.dw	Sstm8s_clk$CLK_CCOCmd$53-Sstm8s_clk$CLK_CCOCmd$52
      00023F 03                    1598 	.db	3
      000240 03                    1599 	.sleb128	3
      000241 01                    1600 	.db	1
      000242 09                    1601 	.db	9
      000243 00 06                 1602 	.dw	Sstm8s_clk$CLK_CCOCmd$54-Sstm8s_clk$CLK_CCOCmd$53
      000245 03                    1603 	.db	3
      000246 05                    1604 	.sleb128	5
      000247 01                    1605 	.db	1
      000248 09                    1606 	.db	9
      000249 00 04                 1607 	.dw	Sstm8s_clk$CLK_CCOCmd$55-Sstm8s_clk$CLK_CCOCmd$54
      00024B 03                    1608 	.db	3
      00024C 02                    1609 	.sleb128	2
      00024D 01                    1610 	.db	1
      00024E 09                    1611 	.db	9
      00024F 00 07                 1612 	.dw	7+Sstm8s_clk$CLK_CCOCmd$56-Sstm8s_clk$CLK_CCOCmd$55
      000251 00                    1613 	.db	0
      000252 01                    1614 	.uleb128	1
      000253 01                    1615 	.db	1
      000254 00                    1616 	.db	0
      000255 05                    1617 	.uleb128	5
      000256 02                    1618 	.db	2
      000257 00 00r00rFB           1619 	.dw	0,(Sstm8s_clk$CLK_ClockSwitchCmd$58)
      00025B 03                    1620 	.db	3
      00025C D4 01                 1621 	.sleb128	212
      00025E 01                    1622 	.db	1
      00025F 09                    1623 	.db	9
      000260 00 0C                 1624 	.dw	Sstm8s_clk$CLK_ClockSwitchCmd$60-Sstm8s_clk$CLK_ClockSwitchCmd$58
      000262 03                    1625 	.db	3
      000263 05                    1626 	.sleb128	5
      000264 01                    1627 	.db	1
      000265 09                    1628 	.db	9
      000266 00 04                 1629 	.dw	Sstm8s_clk$CLK_ClockSwitchCmd$61-Sstm8s_clk$CLK_ClockSwitchCmd$60
      000268 03                    1630 	.db	3
      000269 03                    1631 	.sleb128	3
      00026A 01                    1632 	.db	1
      00026B 09                    1633 	.db	9
      00026C 00 09                 1634 	.dw	Sstm8s_clk$CLK_ClockSwitchCmd$62-Sstm8s_clk$CLK_ClockSwitchCmd$61
      00026E 03                    1635 	.db	3
      00026F 05                    1636 	.sleb128	5
      000270 01                    1637 	.db	1
      000271 09                    1638 	.db	9
      000272 00 07                 1639 	.dw	Sstm8s_clk$CLK_ClockSwitchCmd$63-Sstm8s_clk$CLK_ClockSwitchCmd$62
      000274 03                    1640 	.db	3
      000275 02                    1641 	.sleb128	2
      000276 01                    1642 	.db	1
      000277 09                    1643 	.db	9
      000278 00 07                 1644 	.dw	7+Sstm8s_clk$CLK_ClockSwitchCmd$64-Sstm8s_clk$CLK_ClockSwitchCmd$63
      00027A 00                    1645 	.db	0
      00027B 01                    1646 	.uleb128	1
      00027C 01                    1647 	.db	1
      00027D 00                    1648 	.db	0
      00027E 05                    1649 	.uleb128	5
      00027F 02                    1650 	.db	2
      000280 00 00r01r22           1651 	.dw	0,(Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$66)
      000284 03                    1652 	.db	3
      000285 ED 01                 1653 	.sleb128	237
      000287 01                    1654 	.db	1
      000288 09                    1655 	.db	9
      000289 00 0C                 1656 	.dw	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$68-Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$66
      00028B 03                    1657 	.db	3
      00028C 05                    1658 	.sleb128	5
      00028D 01                    1659 	.db	1
      00028E 09                    1660 	.db	9
      00028F 00 04                 1661 	.dw	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$69-Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$68
      000291 03                    1662 	.db	3
      000292 03                    1663 	.sleb128	3
      000293 01                    1664 	.db	1
      000294 09                    1665 	.db	9
      000295 00 09                 1666 	.dw	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$70-Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$69
      000297 03                    1667 	.db	3
      000298 05                    1668 	.sleb128	5
      000299 01                    1669 	.db	1
      00029A 09                    1670 	.db	9
      00029B 00 07                 1671 	.dw	Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$71-Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$70
      00029D 03                    1672 	.db	3
      00029E 02                    1673 	.sleb128	2
      00029F 01                    1674 	.db	1
      0002A0 09                    1675 	.db	9
      0002A1 00 07                 1676 	.dw	7+Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$72-Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$71
      0002A3 00                    1677 	.db	0
      0002A4 01                    1678 	.uleb128	1
      0002A5 01                    1679 	.db	1
      0002A6 00                    1680 	.db	0
      0002A7 05                    1681 	.uleb128	5
      0002A8 02                    1682 	.db	2
      0002A9 00 00r01r49           1683 	.dw	0,(Sstm8s_clk$CLK_PeripheralClockConfig$74)
      0002AD 03                    1684 	.db	3
      0002AE 86 02                 1685 	.sleb128	262
      0002B0 01                    1686 	.db	1
      0002B1 09                    1687 	.db	9
      0002B2 00 0E                 1688 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$76-Sstm8s_clk$CLK_PeripheralClockConfig$74
      0002B4 03                    1689 	.db	3
      0002B5 06                    1690 	.sleb128	6
      0002B6 01                    1691 	.db	1
      0002B7 09                    1692 	.db	9
      0002B8 00 06                 1693 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$77-Sstm8s_clk$CLK_PeripheralClockConfig$76
      0002BA 03                    1694 	.db	3
      0002BB 02                    1695 	.sleb128	2
      0002BC 01                    1696 	.db	1
      0002BD 09                    1697 	.db	9
      0002BE 00 04                 1698 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$78-Sstm8s_clk$CLK_PeripheralClockConfig$77
      0002C0 03                    1699 	.db	3
      0002C1 03                    1700 	.sleb128	3
      0002C2 01                    1701 	.db	1
      0002C3 09                    1702 	.db	9
      0002C4 00 21                 1703 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$79-Sstm8s_clk$CLK_PeripheralClockConfig$78
      0002C6 03                    1704 	.db	3
      0002C7 05                    1705 	.sleb128	5
      0002C8 01                    1706 	.db	1
      0002C9 09                    1707 	.db	9
      0002CA 00 21                 1708 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$80-Sstm8s_clk$CLK_PeripheralClockConfig$79
      0002CC 03                    1709 	.db	3
      0002CD 05                    1710 	.sleb128	5
      0002CE 01                    1711 	.db	1
      0002CF 09                    1712 	.db	9
      0002D0 00 04                 1713 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$81-Sstm8s_clk$CLK_PeripheralClockConfig$80
      0002D2 03                    1714 	.db	3
      0002D3 03                    1715 	.sleb128	3
      0002D4 01                    1716 	.db	1
      0002D5 09                    1717 	.db	9
      0002D6 00 20                 1718 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$82-Sstm8s_clk$CLK_PeripheralClockConfig$81
      0002D8 03                    1719 	.db	3
      0002D9 05                    1720 	.sleb128	5
      0002DA 01                    1721 	.db	1
      0002DB 09                    1722 	.db	9
      0002DC 00 1F                 1723 	.dw	Sstm8s_clk$CLK_PeripheralClockConfig$83-Sstm8s_clk$CLK_PeripheralClockConfig$82
      0002DE 03                    1724 	.db	3
      0002DF 03                    1725 	.sleb128	3
      0002E0 01                    1726 	.db	1
      0002E1 09                    1727 	.db	9
      0002E2 00 09                 1728 	.dw	7+Sstm8s_clk$CLK_PeripheralClockConfig$84-Sstm8s_clk$CLK_PeripheralClockConfig$83
      0002E4 00                    1729 	.db	0
      0002E5 01                    1730 	.uleb128	1
      0002E6 01                    1731 	.db	1
      0002E7 00                    1732 	.db	0
      0002E8 05                    1733 	.uleb128	5
      0002E9 02                    1734 	.db	2
      0002EA 00 00r01rEF           1735 	.dw	0,(Sstm8s_clk$CLK_ClockSwitchConfig$86)
      0002EE 03                    1736 	.db	3
      0002EF B4 02                 1737 	.sleb128	308
      0002F1 01                    1738 	.db	1
      0002F2 09                    1739 	.db	9
      0002F3 00 0E                 1740 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$88-Sstm8s_clk$CLK_ClockSwitchConfig$86
      0002F5 03                    1741 	.db	3
      0002F6 0D                    1742 	.sleb128	13
      0002F7 01                    1743 	.db	1
      0002F8 09                    1744 	.db	9
      0002F9 00 06                 1745 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$89-Sstm8s_clk$CLK_ClockSwitchConfig$88
      0002FB 03                    1746 	.db	3
      0002FC 03                    1747 	.sleb128	3
      0002FD 01                    1748 	.db	1
      0002FE 09                    1749 	.db	9
      0002FF 00 06                 1750 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$90-Sstm8s_clk$CLK_ClockSwitchConfig$89
      000301 03                    1751 	.db	3
      000302 03                    1752 	.sleb128	3
      000303 01                    1753 	.db	1
      000304 09                    1754 	.db	9
      000305 00 07                 1755 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$91-Sstm8s_clk$CLK_ClockSwitchConfig$90
      000307 03                    1756 	.db	3
      000308 03                    1757 	.sleb128	3
      000309 01                    1758 	.db	1
      00030A 09                    1759 	.db	9
      00030B 00 04                 1760 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$92-Sstm8s_clk$CLK_ClockSwitchConfig$91
      00030D 03                    1761 	.db	3
      00030E 02                    1762 	.sleb128	2
      00030F 01                    1763 	.db	1
      000310 09                    1764 	.db	9
      000311 00 09                 1765 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$93-Sstm8s_clk$CLK_ClockSwitchConfig$92
      000313 03                    1766 	.db	3
      000314 04                    1767 	.sleb128	4
      000315 01                    1768 	.db	1
      000316 09                    1769 	.db	9
      000317 00 07                 1770 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$94-Sstm8s_clk$CLK_ClockSwitchConfig$93
      000319 03                    1771 	.db	3
      00031A 04                    1772 	.sleb128	4
      00031B 01                    1773 	.db	1
      00031C 09                    1774 	.db	9
      00031D 00 06                 1775 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$95-Sstm8s_clk$CLK_ClockSwitchConfig$94
      00031F 03                    1776 	.db	3
      000320 03                    1777 	.sleb128	3
      000321 01                    1778 	.db	1
      000322 09                    1779 	.db	9
      000323 00 0F                 1780 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$96-Sstm8s_clk$CLK_ClockSwitchConfig$95
      000325 03                    1781 	.db	3
      000326 02                    1782 	.sleb128	2
      000327 01                    1783 	.db	1
      000328 09                    1784 	.db	9
      000329 00 03                 1785 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$97-Sstm8s_clk$CLK_ClockSwitchConfig$96
      00032B 03                    1786 	.db	3
      00032C 03                    1787 	.sleb128	3
      00032D 01                    1788 	.db	1
      00032E 09                    1789 	.db	9
      00032F 00 03                 1790 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$98-Sstm8s_clk$CLK_ClockSwitchConfig$97
      000331 03                    1791 	.db	3
      000332 02                    1792 	.sleb128	2
      000333 01                    1793 	.db	1
      000334 09                    1794 	.db	9
      000335 00 06                 1795 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$99-Sstm8s_clk$CLK_ClockSwitchConfig$98
      000337 03                    1796 	.db	3
      000338 04                    1797 	.sleb128	4
      000339 01                    1798 	.db	1
      00033A 09                    1799 	.db	9
      00033B 00 04                 1800 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$100-Sstm8s_clk$CLK_ClockSwitchConfig$99
      00033D 03                    1801 	.db	3
      00033E 06                    1802 	.sleb128	6
      00033F 01                    1803 	.db	1
      000340 09                    1804 	.db	9
      000341 00 04                 1805 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$101-Sstm8s_clk$CLK_ClockSwitchConfig$100
      000343 03                    1806 	.db	3
      000344 02                    1807 	.sleb128	2
      000345 01                    1808 	.db	1
      000346 09                    1809 	.db	9
      000347 00 09                 1810 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$102-Sstm8s_clk$CLK_ClockSwitchConfig$101
      000349 03                    1811 	.db	3
      00034A 04                    1812 	.sleb128	4
      00034B 01                    1813 	.db	1
      00034C 09                    1814 	.db	9
      00034D 00 07                 1815 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$103-Sstm8s_clk$CLK_ClockSwitchConfig$102
      00034F 03                    1816 	.db	3
      000350 04                    1817 	.sleb128	4
      000351 01                    1818 	.db	1
      000352 09                    1819 	.db	9
      000353 00 06                 1820 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$104-Sstm8s_clk$CLK_ClockSwitchConfig$103
      000355 03                    1821 	.db	3
      000356 03                    1822 	.sleb128	3
      000357 01                    1823 	.db	1
      000358 09                    1824 	.db	9
      000359 00 10                 1825 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$105-Sstm8s_clk$CLK_ClockSwitchConfig$104
      00035B 03                    1826 	.db	3
      00035C 02                    1827 	.sleb128	2
      00035D 01                    1828 	.db	1
      00035E 09                    1829 	.db	9
      00035F 00 03                 1830 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$106-Sstm8s_clk$CLK_ClockSwitchConfig$105
      000361 03                    1831 	.db	3
      000362 03                    1832 	.sleb128	3
      000363 01                    1833 	.db	1
      000364 09                    1834 	.db	9
      000365 00 03                 1835 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$107-Sstm8s_clk$CLK_ClockSwitchConfig$106
      000367 03                    1836 	.db	3
      000368 03                    1837 	.sleb128	3
      000369 01                    1838 	.db	1
      00036A 09                    1839 	.db	9
      00036B 00 07                 1840 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$108-Sstm8s_clk$CLK_ClockSwitchConfig$107
      00036D 03                    1841 	.db	3
      00036E 01                    1842 	.sleb128	1
      00036F 01                    1843 	.db	1
      000370 09                    1844 	.db	9
      000371 00 06                 1845 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$109-Sstm8s_clk$CLK_ClockSwitchConfig$108
      000373 03                    1846 	.db	3
      000374 04                    1847 	.sleb128	4
      000375 01                    1848 	.db	1
      000376 09                    1849 	.db	9
      000377 00 02                 1850 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$110-Sstm8s_clk$CLK_ClockSwitchConfig$109
      000379 03                    1851 	.db	3
      00037A 03                    1852 	.sleb128	3
      00037B 01                    1853 	.db	1
      00037C 09                    1854 	.db	9
      00037D 00 04                 1855 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$111-Sstm8s_clk$CLK_ClockSwitchConfig$110
      00037F 03                    1856 	.db	3
      000380 03                    1857 	.sleb128	3
      000381 01                    1858 	.db	1
      000382 09                    1859 	.db	9
      000383 00 0A                 1860 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$112-Sstm8s_clk$CLK_ClockSwitchConfig$111
      000385 03                    1861 	.db	3
      000386 02                    1862 	.sleb128	2
      000387 01                    1863 	.db	1
      000388 09                    1864 	.db	9
      000389 00 09                 1865 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$113-Sstm8s_clk$CLK_ClockSwitchConfig$112
      00038B 03                    1866 	.db	3
      00038C 02                    1867 	.sleb128	2
      00038D 01                    1868 	.db	1
      00038E 09                    1869 	.db	9
      00038F 00 0A                 1870 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$114-Sstm8s_clk$CLK_ClockSwitchConfig$113
      000391 03                    1871 	.db	3
      000392 02                    1872 	.sleb128	2
      000393 01                    1873 	.db	1
      000394 09                    1874 	.db	9
      000395 00 09                 1875 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$115-Sstm8s_clk$CLK_ClockSwitchConfig$114
      000397 03                    1876 	.db	3
      000398 02                    1877 	.sleb128	2
      000399 01                    1878 	.db	1
      00039A 09                    1879 	.db	9
      00039B 00 0A                 1880 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$116-Sstm8s_clk$CLK_ClockSwitchConfig$115
      00039D 03                    1881 	.db	3
      00039E 02                    1882 	.sleb128	2
      00039F 01                    1883 	.db	1
      0003A0 09                    1884 	.db	9
      0003A1 00 07                 1885 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$117-Sstm8s_clk$CLK_ClockSwitchConfig$116
      0003A3 03                    1886 	.db	3
      0003A4 03                    1887 	.sleb128	3
      0003A5 01                    1888 	.db	1
      0003A6 09                    1889 	.db	9
      0003A7 00 02                 1890 	.dw	Sstm8s_clk$CLK_ClockSwitchConfig$118-Sstm8s_clk$CLK_ClockSwitchConfig$117
      0003A9 03                    1891 	.db	3
      0003AA 01                    1892 	.sleb128	1
      0003AB 01                    1893 	.db	1
      0003AC 09                    1894 	.db	9
      0003AD 00 09                 1895 	.dw	7+Sstm8s_clk$CLK_ClockSwitchConfig$119-Sstm8s_clk$CLK_ClockSwitchConfig$118
      0003AF 00                    1896 	.db	0
      0003B0 01                    1897 	.uleb128	1
      0003B1 01                    1898 	.db	1
      0003B2 00                    1899 	.db	0
      0003B3 05                    1900 	.uleb128	5
      0003B4 02                    1901 	.db	2
      0003B5 00 00r02rCE           1902 	.dw	0,(Sstm8s_clk$CLK_HSIPrescalerConfig$121)
      0003B9 03                    1903 	.db	3
      0003BA 9E 03                 1904 	.sleb128	414
      0003BC 01                    1905 	.db	1
      0003BD 09                    1906 	.db	9
      0003BE 00 0C                 1907 	.dw	Sstm8s_clk$CLK_HSIPrescalerConfig$123-Sstm8s_clk$CLK_HSIPrescalerConfig$121
      0003C0 03                    1908 	.db	3
      0003C1 06                    1909 	.sleb128	6
      0003C2 01                    1910 	.db	1
      0003C3 09                    1911 	.db	9
      0003C4 00 07                 1912 	.dw	Sstm8s_clk$CLK_HSIPrescalerConfig$124-Sstm8s_clk$CLK_HSIPrescalerConfig$123
      0003C6 03                    1913 	.db	3
      0003C7 03                    1914 	.sleb128	3
      0003C8 01                    1915 	.db	1
      0003C9 09                    1916 	.db	9
      0003CA 00 0A                 1917 	.dw	Sstm8s_clk$CLK_HSIPrescalerConfig$125-Sstm8s_clk$CLK_HSIPrescalerConfig$124
      0003CC 03                    1918 	.db	3
      0003CD 01                    1919 	.sleb128	1
      0003CE 01                    1920 	.db	1
      0003CF 09                    1921 	.db	9
      0003D0 00 07                 1922 	.dw	7+Sstm8s_clk$CLK_HSIPrescalerConfig$126-Sstm8s_clk$CLK_HSIPrescalerConfig$125
      0003D2 00                    1923 	.db	0
      0003D3 01                    1924 	.uleb128	1
      0003D4 01                    1925 	.db	1
      0003D5 00                    1926 	.db	0
      0003D6 05                    1927 	.uleb128	5
      0003D7 02                    1928 	.db	2
      0003D8 00 00r02rF2           1929 	.dw	0,(Sstm8s_clk$CLK_CCOConfig$128)
      0003DC 03                    1930 	.db	3
      0003DD B3 03                 1931 	.sleb128	435
      0003DF 01                    1932 	.db	1
      0003E0 09                    1933 	.db	9
      0003E1 00 0C                 1934 	.dw	Sstm8s_clk$CLK_CCOConfig$130-Sstm8s_clk$CLK_CCOConfig$128
      0003E3 03                    1935 	.db	3
      0003E4 06                    1936 	.sleb128	6
      0003E5 01                    1937 	.db	1
      0003E6 09                    1938 	.db	9
      0003E7 00 07                 1939 	.dw	Sstm8s_clk$CLK_CCOConfig$131-Sstm8s_clk$CLK_CCOConfig$130
      0003E9 03                    1940 	.db	3
      0003EA 03                    1941 	.sleb128	3
      0003EB 01                    1942 	.db	1
      0003EC 09                    1943 	.db	9
      0003ED 00 0A                 1944 	.dw	Sstm8s_clk$CLK_CCOConfig$132-Sstm8s_clk$CLK_CCOConfig$131
      0003EF 03                    1945 	.db	3
      0003F0 03                    1946 	.sleb128	3
      0003F1 01                    1947 	.db	1
      0003F2 09                    1948 	.db	9
      0003F3 00 04                 1949 	.dw	Sstm8s_clk$CLK_CCOConfig$133-Sstm8s_clk$CLK_CCOConfig$132
      0003F5 03                    1950 	.db	3
      0003F6 01                    1951 	.sleb128	1
      0003F7 01                    1952 	.db	1
      0003F8 09                    1953 	.db	9
      0003F9 00 07                 1954 	.dw	7+Sstm8s_clk$CLK_CCOConfig$134-Sstm8s_clk$CLK_CCOConfig$133
      0003FB 00                    1955 	.db	0
      0003FC 01                    1956 	.uleb128	1
      0003FD 01                    1957 	.db	1
      0003FE 00                    1958 	.db	0
      0003FF 05                    1959 	.uleb128	5
      000400 02                    1960 	.db	2
      000401 00 00r03r1A           1961 	.dw	0,(Sstm8s_clk$CLK_ITConfig$136)
      000405 03                    1962 	.db	3
      000406 CA 03                 1963 	.sleb128	458
      000408 01                    1964 	.db	1
      000409 09                    1965 	.db	9
      00040A 00 0C                 1966 	.dw	Sstm8s_clk$CLK_ITConfig$138-Sstm8s_clk$CLK_ITConfig$136
      00040C 03                    1967 	.db	3
      00040D 06                    1968 	.sleb128	6
      00040E 01                    1969 	.db	1
      00040F 09                    1970 	.db	9
      000410 00 04                 1971 	.dw	Sstm8s_clk$CLK_ITConfig$139-Sstm8s_clk$CLK_ITConfig$138
      000412 03                    1972 	.db	3
      000413 02                    1973 	.sleb128	2
      000414 01                    1974 	.db	1
      000415 09                    1975 	.db	9
      000416 00 0C                 1976 	.dw	Sstm8s_clk$CLK_ITConfig$140-Sstm8s_clk$CLK_ITConfig$139
      000418 03                    1977 	.db	3
      000419 03                    1978 	.sleb128	3
      00041A 01                    1979 	.db	1
      00041B 09                    1980 	.db	9
      00041C 00 07                 1981 	.dw	Sstm8s_clk$CLK_ITConfig$141-Sstm8s_clk$CLK_ITConfig$140
      00041E 03                    1982 	.db	3
      00041F 01                    1983 	.sleb128	1
      000420 01                    1984 	.db	1
      000421 09                    1985 	.db	9
      000422 00 02                 1986 	.dw	Sstm8s_clk$CLK_ITConfig$142-Sstm8s_clk$CLK_ITConfig$141
      000424 03                    1987 	.db	3
      000425 01                    1988 	.sleb128	1
      000426 01                    1989 	.db	1
      000427 09                    1990 	.db	9
      000428 00 00                 1991 	.dw	Sstm8s_clk$CLK_ITConfig$143-Sstm8s_clk$CLK_ITConfig$142
      00042A 03                    1992 	.db	3
      00042B 01                    1993 	.sleb128	1
      00042C 01                    1994 	.db	1
      00042D 09                    1995 	.db	9
      00042E 00 07                 1996 	.dw	Sstm8s_clk$CLK_ITConfig$144-Sstm8s_clk$CLK_ITConfig$143
      000430 03                    1997 	.db	3
      000431 01                    1998 	.sleb128	1
      000432 01                    1999 	.db	1
      000433 09                    2000 	.db	9
      000434 00 02                 2001 	.dw	Sstm8s_clk$CLK_ITConfig$145-Sstm8s_clk$CLK_ITConfig$144
      000436 03                    2002 	.db	3
      000437 03                    2003 	.sleb128	3
      000438 01                    2004 	.db	1
      000439 09                    2005 	.db	9
      00043A 00 00                 2006 	.dw	Sstm8s_clk$CLK_ITConfig$146-Sstm8s_clk$CLK_ITConfig$145
      00043C 03                    2007 	.db	3
      00043D 04                    2008 	.sleb128	4
      00043E 01                    2009 	.db	1
      00043F 09                    2010 	.db	9
      000440 00 0C                 2011 	.dw	Sstm8s_clk$CLK_ITConfig$147-Sstm8s_clk$CLK_ITConfig$146
      000442 03                    2012 	.db	3
      000443 03                    2013 	.sleb128	3
      000444 01                    2014 	.db	1
      000445 09                    2015 	.db	9
      000446 00 07                 2016 	.dw	Sstm8s_clk$CLK_ITConfig$148-Sstm8s_clk$CLK_ITConfig$147
      000448 03                    2017 	.db	3
      000449 01                    2018 	.sleb128	1
      00044A 01                    2019 	.db	1
      00044B 09                    2020 	.db	9
      00044C 00 02                 2021 	.dw	Sstm8s_clk$CLK_ITConfig$149-Sstm8s_clk$CLK_ITConfig$148
      00044E 03                    2022 	.db	3
      00044F 01                    2023 	.sleb128	1
      000450 01                    2024 	.db	1
      000451 09                    2025 	.db	9
      000452 00 00                 2026 	.dw	Sstm8s_clk$CLK_ITConfig$150-Sstm8s_clk$CLK_ITConfig$149
      000454 03                    2027 	.db	3
      000455 01                    2028 	.sleb128	1
      000456 01                    2029 	.db	1
      000457 09                    2030 	.db	9
      000458 00 07                 2031 	.dw	Sstm8s_clk$CLK_ITConfig$151-Sstm8s_clk$CLK_ITConfig$150
      00045A 03                    2032 	.db	3
      00045B 04                    2033 	.sleb128	4
      00045C 01                    2034 	.db	1
      00045D 09                    2035 	.db	9
      00045E 00 00                 2036 	.dw	Sstm8s_clk$CLK_ITConfig$152-Sstm8s_clk$CLK_ITConfig$151
      000460 03                    2037 	.db	3
      000461 02                    2038 	.sleb128	2
      000462 01                    2039 	.db	1
      000463 09                    2040 	.db	9
      000464 00 07                 2041 	.dw	7+Sstm8s_clk$CLK_ITConfig$153-Sstm8s_clk$CLK_ITConfig$152
      000466 00                    2042 	.db	0
      000467 01                    2043 	.uleb128	1
      000468 01                    2044 	.db	1
      000469 00                    2045 	.db	0
      00046A 05                    2046 	.uleb128	5
      00046B 02                    2047 	.db	2
      00046C 00 00r03r6B           2048 	.dw	0,(Sstm8s_clk$CLK_SYSCLKConfig$155)
      000470 03                    2049 	.db	3
      000471 F3 03                 2050 	.sleb128	499
      000473 01                    2051 	.db	1
      000474 09                    2052 	.db	9
      000475 00 0E                 2053 	.dw	Sstm8s_clk$CLK_SYSCLKConfig$157-Sstm8s_clk$CLK_SYSCLKConfig$155
      000477 03                    2054 	.db	3
      000478 05                    2055 	.sleb128	5
      000479 01                    2056 	.db	1
      00047A 09                    2057 	.db	9
      00047B 00 04                 2058 	.dw	Sstm8s_clk$CLK_SYSCLKConfig$158-Sstm8s_clk$CLK_SYSCLKConfig$157
      00047D 03                    2059 	.db	3
      00047E 02                    2060 	.sleb128	2
      00047F 01                    2061 	.db	1
      000480 09                    2062 	.db	9
      000481 00 07                 2063 	.dw	Sstm8s_clk$CLK_SYSCLKConfig$159-Sstm8s_clk$CLK_SYSCLKConfig$158
      000483 03                    2064 	.db	3
      000484 01                    2065 	.sleb128	1
      000485 01                    2066 	.db	1
      000486 09                    2067 	.db	9
      000487 00 12                 2068 	.dw	Sstm8s_clk$CLK_SYSCLKConfig$160-Sstm8s_clk$CLK_SYSCLKConfig$159
      000489 03                    2069 	.db	3
      00048A 04                    2070 	.sleb128	4
      00048B 01                    2071 	.db	1
      00048C 09                    2072 	.db	9
      00048D 00 07                 2073 	.dw	Sstm8s_clk$CLK_SYSCLKConfig$161-Sstm8s_clk$CLK_SYSCLKConfig$160
      00048F 03                    2074 	.db	3
      000490 01                    2075 	.sleb128	1
      000491 01                    2076 	.db	1
      000492 09                    2077 	.db	9
      000493 00 10                 2078 	.dw	Sstm8s_clk$CLK_SYSCLKConfig$162-Sstm8s_clk$CLK_SYSCLKConfig$161
      000495 03                    2079 	.db	3
      000496 02                    2080 	.sleb128	2
      000497 01                    2081 	.db	1
      000498 09                    2082 	.db	9
      000499 00 09                 2083 	.dw	7+Sstm8s_clk$CLK_SYSCLKConfig$163-Sstm8s_clk$CLK_SYSCLKConfig$162
      00049B 00                    2084 	.db	0
      00049C 01                    2085 	.uleb128	1
      00049D 01                    2086 	.db	1
      00049E 00                    2087 	.db	0
      00049F 05                    2088 	.uleb128	5
      0004A0 02                    2089 	.db	2
      0004A1 00 00r03rB6           2090 	.dw	0,(Sstm8s_clk$CLK_SWIMConfig$165)
      0004A5 03                    2091 	.db	3
      0004A6 8A 04                 2092 	.sleb128	522
      0004A8 01                    2093 	.db	1
      0004A9 09                    2094 	.db	9
      0004AA 00 0C                 2095 	.dw	Sstm8s_clk$CLK_SWIMConfig$167-Sstm8s_clk$CLK_SWIMConfig$165
      0004AC 03                    2096 	.db	3
      0004AD 05                    2097 	.sleb128	5
      0004AE 01                    2098 	.db	1
      0004AF 09                    2099 	.db	9
      0004B0 00 04                 2100 	.dw	Sstm8s_clk$CLK_SWIMConfig$168-Sstm8s_clk$CLK_SWIMConfig$167
      0004B2 03                    2101 	.db	3
      0004B3 03                    2102 	.sleb128	3
      0004B4 01                    2103 	.db	1
      0004B5 09                    2104 	.db	9
      0004B6 00 06                 2105 	.dw	Sstm8s_clk$CLK_SWIMConfig$169-Sstm8s_clk$CLK_SWIMConfig$168
      0004B8 03                    2106 	.db	3
      0004B9 05                    2107 	.sleb128	5
      0004BA 01                    2108 	.db	1
      0004BB 09                    2109 	.db	9
      0004BC 00 04                 2110 	.dw	Sstm8s_clk$CLK_SWIMConfig$170-Sstm8s_clk$CLK_SWIMConfig$169
      0004BE 03                    2111 	.db	3
      0004BF 02                    2112 	.sleb128	2
      0004C0 01                    2113 	.db	1
      0004C1 09                    2114 	.db	9
      0004C2 00 07                 2115 	.dw	7+Sstm8s_clk$CLK_SWIMConfig$171-Sstm8s_clk$CLK_SWIMConfig$170
      0004C4 00                    2116 	.db	0
      0004C5 01                    2117 	.uleb128	1
      0004C6 01                    2118 	.db	1
      0004C7 00                    2119 	.db	0
      0004C8 05                    2120 	.uleb128	5
      0004C9 02                    2121 	.db	2
      0004CA 00 00r03rD7           2122 	.dw	0,(Sstm8s_clk$CLK_ClockSecuritySystemEnable$173)
      0004CE 03                    2123 	.db	3
      0004CF A2 04                 2124 	.sleb128	546
      0004D1 01                    2125 	.db	1
      0004D2 09                    2126 	.db	9
      0004D3 00 0C                 2127 	.dw	Sstm8s_clk$CLK_ClockSecuritySystemEnable$175-Sstm8s_clk$CLK_ClockSecuritySystemEnable$173
      0004D5 03                    2128 	.db	3
      0004D6 03                    2129 	.sleb128	3
      0004D7 01                    2130 	.db	1
      0004D8 09                    2131 	.db	9
      0004D9 00 04                 2132 	.dw	Sstm8s_clk$CLK_ClockSecuritySystemEnable$176-Sstm8s_clk$CLK_ClockSecuritySystemEnable$175
      0004DB 03                    2133 	.db	3
      0004DC 01                    2134 	.sleb128	1
      0004DD 01                    2135 	.db	1
      0004DE 09                    2136 	.db	9
      0004DF 00 07                 2137 	.dw	7+Sstm8s_clk$CLK_ClockSecuritySystemEnable$177-Sstm8s_clk$CLK_ClockSecuritySystemEnable$176
      0004E1 00                    2138 	.db	0
      0004E2 01                    2139 	.uleb128	1
      0004E3 01                    2140 	.db	1
      0004E4 00                    2141 	.db	0
      0004E5 05                    2142 	.uleb128	5
      0004E6 02                    2143 	.db	2
      0004E7 00 00r03rEE           2144 	.dw	0,(Sstm8s_clk$CLK_GetSYSCLKSource$179)
      0004EB 03                    2145 	.db	3
      0004EC AE 04                 2146 	.sleb128	558
      0004EE 01                    2147 	.db	1
      0004EF 09                    2148 	.db	9
      0004F0 00 0C                 2149 	.dw	Sstm8s_clk$CLK_GetSYSCLKSource$181-Sstm8s_clk$CLK_GetSYSCLKSource$179
      0004F2 03                    2150 	.db	3
      0004F3 02                    2151 	.sleb128	2
      0004F4 01                    2152 	.db	1
      0004F5 09                    2153 	.db	9
      0004F6 00 04                 2154 	.dw	Sstm8s_clk$CLK_GetSYSCLKSource$182-Sstm8s_clk$CLK_GetSYSCLKSource$181
      0004F8 03                    2155 	.db	3
      0004F9 01                    2156 	.sleb128	1
      0004FA 01                    2157 	.db	1
      0004FB 09                    2158 	.db	9
      0004FC 00 07                 2159 	.dw	7+Sstm8s_clk$CLK_GetSYSCLKSource$183-Sstm8s_clk$CLK_GetSYSCLKSource$182
      0004FE 00                    2160 	.db	0
      0004FF 01                    2161 	.uleb128	1
      000500 01                    2162 	.db	1
      000501 00                    2163 	.db	0
      000502 05                    2164 	.uleb128	5
      000503 02                    2165 	.db	2
      000504 00 00r04r05           2166 	.dw	0,(Sstm8s_clk$CLK_GetClockFreq$185)
      000508 03                    2167 	.db	3
      000509 B8 04                 2168 	.sleb128	568
      00050B 01                    2169 	.db	1
      00050C 09                    2170 	.db	9
      00050D 00 0E                 2171 	.dw	Sstm8s_clk$CLK_GetClockFreq$187-Sstm8s_clk$CLK_GetClockFreq$185
      00050F 03                    2172 	.db	3
      000510 07                    2173 	.sleb128	7
      000511 01                    2174 	.db	1
      000512 09                    2175 	.db	9
      000513 00 06                 2176 	.dw	Sstm8s_clk$CLK_GetClockFreq$188-Sstm8s_clk$CLK_GetClockFreq$187
      000515 03                    2177 	.db	3
      000516 02                    2178 	.sleb128	2
      000517 01                    2179 	.db	1
      000518 09                    2180 	.db	9
      000519 00 06                 2181 	.dw	Sstm8s_clk$CLK_GetClockFreq$189-Sstm8s_clk$CLK_GetClockFreq$188
      00051B 03                    2182 	.db	3
      00051C 02                    2183 	.sleb128	2
      00051D 01                    2184 	.db	1
      00051E 09                    2185 	.db	9
      00051F 00 06                 2186 	.dw	Sstm8s_clk$CLK_GetClockFreq$190-Sstm8s_clk$CLK_GetClockFreq$189
      000521 03                    2187 	.db	3
      000522 01                    2188 	.sleb128	1
      000523 01                    2189 	.db	1
      000524 09                    2190 	.db	9
      000525 00 03                 2191 	.dw	Sstm8s_clk$CLK_GetClockFreq$191-Sstm8s_clk$CLK_GetClockFreq$190
      000527 03                    2192 	.db	3
      000528 01                    2193 	.sleb128	1
      000529 01                    2194 	.db	1
      00052A 09                    2195 	.db	9
      00052B 00 0B                 2196 	.dw	Sstm8s_clk$CLK_GetClockFreq$192-Sstm8s_clk$CLK_GetClockFreq$191
      00052D 03                    2197 	.db	3
      00052E 01                    2198 	.sleb128	1
      00052F 01                    2199 	.db	1
      000530 09                    2200 	.db	9
      000531 00 18                 2201 	.dw	Sstm8s_clk$CLK_GetClockFreq$193-Sstm8s_clk$CLK_GetClockFreq$192
      000533 03                    2202 	.db	3
      000534 02                    2203 	.sleb128	2
      000535 01                    2204 	.db	1
      000536 09                    2205 	.db	9
      000537 00 06                 2206 	.dw	Sstm8s_clk$CLK_GetClockFreq$194-Sstm8s_clk$CLK_GetClockFreq$193
      000539 03                    2207 	.db	3
      00053A 02                    2208 	.sleb128	2
      00053B 01                    2209 	.db	1
      00053C 09                    2210 	.db	9
      00053D 00 0B                 2211 	.dw	Sstm8s_clk$CLK_GetClockFreq$195-Sstm8s_clk$CLK_GetClockFreq$194
      00053F 03                    2212 	.db	3
      000540 04                    2213 	.sleb128	4
      000541 01                    2214 	.db	1
      000542 09                    2215 	.db	9
      000543 00 09                 2216 	.dw	Sstm8s_clk$CLK_GetClockFreq$196-Sstm8s_clk$CLK_GetClockFreq$195
      000545 03                    2217 	.db	3
      000546 03                    2218 	.sleb128	3
      000547 01                    2219 	.db	1
      000548 09                    2220 	.db	9
      000549 00 02                 2221 	.dw	Sstm8s_clk$CLK_GetClockFreq$197-Sstm8s_clk$CLK_GetClockFreq$196
      00054B 03                    2222 	.db	3
      00054C 01                    2223 	.sleb128	1
      00054D 01                    2224 	.db	1
      00054E 09                    2225 	.db	9
      00054F 00 09                 2226 	.dw	7+Sstm8s_clk$CLK_GetClockFreq$198-Sstm8s_clk$CLK_GetClockFreq$197
      000551 00                    2227 	.db	0
      000552 01                    2228 	.uleb128	1
      000553 01                    2229 	.db	1
      000554 00                    2230 	.db	0
      000555 05                    2231 	.uleb128	5
      000556 02                    2232 	.db	2
      000557 00 00r04r70           2233 	.dw	0,(Sstm8s_clk$CLK_AdjustHSICalibrationValue$200)
      00055B 03                    2234 	.db	3
      00055C DB 04                 2235 	.sleb128	603
      00055E 01                    2236 	.db	1
      00055F 09                    2237 	.db	9
      000560 00 0C                 2238 	.dw	Sstm8s_clk$CLK_AdjustHSICalibrationValue$202-Sstm8s_clk$CLK_AdjustHSICalibrationValue$200
      000562 03                    2239 	.db	3
      000563 06                    2240 	.sleb128	6
      000564 01                    2241 	.db	1
      000565 09                    2242 	.db	9
      000566 00 0C                 2243 	.dw	Sstm8s_clk$CLK_AdjustHSICalibrationValue$203-Sstm8s_clk$CLK_AdjustHSICalibrationValue$202
      000568 03                    2244 	.db	3
      000569 01                    2245 	.sleb128	1
      00056A 01                    2246 	.db	1
      00056B 09                    2247 	.db	9
      00056C 00 07                 2248 	.dw	7+Sstm8s_clk$CLK_AdjustHSICalibrationValue$204-Sstm8s_clk$CLK_AdjustHSICalibrationValue$203
      00056E 00                    2249 	.db	0
      00056F 01                    2250 	.uleb128	1
      000570 01                    2251 	.db	1
      000571 00                    2252 	.db	0
      000572 05                    2253 	.uleb128	5
      000573 02                    2254 	.db	2
      000574 00 00r04r8F           2255 	.dw	0,(Sstm8s_clk$CLK_SYSCLKEmergencyClear$206)
      000578 03                    2256 	.db	3
      000579 ED 04                 2257 	.sleb128	621
      00057B 01                    2258 	.db	1
      00057C 09                    2259 	.db	9
      00057D 00 0C                 2260 	.dw	Sstm8s_clk$CLK_SYSCLKEmergencyClear$208-Sstm8s_clk$CLK_SYSCLKEmergencyClear$206
      00057F 03                    2261 	.db	3
      000580 02                    2262 	.sleb128	2
      000581 01                    2263 	.db	1
      000582 09                    2264 	.db	9
      000583 00 04                 2265 	.dw	Sstm8s_clk$CLK_SYSCLKEmergencyClear$209-Sstm8s_clk$CLK_SYSCLKEmergencyClear$208
      000585 03                    2266 	.db	3
      000586 01                    2267 	.sleb128	1
      000587 01                    2268 	.db	1
      000588 09                    2269 	.db	9
      000589 00 07                 2270 	.dw	7+Sstm8s_clk$CLK_SYSCLKEmergencyClear$210-Sstm8s_clk$CLK_SYSCLKEmergencyClear$209
      00058B 00                    2271 	.db	0
      00058C 01                    2272 	.uleb128	1
      00058D 01                    2273 	.db	1
      00058E 00                    2274 	.db	0
      00058F 05                    2275 	.uleb128	5
      000590 02                    2276 	.db	2
      000591 00 00r04rA6           2277 	.dw	0,(Sstm8s_clk$CLK_GetFlagStatus$212)
      000595 03                    2278 	.db	3
      000596 F9 04                 2279 	.sleb128	633
      000598 01                    2280 	.db	1
      000599 09                    2281 	.db	9
      00059A 00 0D                 2282 	.dw	Sstm8s_clk$CLK_GetFlagStatus$214-Sstm8s_clk$CLK_GetFlagStatus$212
      00059C 03                    2283 	.db	3
      00059D 0A                    2284 	.sleb128	10
      00059E 01                    2285 	.db	1
      00059F 09                    2286 	.db	9
      0005A0 00 05                 2287 	.dw	Sstm8s_clk$CLK_GetFlagStatus$215-Sstm8s_clk$CLK_GetFlagStatus$214
      0005A2 03                    2288 	.db	3
      0005A3 03                    2289 	.sleb128	3
      0005A4 01                    2290 	.db	1
      0005A5 09                    2291 	.db	9
      0005A6 00 05                 2292 	.dw	Sstm8s_clk$CLK_GetFlagStatus$216-Sstm8s_clk$CLK_GetFlagStatus$215
      0005A8 03                    2293 	.db	3
      0005A9 02                    2294 	.sleb128	2
      0005AA 01                    2295 	.db	1
      0005AB 09                    2296 	.db	9
      0005AC 00 06                 2297 	.dw	Sstm8s_clk$CLK_GetFlagStatus$217-Sstm8s_clk$CLK_GetFlagStatus$216
      0005AE 03                    2298 	.db	3
      0005AF 02                    2299 	.sleb128	2
      0005B0 01                    2300 	.db	1
      0005B1 09                    2301 	.db	9
      0005B2 00 05                 2302 	.dw	Sstm8s_clk$CLK_GetFlagStatus$218-Sstm8s_clk$CLK_GetFlagStatus$217
      0005B4 03                    2303 	.db	3
      0005B5 02                    2304 	.sleb128	2
      0005B6 01                    2305 	.db	1
      0005B7 09                    2306 	.db	9
      0005B8 00 06                 2307 	.dw	Sstm8s_clk$CLK_GetFlagStatus$219-Sstm8s_clk$CLK_GetFlagStatus$218
      0005BA 03                    2308 	.db	3
      0005BB 02                    2309 	.sleb128	2
      0005BC 01                    2310 	.db	1
      0005BD 09                    2311 	.db	9
      0005BE 00 05                 2312 	.dw	Sstm8s_clk$CLK_GetFlagStatus$220-Sstm8s_clk$CLK_GetFlagStatus$219
      0005C0 03                    2313 	.db	3
      0005C1 02                    2314 	.sleb128	2
      0005C2 01                    2315 	.db	1
      0005C3 09                    2316 	.db	9
      0005C4 00 06                 2317 	.dw	Sstm8s_clk$CLK_GetFlagStatus$221-Sstm8s_clk$CLK_GetFlagStatus$220
      0005C6 03                    2318 	.db	3
      0005C7 02                    2319 	.sleb128	2
      0005C8 01                    2320 	.db	1
      0005C9 09                    2321 	.db	9
      0005CA 00 05                 2322 	.dw	Sstm8s_clk$CLK_GetFlagStatus$222-Sstm8s_clk$CLK_GetFlagStatus$221
      0005CC 03                    2323 	.db	3
      0005CD 02                    2324 	.sleb128	2
      0005CE 01                    2325 	.db	1
      0005CF 09                    2326 	.db	9
      0005D0 00 06                 2327 	.dw	Sstm8s_clk$CLK_GetFlagStatus$223-Sstm8s_clk$CLK_GetFlagStatus$222
      0005D2 03                    2328 	.db	3
      0005D3 04                    2329 	.sleb128	4
      0005D4 01                    2330 	.db	1
      0005D5 09                    2331 	.db	9
      0005D6 00 04                 2332 	.dw	Sstm8s_clk$CLK_GetFlagStatus$224-Sstm8s_clk$CLK_GetFlagStatus$223
      0005D8 03                    2333 	.db	3
      0005D9 03                    2334 	.sleb128	3
      0005DA 01                    2335 	.db	1
      0005DB 09                    2336 	.db	9
      0005DC 00 0B                 2337 	.dw	Sstm8s_clk$CLK_GetFlagStatus$225-Sstm8s_clk$CLK_GetFlagStatus$224
      0005DE 03                    2338 	.db	3
      0005DF 02                    2339 	.sleb128	2
      0005E0 01                    2340 	.db	1
      0005E1 09                    2341 	.db	9
      0005E2 00 04                 2342 	.dw	Sstm8s_clk$CLK_GetFlagStatus$226-Sstm8s_clk$CLK_GetFlagStatus$225
      0005E4 03                    2343 	.db	3
      0005E5 04                    2344 	.sleb128	4
      0005E6 01                    2345 	.db	1
      0005E7 09                    2346 	.db	9
      0005E8 00 01                 2347 	.dw	Sstm8s_clk$CLK_GetFlagStatus$227-Sstm8s_clk$CLK_GetFlagStatus$226
      0005EA 03                    2348 	.db	3
      0005EB 04                    2349 	.sleb128	4
      0005EC 01                    2350 	.db	1
      0005ED 09                    2351 	.db	9
      0005EE 00 00                 2352 	.dw	Sstm8s_clk$CLK_GetFlagStatus$228-Sstm8s_clk$CLK_GetFlagStatus$227
      0005F0 03                    2353 	.db	3
      0005F1 01                    2354 	.sleb128	1
      0005F2 01                    2355 	.db	1
      0005F3 09                    2356 	.db	9
      0005F4 00 09                 2357 	.dw	7+Sstm8s_clk$CLK_GetFlagStatus$229-Sstm8s_clk$CLK_GetFlagStatus$228
      0005F6 00                    2358 	.db	0
      0005F7 01                    2359 	.uleb128	1
      0005F8 01                    2360 	.db	1
      0005F9 00                    2361 	.db	0
      0005FA 05                    2362 	.uleb128	5
      0005FB 02                    2363 	.db	2
      0005FC 00 00r05r01           2364 	.dw	0,(Sstm8s_clk$CLK_GetITStatus$231)
      000600 03                    2365 	.db	3
      000601 AE 05                 2366 	.sleb128	686
      000603 01                    2367 	.db	1
      000604 09                    2368 	.db	9
      000605 00 0C                 2369 	.dw	Sstm8s_clk$CLK_GetITStatus$233-Sstm8s_clk$CLK_GetITStatus$231
      000607 03                    2370 	.db	3
      000608 07                    2371 	.sleb128	7
      000609 01                    2372 	.db	1
      00060A 09                    2373 	.db	9
      00060B 00 06                 2374 	.dw	Sstm8s_clk$CLK_GetITStatus$234-Sstm8s_clk$CLK_GetITStatus$233
      00060D 03                    2375 	.db	3
      00060E 03                    2376 	.sleb128	3
      00060F 01                    2377 	.db	1
      000610 09                    2378 	.db	9
      000611 00 0A                 2379 	.dw	Sstm8s_clk$CLK_GetITStatus$235-Sstm8s_clk$CLK_GetITStatus$234
      000613 03                    2380 	.db	3
      000614 02                    2381 	.sleb128	2
      000615 01                    2382 	.db	1
      000616 09                    2383 	.db	9
      000617 00 04                 2384 	.dw	Sstm8s_clk$CLK_GetITStatus$236-Sstm8s_clk$CLK_GetITStatus$235
      000619 03                    2385 	.db	3
      00061A 04                    2386 	.sleb128	4
      00061B 01                    2387 	.db	1
      00061C 09                    2388 	.db	9
      00061D 00 03                 2389 	.dw	Sstm8s_clk$CLK_GetITStatus$237-Sstm8s_clk$CLK_GetITStatus$236
      00061F 03                    2390 	.db	3
      000620 06                    2391 	.sleb128	6
      000621 01                    2392 	.db	1
      000622 09                    2393 	.db	9
      000623 00 0A                 2394 	.dw	Sstm8s_clk$CLK_GetITStatus$238-Sstm8s_clk$CLK_GetITStatus$237
      000625 03                    2395 	.db	3
      000626 02                    2396 	.sleb128	2
      000627 01                    2397 	.db	1
      000628 09                    2398 	.db	9
      000629 00 04                 2399 	.dw	Sstm8s_clk$CLK_GetITStatus$239-Sstm8s_clk$CLK_GetITStatus$238
      00062B 03                    2400 	.db	3
      00062C 04                    2401 	.sleb128	4
      00062D 01                    2402 	.db	1
      00062E 09                    2403 	.db	9
      00062F 00 01                 2404 	.dw	Sstm8s_clk$CLK_GetITStatus$240-Sstm8s_clk$CLK_GetITStatus$239
      000631 03                    2405 	.db	3
      000632 05                    2406 	.sleb128	5
      000633 01                    2407 	.db	1
      000634 09                    2408 	.db	9
      000635 00 00                 2409 	.dw	Sstm8s_clk$CLK_GetITStatus$241-Sstm8s_clk$CLK_GetITStatus$240
      000637 03                    2410 	.db	3
      000638 01                    2411 	.sleb128	1
      000639 01                    2412 	.db	1
      00063A 09                    2413 	.db	9
      00063B 00 07                 2414 	.dw	7+Sstm8s_clk$CLK_GetITStatus$242-Sstm8s_clk$CLK_GetITStatus$241
      00063D 00                    2415 	.db	0
      00063E 01                    2416 	.uleb128	1
      00063F 01                    2417 	.db	1
      000640 00                    2418 	.db	0
      000641 05                    2419 	.uleb128	5
      000642 02                    2420 	.db	2
      000643 00 00r05r3A           2421 	.dw	0,(Sstm8s_clk$CLK_ClearITPendingBit$244)
      000647 03                    2422 	.db	3
      000648 D8 05                 2423 	.sleb128	728
      00064A 01                    2424 	.db	1
      00064B 09                    2425 	.db	9
      00064C 00 0C                 2426 	.dw	Sstm8s_clk$CLK_ClearITPendingBit$246-Sstm8s_clk$CLK_ClearITPendingBit$244
      00064E 03                    2427 	.db	3
      00064F 05                    2428 	.sleb128	5
      000650 01                    2429 	.db	1
      000651 09                    2430 	.db	9
      000652 00 06                 2431 	.dw	Sstm8s_clk$CLK_ClearITPendingBit$247-Sstm8s_clk$CLK_ClearITPendingBit$246
      000654 03                    2432 	.db	3
      000655 03                    2433 	.sleb128	3
      000656 01                    2434 	.db	1
      000657 09                    2435 	.db	9
      000658 00 09                 2436 	.dw	Sstm8s_clk$CLK_ClearITPendingBit$248-Sstm8s_clk$CLK_ClearITPendingBit$247
      00065A 03                    2437 	.db	3
      00065B 05                    2438 	.sleb128	5
      00065C 01                    2439 	.db	1
      00065D 09                    2440 	.db	9
      00065E 00 07                 2441 	.dw	Sstm8s_clk$CLK_ClearITPendingBit$249-Sstm8s_clk$CLK_ClearITPendingBit$248
      000660 03                    2442 	.db	3
      000661 03                    2443 	.sleb128	3
      000662 01                    2444 	.db	1
      000663 09                    2445 	.db	9
      000664 00 07                 2446 	.dw	7+Sstm8s_clk$CLK_ClearITPendingBit$250-Sstm8s_clk$CLK_ClearITPendingBit$249
      000666 00                    2447 	.db	0
      000667 01                    2448 	.uleb128	1
      000668 01                    2449 	.db	1
      000669                       2450 Ldebug_line_end:
                                   2451 
                                   2452 	.area .debug_loc (NOLOAD)
      000000                       2453 Ldebug_loc_start:
      000000 00 00r05r46           2454 	.dw	0,(Sstm8s_clk$CLK_ClearITPendingBit$245)
      000004 00 00r05r63           2455 	.dw	0,(Sstm8s_clk$CLK_ClearITPendingBit$251)
      000008 00 02                 2456 	.dw	2
      00000A 8F                    2457 	.db	143
      00000B 01                    2458 	.sleb128	1
      00000C 00 00 00 00           2459 	.dw	0,0
      000010 00 00 00 00           2460 	.dw	0,0
      000014 00 00r05r0D           2461 	.dw	0,(Sstm8s_clk$CLK_GetITStatus$232)
      000018 00 00r05r3A           2462 	.dw	0,(Sstm8s_clk$CLK_GetITStatus$243)
      00001C 00 02                 2463 	.dw	2
      00001E 8F                    2464 	.db	143
      00001F 01                    2465 	.sleb128	1
      000020 00 00 00 00           2466 	.dw	0,0
      000024 00 00 00 00           2467 	.dw	0,0
      000028 00 00r04rB2           2468 	.dw	0,(Sstm8s_clk$CLK_GetFlagStatus$213)
      00002C 00 00r05r01           2469 	.dw	0,(Sstm8s_clk$CLK_GetFlagStatus$230)
      000030 00 02                 2470 	.dw	2
      000032 8F                    2471 	.db	143
      000033 01                    2472 	.sleb128	1
      000034 00 00 00 00           2473 	.dw	0,0
      000038 00 00 00 00           2474 	.dw	0,0
      00003C 00 00r04r9B           2475 	.dw	0,(Sstm8s_clk$CLK_SYSCLKEmergencyClear$207)
      000040 00 00r04rA6           2476 	.dw	0,(Sstm8s_clk$CLK_SYSCLKEmergencyClear$211)
      000044 00 02                 2477 	.dw	2
      000046 8F                    2478 	.db	143
      000047 01                    2479 	.sleb128	1
      000048 00 00 00 00           2480 	.dw	0,0
      00004C 00 00 00 00           2481 	.dw	0,0
      000050 00 00r04r7C           2482 	.dw	0,(Sstm8s_clk$CLK_AdjustHSICalibrationValue$201)
      000054 00 00r04r8F           2483 	.dw	0,(Sstm8s_clk$CLK_AdjustHSICalibrationValue$205)
      000058 00 02                 2484 	.dw	2
      00005A 8F                    2485 	.db	143
      00005B 01                    2486 	.sleb128	1
      00005C 00 00 00 00           2487 	.dw	0,0
      000060 00 00 00 00           2488 	.dw	0,0
      000064 00 00r04r11           2489 	.dw	0,(Sstm8s_clk$CLK_GetClockFreq$186)
      000068 00 00r04r70           2490 	.dw	0,(Sstm8s_clk$CLK_GetClockFreq$199)
      00006C 00 02                 2491 	.dw	2
      00006E 8F                    2492 	.db	143
      00006F 01                    2493 	.sleb128	1
      000070 00 00 00 00           2494 	.dw	0,0
      000074 00 00 00 00           2495 	.dw	0,0
      000078 00 00r03rFA           2496 	.dw	0,(Sstm8s_clk$CLK_GetSYSCLKSource$180)
      00007C 00 00r04r05           2497 	.dw	0,(Sstm8s_clk$CLK_GetSYSCLKSource$184)
      000080 00 02                 2498 	.dw	2
      000082 8F                    2499 	.db	143
      000083 01                    2500 	.sleb128	1
      000084 00 00 00 00           2501 	.dw	0,0
      000088 00 00 00 00           2502 	.dw	0,0
      00008C 00 00r03rE3           2503 	.dw	0,(Sstm8s_clk$CLK_ClockSecuritySystemEnable$174)
      000090 00 00r03rEE           2504 	.dw	0,(Sstm8s_clk$CLK_ClockSecuritySystemEnable$178)
      000094 00 02                 2505 	.dw	2
      000096 8F                    2506 	.db	143
      000097 01                    2507 	.sleb128	1
      000098 00 00 00 00           2508 	.dw	0,0
      00009C 00 00 00 00           2509 	.dw	0,0
      0000A0 00 00r03rC2           2510 	.dw	0,(Sstm8s_clk$CLK_SWIMConfig$166)
      0000A4 00 00r03rD7           2511 	.dw	0,(Sstm8s_clk$CLK_SWIMConfig$172)
      0000A8 00 02                 2512 	.dw	2
      0000AA 8F                    2513 	.db	143
      0000AB 01                    2514 	.sleb128	1
      0000AC 00 00 00 00           2515 	.dw	0,0
      0000B0 00 00 00 00           2516 	.dw	0,0
      0000B4 00 00r03r77           2517 	.dw	0,(Sstm8s_clk$CLK_SYSCLKConfig$156)
      0000B8 00 00r03rB6           2518 	.dw	0,(Sstm8s_clk$CLK_SYSCLKConfig$164)
      0000BC 00 02                 2519 	.dw	2
      0000BE 8F                    2520 	.db	143
      0000BF 01                    2521 	.sleb128	1
      0000C0 00 00 00 00           2522 	.dw	0,0
      0000C4 00 00 00 00           2523 	.dw	0,0
      0000C8 00 00r03r26           2524 	.dw	0,(Sstm8s_clk$CLK_ITConfig$137)
      0000CC 00 00r03r6B           2525 	.dw	0,(Sstm8s_clk$CLK_ITConfig$154)
      0000D0 00 02                 2526 	.dw	2
      0000D2 8F                    2527 	.db	143
      0000D3 01                    2528 	.sleb128	1
      0000D4 00 00 00 00           2529 	.dw	0,0
      0000D8 00 00 00 00           2530 	.dw	0,0
      0000DC 00 00r02rFE           2531 	.dw	0,(Sstm8s_clk$CLK_CCOConfig$129)
      0000E0 00 00r03r1A           2532 	.dw	0,(Sstm8s_clk$CLK_CCOConfig$135)
      0000E4 00 02                 2533 	.dw	2
      0000E6 8F                    2534 	.db	143
      0000E7 01                    2535 	.sleb128	1
      0000E8 00 00 00 00           2536 	.dw	0,0
      0000EC 00 00 00 00           2537 	.dw	0,0
      0000F0 00 00r02rDA           2538 	.dw	0,(Sstm8s_clk$CLK_HSIPrescalerConfig$122)
      0000F4 00 00r02rF2           2539 	.dw	0,(Sstm8s_clk$CLK_HSIPrescalerConfig$127)
      0000F8 00 02                 2540 	.dw	2
      0000FA 8F                    2541 	.db	143
      0000FB 01                    2542 	.sleb128	1
      0000FC 00 00 00 00           2543 	.dw	0,0
      000100 00 00 00 00           2544 	.dw	0,0
      000104 00 00r01rFB           2545 	.dw	0,(Sstm8s_clk$CLK_ClockSwitchConfig$87)
      000108 00 00r02rCE           2546 	.dw	0,(Sstm8s_clk$CLK_ClockSwitchConfig$120)
      00010C 00 02                 2547 	.dw	2
      00010E 8F                    2548 	.db	143
      00010F 01                    2549 	.sleb128	1
      000110 00 00 00 00           2550 	.dw	0,0
      000114 00 00 00 00           2551 	.dw	0,0
      000118 00 00r01r55           2552 	.dw	0,(Sstm8s_clk$CLK_PeripheralClockConfig$75)
      00011C 00 00r01rEF           2553 	.dw	0,(Sstm8s_clk$CLK_PeripheralClockConfig$85)
      000120 00 02                 2554 	.dw	2
      000122 8F                    2555 	.db	143
      000123 01                    2556 	.sleb128	1
      000124 00 00 00 00           2557 	.dw	0,0
      000128 00 00 00 00           2558 	.dw	0,0
      00012C 00 00r01r2E           2559 	.dw	0,(Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$67)
      000130 00 00r01r49           2560 	.dw	0,(Sstm8s_clk$CLK_SlowActiveHaltWakeUpCmd$73)
      000134 00 02                 2561 	.dw	2
      000136 8F                    2562 	.db	143
      000137 01                    2563 	.sleb128	1
      000138 00 00 00 00           2564 	.dw	0,0
      00013C 00 00 00 00           2565 	.dw	0,0
      000140 00 00r01r07           2566 	.dw	0,(Sstm8s_clk$CLK_ClockSwitchCmd$59)
      000144 00 00r01r22           2567 	.dw	0,(Sstm8s_clk$CLK_ClockSwitchCmd$65)
      000148 00 02                 2568 	.dw	2
      00014A 8F                    2569 	.db	143
      00014B 01                    2570 	.sleb128	1
      00014C 00 00 00 00           2571 	.dw	0,0
      000150 00 00 00 00           2572 	.dw	0,0
      000154 00 00r00rE6           2573 	.dw	0,(Sstm8s_clk$CLK_CCOCmd$51)
      000158 00 00r00rFB           2574 	.dw	0,(Sstm8s_clk$CLK_CCOCmd$57)
      00015C 00 02                 2575 	.dw	2
      00015E 8F                    2576 	.db	143
      00015F 01                    2577 	.sleb128	1
      000160 00 00 00 00           2578 	.dw	0,0
      000164 00 00 00 00           2579 	.dw	0,0
      000168 00 00r00rBF           2580 	.dw	0,(Sstm8s_clk$CLK_LSICmd$43)
      00016C 00 00r00rDA           2581 	.dw	0,(Sstm8s_clk$CLK_LSICmd$49)
      000170 00 02                 2582 	.dw	2
      000172 8F                    2583 	.db	143
      000173 01                    2584 	.sleb128	1
      000174 00 00 00 00           2585 	.dw	0,0
      000178 00 00 00 00           2586 	.dw	0,0
      00017C 00 00r00r9E           2587 	.dw	0,(Sstm8s_clk$CLK_HSICmd$35)
      000180 00 00r00rB3           2588 	.dw	0,(Sstm8s_clk$CLK_HSICmd$41)
      000184 00 02                 2589 	.dw	2
      000186 8F                    2590 	.db	143
      000187 01                    2591 	.sleb128	1
      000188 00 00 00 00           2592 	.dw	0,0
      00018C 00 00 00 00           2593 	.dw	0,0
      000190 00 00r00r7D           2594 	.dw	0,(Sstm8s_clk$CLK_HSECmd$27)
      000194 00 00r00r92           2595 	.dw	0,(Sstm8s_clk$CLK_HSECmd$33)
      000198 00 02                 2596 	.dw	2
      00019A 8F                    2597 	.db	143
      00019B 01                    2598 	.sleb128	1
      00019C 00 00 00 00           2599 	.dw	0,0
      0001A0 00 00 00 00           2600 	.dw	0,0
      0001A4 00 00r00r56           2601 	.dw	0,(Sstm8s_clk$CLK_FastHaltWakeUpCmd$19)
      0001A8 00 00r00r71           2602 	.dw	0,(Sstm8s_clk$CLK_FastHaltWakeUpCmd$25)
      0001AC 00 02                 2603 	.dw	2
      0001AE 8F                    2604 	.db	143
      0001AF 01                    2605 	.sleb128	1
      0001B0 00 00 00 00           2606 	.dw	0,0
      0001B4 00 00 00 00           2607 	.dw	0,0
      0001B8 00 00r00r0C           2608 	.dw	0,(Sstm8s_clk$CLK_DeInit$1)
      0001BC 00 00r00r4A           2609 	.dw	0,(Sstm8s_clk$CLK_DeInit$17)
      0001C0 00 02                 2610 	.dw	2
      0001C2 8F                    2611 	.db	143
      0001C3 01                    2612 	.sleb128	1
      0001C4 00 00 00 00           2613 	.dw	0,0
      0001C8 00 00 00 00           2614 	.dw	0,0
                                   2615 
                                   2616 	.area .debug_abbrev (NOLOAD)
      000000                       2617 Ldebug_abbrev:
      000000 0B                    2618 	.uleb128	11
      000001 34                    2619 	.uleb128	52
      000002 00                    2620 	.db	0
      000003 03                    2621 	.uleb128	3
      000004 08                    2622 	.uleb128	8
      000005 49                    2623 	.uleb128	73
      000006 13                    2624 	.uleb128	19
      000007 00                    2625 	.uleb128	0
      000008 00                    2626 	.uleb128	0
      000009 05                    2627 	.uleb128	5
      00000A 0B                    2628 	.uleb128	11
      00000B 00                    2629 	.db	0
      00000C 00                    2630 	.uleb128	0
      00000D 00                    2631 	.uleb128	0
      00000E 08                    2632 	.uleb128	8
      00000F 0B                    2633 	.uleb128	11
      000010 01                    2634 	.db	1
      000011 00                    2635 	.uleb128	0
      000012 00                    2636 	.uleb128	0
      000013 0C                    2637 	.uleb128	12
      000014 2E                    2638 	.uleb128	46
      000015 00                    2639 	.db	0
      000016 03                    2640 	.uleb128	3
      000017 08                    2641 	.uleb128	8
      000018 11                    2642 	.uleb128	17
      000019 01                    2643 	.uleb128	1
      00001A 12                    2644 	.uleb128	18
      00001B 01                    2645 	.uleb128	1
      00001C 3F                    2646 	.uleb128	63
      00001D 0C                    2647 	.uleb128	12
      00001E 40                    2648 	.uleb128	64
      00001F 06                    2649 	.uleb128	6
      000020 49                    2650 	.uleb128	73
      000021 13                    2651 	.uleb128	19
      000022 00                    2652 	.uleb128	0
      000023 00                    2653 	.uleb128	0
      000024 10                    2654 	.uleb128	16
      000025 34                    2655 	.uleb128	52
      000026 00                    2656 	.db	0
      000027 02                    2657 	.uleb128	2
      000028 0A                    2658 	.uleb128	10
      000029 03                    2659 	.uleb128	3
      00002A 08                    2660 	.uleb128	8
      00002B 3F                    2661 	.uleb128	63
      00002C 0C                    2662 	.uleb128	12
      00002D 49                    2663 	.uleb128	73
      00002E 13                    2664 	.uleb128	19
      00002F 00                    2665 	.uleb128	0
      000030 00                    2666 	.uleb128	0
      000031 04                    2667 	.uleb128	4
      000032 05                    2668 	.uleb128	5
      000033 00                    2669 	.db	0
      000034 02                    2670 	.uleb128	2
      000035 0A                    2671 	.uleb128	10
      000036 03                    2672 	.uleb128	3
      000037 08                    2673 	.uleb128	8
      000038 49                    2674 	.uleb128	73
      000039 13                    2675 	.uleb128	19
      00003A 00                    2676 	.uleb128	0
      00003B 00                    2677 	.uleb128	0
      00003C 0E                    2678 	.uleb128	14
      00003D 01                    2679 	.uleb128	1
      00003E 01                    2680 	.db	1
      00003F 01                    2681 	.uleb128	1
      000040 13                    2682 	.uleb128	19
      000041 0B                    2683 	.uleb128	11
      000042 0B                    2684 	.uleb128	11
      000043 49                    2685 	.uleb128	73
      000044 13                    2686 	.uleb128	19
      000045 00                    2687 	.uleb128	0
      000046 00                    2688 	.uleb128	0
      000047 03                    2689 	.uleb128	3
      000048 2E                    2690 	.uleb128	46
      000049 01                    2691 	.db	1
      00004A 01                    2692 	.uleb128	1
      00004B 13                    2693 	.uleb128	19
      00004C 03                    2694 	.uleb128	3
      00004D 08                    2695 	.uleb128	8
      00004E 11                    2696 	.uleb128	17
      00004F 01                    2697 	.uleb128	1
      000050 12                    2698 	.uleb128	18
      000051 01                    2699 	.uleb128	1
      000052 3F                    2700 	.uleb128	63
      000053 0C                    2701 	.uleb128	12
      000054 40                    2702 	.uleb128	64
      000055 06                    2703 	.uleb128	6
      000056 00                    2704 	.uleb128	0
      000057 00                    2705 	.uleb128	0
      000058 0A                    2706 	.uleb128	10
      000059 34                    2707 	.uleb128	52
      00005A 00                    2708 	.db	0
      00005B 02                    2709 	.uleb128	2
      00005C 0A                    2710 	.uleb128	10
      00005D 03                    2711 	.uleb128	3
      00005E 08                    2712 	.uleb128	8
      00005F 49                    2713 	.uleb128	73
      000060 13                    2714 	.uleb128	19
      000061 00                    2715 	.uleb128	0
      000062 00                    2716 	.uleb128	0
      000063 09                    2717 	.uleb128	9
      000064 2E                    2718 	.uleb128	46
      000065 01                    2719 	.db	1
      000066 01                    2720 	.uleb128	1
      000067 13                    2721 	.uleb128	19
      000068 03                    2722 	.uleb128	3
      000069 08                    2723 	.uleb128	8
      00006A 11                    2724 	.uleb128	17
      00006B 01                    2725 	.uleb128	1
      00006C 12                    2726 	.uleb128	18
      00006D 01                    2727 	.uleb128	1
      00006E 3F                    2728 	.uleb128	63
      00006F 0C                    2729 	.uleb128	12
      000070 40                    2730 	.uleb128	64
      000071 06                    2731 	.uleb128	6
      000072 49                    2732 	.uleb128	73
      000073 13                    2733 	.uleb128	19
      000074 00                    2734 	.uleb128	0
      000075 00                    2735 	.uleb128	0
      000076 07                    2736 	.uleb128	7
      000077 0B                    2737 	.uleb128	11
      000078 01                    2738 	.db	1
      000079 01                    2739 	.uleb128	1
      00007A 13                    2740 	.uleb128	19
      00007B 00                    2741 	.uleb128	0
      00007C 00                    2742 	.uleb128	0
      00007D 0D                    2743 	.uleb128	13
      00007E 26                    2744 	.uleb128	38
      00007F 00                    2745 	.db	0
      000080 49                    2746 	.uleb128	73
      000081 13                    2747 	.uleb128	19
      000082 00                    2748 	.uleb128	0
      000083 00                    2749 	.uleb128	0
      000084 01                    2750 	.uleb128	1
      000085 11                    2751 	.uleb128	17
      000086 01                    2752 	.db	1
      000087 03                    2753 	.uleb128	3
      000088 08                    2754 	.uleb128	8
      000089 10                    2755 	.uleb128	16
      00008A 06                    2756 	.uleb128	6
      00008B 13                    2757 	.uleb128	19
      00008C 0B                    2758 	.uleb128	11
      00008D 25                    2759 	.uleb128	37
      00008E 08                    2760 	.uleb128	8
      00008F 00                    2761 	.uleb128	0
      000090 00                    2762 	.uleb128	0
      000091 02                    2763 	.uleb128	2
      000092 2E                    2764 	.uleb128	46
      000093 00                    2765 	.db	0
      000094 03                    2766 	.uleb128	3
      000095 08                    2767 	.uleb128	8
      000096 11                    2768 	.uleb128	17
      000097 01                    2769 	.uleb128	1
      000098 12                    2770 	.uleb128	18
      000099 01                    2771 	.uleb128	1
      00009A 3F                    2772 	.uleb128	63
      00009B 0C                    2773 	.uleb128	12
      00009C 40                    2774 	.uleb128	64
      00009D 06                    2775 	.uleb128	6
      00009E 00                    2776 	.uleb128	0
      00009F 00                    2777 	.uleb128	0
      0000A0 0F                    2778 	.uleb128	15
      0000A1 21                    2779 	.uleb128	33
      0000A2 00                    2780 	.db	0
      0000A3 2F                    2781 	.uleb128	47
      0000A4 0B                    2782 	.uleb128	11
      0000A5 00                    2783 	.uleb128	0
      0000A6 00                    2784 	.uleb128	0
      0000A7 06                    2785 	.uleb128	6
      0000A8 24                    2786 	.uleb128	36
      0000A9 00                    2787 	.db	0
      0000AA 03                    2788 	.uleb128	3
      0000AB 08                    2789 	.uleb128	8
      0000AC 0B                    2790 	.uleb128	11
      0000AD 0B                    2791 	.uleb128	11
      0000AE 3E                    2792 	.uleb128	62
      0000AF 0B                    2793 	.uleb128	11
      0000B0 00                    2794 	.uleb128	0
      0000B1 00                    2795 	.uleb128	0
      0000B2 00                    2796 	.uleb128	0
                                   2797 
                                   2798 	.area .debug_info (NOLOAD)
      000000 00 00 07 02           2799 	.dw	0,Ldebug_info_end-Ldebug_info_start
      000004                       2800 Ldebug_info_start:
      000004 00 02                 2801 	.dw	2
      000006 00 00r00r00           2802 	.dw	0,(Ldebug_abbrev)
      00000A 04                    2803 	.db	4
      00000B 01                    2804 	.uleb128	1
      00000C 53 74 64 50 65 72 69  2805 	.ascii "StdPeriphLib/src/stm8s_clk.c"
             70 68 4C 69 62 2F 73
             72 63 2F 73 74 6D 38
             73 5F 63 6C 6B 2E 63
      000028 00                    2806 	.db	0
      000029 00 00r00r00           2807 	.dw	0,(Ldebug_line_start+-4)
      00002D 01                    2808 	.db	1
      00002E 53 44 43 43 20 76 65  2809 	.ascii "SDCC version 3.6.0 #9615"
             72 73 69 6F 6E 20 33
             2E 36 2E 30 20 23 39
             36 31 35
      000046 00                    2810 	.db	0
      000047 02                    2811 	.uleb128	2
      000048 43 4C 4B 5F 44 65 49  2812 	.ascii "CLK_DeInit"
             6E 69 74
      000052 00                    2813 	.db	0
      000053 00 00r00r00           2814 	.dw	0,(_CLK_DeInit)
      000057 00 00r00r4A           2815 	.dw	0,(XG$CLK_DeInit$0$0+7)
      00005B 01                    2816 	.db	1
      00005C 00 00r01rB8           2817 	.dw	0,(Ldebug_loc_start+440)
      000060 03                    2818 	.uleb128	3
      000061 00 00 00 9C           2819 	.dw	0,156
      000065 43 4C 4B 5F 46 61 73  2820 	.ascii "CLK_FastHaltWakeUpCmd"
             74 48 61 6C 74 57 61
             6B 65 55 70 43 6D 64
      00007A 00                    2821 	.db	0
      00007B 00 00r00r4A           2822 	.dw	0,(_CLK_FastHaltWakeUpCmd)
      00007F 00 00r00r71           2823 	.dw	0,(XG$CLK_FastHaltWakeUpCmd$0$0+7)
      000083 01                    2824 	.db	1
      000084 00 00r01rA4           2825 	.dw	0,(Ldebug_loc_start+420)
      000088 04                    2826 	.uleb128	4
      000089 02                    2827 	.db	2
      00008A 91                    2828 	.db	145
      00008B 04                    2829 	.sleb128	4
      00008C 4E 65 77 53 74 61 74  2830 	.ascii "NewState"
             65
      000094 00                    2831 	.db	0
      000095 00 00 00 9C           2832 	.dw	0,156
      000099 05                    2833 	.uleb128	5
      00009A 05                    2834 	.uleb128	5
      00009B 00                    2835 	.uleb128	0
      00009C 06                    2836 	.uleb128	6
      00009D 75 6E 73 69 67 6E 65  2837 	.ascii "unsigned char"
             64 20 63 68 61 72
      0000AA 00                    2838 	.db	0
      0000AB 01                    2839 	.db	1
      0000AC 08                    2840 	.db	8
      0000AD 03                    2841 	.uleb128	3
      0000AE 00 00 00 DE           2842 	.dw	0,222
      0000B2 43 4C 4B 5F 48 53 45  2843 	.ascii "CLK_HSECmd"
             43 6D 64
      0000BC 00                    2844 	.db	0
      0000BD 00 00r00r71           2845 	.dw	0,(_CLK_HSECmd)
      0000C1 00 00r00r92           2846 	.dw	0,(XG$CLK_HSECmd$0$0+7)
      0000C5 01                    2847 	.db	1
      0000C6 00 00r01r90           2848 	.dw	0,(Ldebug_loc_start+400)
      0000CA 04                    2849 	.uleb128	4
      0000CB 02                    2850 	.db	2
      0000CC 91                    2851 	.db	145
      0000CD 04                    2852 	.sleb128	4
      0000CE 4E 65 77 53 74 61 74  2853 	.ascii "NewState"
             65
      0000D6 00                    2854 	.db	0
      0000D7 00 00 00 9C           2855 	.dw	0,156
      0000DB 05                    2856 	.uleb128	5
      0000DC 05                    2857 	.uleb128	5
      0000DD 00                    2858 	.uleb128	0
      0000DE 03                    2859 	.uleb128	3
      0000DF 00 00 01 0F           2860 	.dw	0,271
      0000E3 43 4C 4B 5F 48 53 49  2861 	.ascii "CLK_HSICmd"
             43 6D 64
      0000ED 00                    2862 	.db	0
      0000EE 00 00r00r92           2863 	.dw	0,(_CLK_HSICmd)
      0000F2 00 00r00rB3           2864 	.dw	0,(XG$CLK_HSICmd$0$0+7)
      0000F6 01                    2865 	.db	1
      0000F7 00 00r01r7C           2866 	.dw	0,(Ldebug_loc_start+380)
      0000FB 04                    2867 	.uleb128	4
      0000FC 02                    2868 	.db	2
      0000FD 91                    2869 	.db	145
      0000FE 04                    2870 	.sleb128	4
      0000FF 4E 65 77 53 74 61 74  2871 	.ascii "NewState"
             65
      000107 00                    2872 	.db	0
      000108 00 00 00 9C           2873 	.dw	0,156
      00010C 05                    2874 	.uleb128	5
      00010D 05                    2875 	.uleb128	5
      00010E 00                    2876 	.uleb128	0
      00010F 03                    2877 	.uleb128	3
      000110 00 00 01 40           2878 	.dw	0,320
      000114 43 4C 4B 5F 4C 53 49  2879 	.ascii "CLK_LSICmd"
             43 6D 64
      00011E 00                    2880 	.db	0
      00011F 00 00r00rB3           2881 	.dw	0,(_CLK_LSICmd)
      000123 00 00r00rDA           2882 	.dw	0,(XG$CLK_LSICmd$0$0+7)
      000127 01                    2883 	.db	1
      000128 00 00r01r68           2884 	.dw	0,(Ldebug_loc_start+360)
      00012C 04                    2885 	.uleb128	4
      00012D 02                    2886 	.db	2
      00012E 91                    2887 	.db	145
      00012F 04                    2888 	.sleb128	4
      000130 4E 65 77 53 74 61 74  2889 	.ascii "NewState"
             65
      000138 00                    2890 	.db	0
      000139 00 00 00 9C           2891 	.dw	0,156
      00013D 05                    2892 	.uleb128	5
      00013E 05                    2893 	.uleb128	5
      00013F 00                    2894 	.uleb128	0
      000140 03                    2895 	.uleb128	3
      000141 00 00 01 71           2896 	.dw	0,369
      000145 43 4C 4B 5F 43 43 4F  2897 	.ascii "CLK_CCOCmd"
             43 6D 64
      00014F 00                    2898 	.db	0
      000150 00 00r00rDA           2899 	.dw	0,(_CLK_CCOCmd)
      000154 00 00r00rFB           2900 	.dw	0,(XG$CLK_CCOCmd$0$0+7)
      000158 01                    2901 	.db	1
      000159 00 00r01r54           2902 	.dw	0,(Ldebug_loc_start+340)
      00015D 04                    2903 	.uleb128	4
      00015E 02                    2904 	.db	2
      00015F 91                    2905 	.db	145
      000160 04                    2906 	.sleb128	4
      000161 4E 65 77 53 74 61 74  2907 	.ascii "NewState"
             65
      000169 00                    2908 	.db	0
      00016A 00 00 00 9C           2909 	.dw	0,156
      00016E 05                    2910 	.uleb128	5
      00016F 05                    2911 	.uleb128	5
      000170 00                    2912 	.uleb128	0
      000171 03                    2913 	.uleb128	3
      000172 00 00 01 AA           2914 	.dw	0,426
      000176 43 4C 4B 5F 43 6C 6F  2915 	.ascii "CLK_ClockSwitchCmd"
             63 6B 53 77 69 74 63
             68 43 6D 64
      000188 00                    2916 	.db	0
      000189 00 00r00rFB           2917 	.dw	0,(_CLK_ClockSwitchCmd)
      00018D 00 00r01r22           2918 	.dw	0,(XG$CLK_ClockSwitchCmd$0$0+7)
      000191 01                    2919 	.db	1
      000192 00 00r01r40           2920 	.dw	0,(Ldebug_loc_start+320)
      000196 04                    2921 	.uleb128	4
      000197 02                    2922 	.db	2
      000198 91                    2923 	.db	145
      000199 04                    2924 	.sleb128	4
      00019A 4E 65 77 53 74 61 74  2925 	.ascii "NewState"
             65
      0001A2 00                    2926 	.db	0
      0001A3 00 00 00 9C           2927 	.dw	0,156
      0001A7 05                    2928 	.uleb128	5
      0001A8 05                    2929 	.uleb128	5
      0001A9 00                    2930 	.uleb128	0
      0001AA 03                    2931 	.uleb128	3
      0001AB 00 00 01 EC           2932 	.dw	0,492
      0001AF 43 4C 4B 5F 53 6C 6F  2933 	.ascii "CLK_SlowActiveHaltWakeUpCmd"
             77 41 63 74 69 76 65
             48 61 6C 74 57 61 6B
             65 55 70 43 6D 64
      0001CA 00                    2934 	.db	0
      0001CB 00 00r01r22           2935 	.dw	0,(_CLK_SlowActiveHaltWakeUpCmd)
      0001CF 00 00r01r49           2936 	.dw	0,(XG$CLK_SlowActiveHaltWakeUpCmd$0$0+7)
      0001D3 01                    2937 	.db	1
      0001D4 00 00r01r2C           2938 	.dw	0,(Ldebug_loc_start+300)
      0001D8 04                    2939 	.uleb128	4
      0001D9 02                    2940 	.db	2
      0001DA 91                    2941 	.db	145
      0001DB 04                    2942 	.sleb128	4
      0001DC 4E 65 77 53 74 61 74  2943 	.ascii "NewState"
             65
      0001E4 00                    2944 	.db	0
      0001E5 00 00 00 9C           2945 	.dw	0,156
      0001E9 05                    2946 	.uleb128	5
      0001EA 05                    2947 	.uleb128	5
      0001EB 00                    2948 	.uleb128	0
      0001EC 03                    2949 	.uleb128	3
      0001ED 00 00 02 4D           2950 	.dw	0,589
      0001F1 43 4C 4B 5F 50 65 72  2951 	.ascii "CLK_PeripheralClockConfig"
             69 70 68 65 72 61 6C
             43 6C 6F 63 6B 43 6F
             6E 66 69 67
      00020A 00                    2952 	.db	0
      00020B 00 00r01r49           2953 	.dw	0,(_CLK_PeripheralClockConfig)
      00020F 00 00r01rEF           2954 	.dw	0,(XG$CLK_PeripheralClockConfig$0$0+7)
      000213 01                    2955 	.db	1
      000214 00 00r01r18           2956 	.dw	0,(Ldebug_loc_start+280)
      000218 04                    2957 	.uleb128	4
      000219 02                    2958 	.db	2
      00021A 91                    2959 	.db	145
      00021B 04                    2960 	.sleb128	4
      00021C 43 4C 4B 5F 50 65 72  2961 	.ascii "CLK_Peripheral"
             69 70 68 65 72 61 6C
      00022A 00                    2962 	.db	0
      00022B 00 00 00 9C           2963 	.dw	0,156
      00022F 04                    2964 	.uleb128	4
      000230 02                    2965 	.db	2
      000231 91                    2966 	.db	145
      000232 05                    2967 	.sleb128	5
      000233 4E 65 77 53 74 61 74  2968 	.ascii "NewState"
             65
      00023B 00                    2969 	.db	0
      00023C 00 00 00 9C           2970 	.dw	0,156
      000240 07                    2971 	.uleb128	7
      000241 00 00 02 48           2972 	.dw	0,584
      000245 05                    2973 	.uleb128	5
      000246 05                    2974 	.uleb128	5
      000247 00                    2975 	.uleb128	0
      000248 08                    2976 	.uleb128	8
      000249 05                    2977 	.uleb128	5
      00024A 05                    2978 	.uleb128	5
      00024B 00                    2979 	.uleb128	0
      00024C 00                    2980 	.uleb128	0
      00024D 09                    2981 	.uleb128	9
      00024E 00 00 03 26           2982 	.dw	0,806
      000252 43 4C 4B 5F 43 6C 6F  2983 	.ascii "CLK_ClockSwitchConfig"
             63 6B 53 77 69 74 63
             68 43 6F 6E 66 69 67
      000267 00                    2984 	.db	0
      000268 00 00r01rEF           2985 	.dw	0,(_CLK_ClockSwitchConfig)
      00026C 00 00r02rCE           2986 	.dw	0,(XG$CLK_ClockSwitchConfig$0$0+7)
      000270 01                    2987 	.db	1
      000271 00 00r01r04           2988 	.dw	0,(Ldebug_loc_start+260)
      000275 00 00 00 9C           2989 	.dw	0,156
      000279 04                    2990 	.uleb128	4
      00027A 02                    2991 	.db	2
      00027B 91                    2992 	.db	145
      00027C 04                    2993 	.sleb128	4
      00027D 43 4C 4B 5F 53 77 69  2994 	.ascii "CLK_SwitchMode"
             74 63 68 4D 6F 64 65
      00028B 00                    2995 	.db	0
      00028C 00 00 00 9C           2996 	.dw	0,156
      000290 04                    2997 	.uleb128	4
      000291 02                    2998 	.db	2
      000292 91                    2999 	.db	145
      000293 05                    3000 	.sleb128	5
      000294 43 4C 4B 5F 4E 65 77  3001 	.ascii "CLK_NewClock"
             43 6C 6F 63 6B
      0002A0 00                    3002 	.db	0
      0002A1 00 00 00 9C           3003 	.dw	0,156
      0002A5 04                    3004 	.uleb128	4
      0002A6 02                    3005 	.db	2
      0002A7 91                    3006 	.db	145
      0002A8 06                    3007 	.sleb128	6
      0002A9 49 54 53 74 61 74 65  3008 	.ascii "ITState"
      0002B0 00                    3009 	.db	0
      0002B1 00 00 00 9C           3010 	.dw	0,156
      0002B5 04                    3011 	.uleb128	4
      0002B6 02                    3012 	.db	2
      0002B7 91                    3013 	.db	145
      0002B8 07                    3014 	.sleb128	7
      0002B9 43 4C 4B 5F 43 75 72  3015 	.ascii "CLK_CurrentClockState"
             72 65 6E 74 43 6C 6F
             63 6B 53 74 61 74 65
      0002CE 00                    3016 	.db	0
      0002CF 00 00 00 9C           3017 	.dw	0,156
      0002D3 07                    3018 	.uleb128	7
      0002D4 00 00 02 DE           3019 	.dw	0,734
      0002D8 05                    3020 	.uleb128	5
      0002D9 05                    3021 	.uleb128	5
      0002DA 05                    3022 	.uleb128	5
      0002DB 05                    3023 	.uleb128	5
      0002DC 05                    3024 	.uleb128	5
      0002DD 00                    3025 	.uleb128	0
      0002DE 07                    3026 	.uleb128	7
      0002DF 00 00 02 E9           3027 	.dw	0,745
      0002E3 05                    3028 	.uleb128	5
      0002E4 05                    3029 	.uleb128	5
      0002E5 05                    3030 	.uleb128	5
      0002E6 05                    3031 	.uleb128	5
      0002E7 05                    3032 	.uleb128	5
      0002E8 00                    3033 	.uleb128	0
      0002E9 07                    3034 	.uleb128	7
      0002EA 00 00 02 F2           3035 	.dw	0,754
      0002EE 05                    3036 	.uleb128	5
      0002EF 05                    3037 	.uleb128	5
      0002F0 05                    3038 	.uleb128	5
      0002F1 00                    3039 	.uleb128	0
      0002F2 0A                    3040 	.uleb128	10
      0002F3 02                    3041 	.db	2
      0002F4 91                    3042 	.db	145
      0002F5 7F                    3043 	.sleb128	-1
      0002F6 63 6C 6F 63 6B 5F 6D  3044 	.ascii "clock_master"
             61 73 74 65 72
      000302 00                    3045 	.db	0
      000303 00 00 00 9C           3046 	.dw	0,156
      000307 0B                    3047 	.uleb128	11
      000308 44 6F 77 6E 43 6F 75  3048 	.ascii "DownCounter"
             6E 74 65 72
      000313 00                    3049 	.db	0
      000314 00 00 03 26           3050 	.dw	0,806
      000318 0A                    3051 	.uleb128	10
      000319 02                    3052 	.db	2
      00031A 91                    3053 	.db	145
      00031B 7E                    3054 	.sleb128	-2
      00031C 53 77 69 66           3055 	.ascii "Swif"
      000320 00                    3056 	.db	0
      000321 00 00 00 9C           3057 	.dw	0,156
      000325 00                    3058 	.uleb128	0
      000326 06                    3059 	.uleb128	6
      000327 75 6E 73 69 67 6E 65  3060 	.ascii "unsigned int"
             64 20 69 6E 74
      000333 00                    3061 	.db	0
      000334 02                    3062 	.db	2
      000335 07                    3063 	.db	7
      000336 03                    3064 	.uleb128	3
      000337 00 00 03 75           3065 	.dw	0,885
      00033B 43 4C 4B 5F 48 53 49  3066 	.ascii "CLK_HSIPrescalerConfig"
             50 72 65 73 63 61 6C
             65 72 43 6F 6E 66 69
             67
      000351 00                    3067 	.db	0
      000352 00 00r02rCE           3068 	.dw	0,(_CLK_HSIPrescalerConfig)
      000356 00 00r02rF2           3069 	.dw	0,(XG$CLK_HSIPrescalerConfig$0$0+7)
      00035A 01                    3070 	.db	1
      00035B 00 00r00rF0           3071 	.dw	0,(Ldebug_loc_start+240)
      00035F 04                    3072 	.uleb128	4
      000360 02                    3073 	.db	2
      000361 91                    3074 	.db	145
      000362 04                    3075 	.sleb128	4
      000363 48 53 49 50 72 65 73  3076 	.ascii "HSIPrescaler"
             63 61 6C 65 72
      00036F 00                    3077 	.db	0
      000370 00 00 00 9C           3078 	.dw	0,156
      000374 00                    3079 	.uleb128	0
      000375 03                    3080 	.uleb128	3
      000376 00 00 03 A6           3081 	.dw	0,934
      00037A 43 4C 4B 5F 43 43 4F  3082 	.ascii "CLK_CCOConfig"
             43 6F 6E 66 69 67
      000387 00                    3083 	.db	0
      000388 00 00r02rF2           3084 	.dw	0,(_CLK_CCOConfig)
      00038C 00 00r03r1A           3085 	.dw	0,(XG$CLK_CCOConfig$0$0+7)
      000390 01                    3086 	.db	1
      000391 00 00r00rDC           3087 	.dw	0,(Ldebug_loc_start+220)
      000395 04                    3088 	.uleb128	4
      000396 02                    3089 	.db	2
      000397 91                    3090 	.db	145
      000398 04                    3091 	.sleb128	4
      000399 43 4C 4B 5F 43 43 4F  3092 	.ascii "CLK_CCO"
      0003A0 00                    3093 	.db	0
      0003A1 00 00 00 9C           3094 	.dw	0,156
      0003A5 00                    3095 	.uleb128	0
      0003A6 03                    3096 	.uleb128	3
      0003A7 00 00 03 F0           3097 	.dw	0,1008
      0003AB 43 4C 4B 5F 49 54 43  3098 	.ascii "CLK_ITConfig"
             6F 6E 66 69 67
      0003B7 00                    3099 	.db	0
      0003B8 00 00r03r1A           3100 	.dw	0,(_CLK_ITConfig)
      0003BC 00 00r03r6B           3101 	.dw	0,(XG$CLK_ITConfig$0$0+7)
      0003C0 01                    3102 	.db	1
      0003C1 00 00r00rC8           3103 	.dw	0,(Ldebug_loc_start+200)
      0003C5 04                    3104 	.uleb128	4
      0003C6 02                    3105 	.db	2
      0003C7 91                    3106 	.db	145
      0003C8 04                    3107 	.sleb128	4
      0003C9 43 4C 4B 5F 49 54     3108 	.ascii "CLK_IT"
      0003CF 00                    3109 	.db	0
      0003D0 00 00 00 9C           3110 	.dw	0,156
      0003D4 04                    3111 	.uleb128	4
      0003D5 02                    3112 	.db	2
      0003D6 91                    3113 	.db	145
      0003D7 05                    3114 	.sleb128	5
      0003D8 4E 65 77 53 74 61 74  3115 	.ascii "NewState"
             65
      0003E0 00                    3116 	.db	0
      0003E1 00 00 00 9C           3117 	.dw	0,156
      0003E5 07                    3118 	.uleb128	7
      0003E6 00 00 03 EC           3119 	.dw	0,1004
      0003EA 05                    3120 	.uleb128	5
      0003EB 00                    3121 	.uleb128	0
      0003EC 08                    3122 	.uleb128	8
      0003ED 05                    3123 	.uleb128	5
      0003EE 00                    3124 	.uleb128	0
      0003EF 00                    3125 	.uleb128	0
      0003F0 03                    3126 	.uleb128	3
      0003F1 00 00 04 2C           3127 	.dw	0,1068
      0003F5 43 4C 4B 5F 53 59 53  3128 	.ascii "CLK_SYSCLKConfig"
             43 4C 4B 43 6F 6E 66
             69 67
      000405 00                    3129 	.db	0
      000406 00 00r03r6B           3130 	.dw	0,(_CLK_SYSCLKConfig)
      00040A 00 00r03rB6           3131 	.dw	0,(XG$CLK_SYSCLKConfig$0$0+7)
      00040E 01                    3132 	.db	1
      00040F 00 00r00rB4           3133 	.dw	0,(Ldebug_loc_start+180)
      000413 04                    3134 	.uleb128	4
      000414 02                    3135 	.db	2
      000415 91                    3136 	.db	145
      000416 04                    3137 	.sleb128	4
      000417 43 4C 4B 5F 50 72 65  3138 	.ascii "CLK_Prescaler"
             73 63 61 6C 65 72
      000424 00                    3139 	.db	0
      000425 00 00 00 9C           3140 	.dw	0,156
      000429 05                    3141 	.uleb128	5
      00042A 05                    3142 	.uleb128	5
      00042B 00                    3143 	.uleb128	0
      00042C 03                    3144 	.uleb128	3
      00042D 00 00 04 68           3145 	.dw	0,1128
      000431 43 4C 4B 5F 53 57 49  3146 	.ascii "CLK_SWIMConfig"
             4D 43 6F 6E 66 69 67
      00043F 00                    3147 	.db	0
      000440 00 00r03rB6           3148 	.dw	0,(_CLK_SWIMConfig)
      000444 00 00r03rD7           3149 	.dw	0,(XG$CLK_SWIMConfig$0$0+7)
      000448 01                    3150 	.db	1
      000449 00 00r00rA0           3151 	.dw	0,(Ldebug_loc_start+160)
      00044D 04                    3152 	.uleb128	4
      00044E 02                    3153 	.db	2
      00044F 91                    3154 	.db	145
      000450 04                    3155 	.sleb128	4
      000451 43 4C 4B 5F 53 57 49  3156 	.ascii "CLK_SWIMDivider"
             4D 44 69 76 69 64 65
             72
      000460 00                    3157 	.db	0
      000461 00 00 00 9C           3158 	.dw	0,156
      000465 05                    3159 	.uleb128	5
      000466 05                    3160 	.uleb128	5
      000467 00                    3161 	.uleb128	0
      000468 02                    3162 	.uleb128	2
      000469 43 4C 4B 5F 43 6C 6F  3163 	.ascii "CLK_ClockSecuritySystemEnable"
             63 6B 53 65 63 75 72
             69 74 79 53 79 73 74
             65 6D 45 6E 61 62 6C
             65
      000486 00                    3164 	.db	0
      000487 00 00r03rD7           3165 	.dw	0,(_CLK_ClockSecuritySystemEnable)
      00048B 00 00r03rEE           3166 	.dw	0,(XG$CLK_ClockSecuritySystemEnable$0$0+7)
      00048F 01                    3167 	.db	1
      000490 00 00r00r8C           3168 	.dw	0,(Ldebug_loc_start+140)
      000494 0C                    3169 	.uleb128	12
      000495 43 4C 4B 5F 47 65 74  3170 	.ascii "CLK_GetSYSCLKSource"
             53 59 53 43 4C 4B 53
             6F 75 72 63 65
      0004A8 00                    3171 	.db	0
      0004A9 00 00r03rEE           3172 	.dw	0,(_CLK_GetSYSCLKSource)
      0004AD 00 00r04r05           3173 	.dw	0,(XG$CLK_GetSYSCLKSource$0$0+7)
      0004B1 01                    3174 	.db	1
      0004B2 00 00r00r78           3175 	.dw	0,(Ldebug_loc_start+120)
      0004B6 00 00 00 9C           3176 	.dw	0,156
      0004BA 06                    3177 	.uleb128	6
      0004BB 75 6E 73 69 67 6E 65  3178 	.ascii "unsigned long"
             64 20 6C 6F 6E 67
      0004C8 00                    3179 	.db	0
      0004C9 04                    3180 	.db	4
      0004CA 07                    3181 	.db	7
      0004CB 09                    3182 	.uleb128	9
      0004CC 00 00 05 39           3183 	.dw	0,1337
      0004D0 43 4C 4B 5F 47 65 74  3184 	.ascii "CLK_GetClockFreq"
             43 6C 6F 63 6B 46 72
             65 71
      0004E0 00                    3185 	.db	0
      0004E1 00 00r04r05           3186 	.dw	0,(_CLK_GetClockFreq)
      0004E5 00 00r04r70           3187 	.dw	0,(XG$CLK_GetClockFreq$0$0+7)
      0004E9 01                    3188 	.db	1
      0004EA 00 00r00r64           3189 	.dw	0,(Ldebug_loc_start+100)
      0004EE 00 00 04 BA           3190 	.dw	0,1210
      0004F2 05                    3191 	.uleb128	5
      0004F3 05                    3192 	.uleb128	5
      0004F4 05                    3193 	.uleb128	5
      0004F5 0A                    3194 	.uleb128	10
      0004F6 02                    3195 	.db	2
      0004F7 91                    3196 	.db	145
      0004F8 7A                    3197 	.sleb128	-6
      0004F9 63 6C 6F 63 6B 66 72  3198 	.ascii "clockfrequency"
             65 71 75 65 6E 63 79
      000507 00                    3199 	.db	0
      000508 00 00 04 BA           3200 	.dw	0,1210
      00050C 0A                    3201 	.uleb128	10
      00050D 02                    3202 	.db	2
      00050E 91                    3203 	.db	145
      00050F 79                    3204 	.sleb128	-7
      000510 63 6C 6F 63 6B 73 6F  3205 	.ascii "clocksource"
             75 72 63 65
      00051B 00                    3206 	.db	0
      00051C 00 00 00 9C           3207 	.dw	0,156
      000520 0A                    3208 	.uleb128	10
      000521 01                    3209 	.db	1
      000522 51                    3210 	.db	81
      000523 74 6D 70              3211 	.ascii "tmp"
      000526 00                    3212 	.db	0
      000527 00 00 00 9C           3213 	.dw	0,156
      00052B 0A                    3214 	.uleb128	10
      00052C 01                    3215 	.db	1
      00052D 51                    3216 	.db	81
      00052E 70 72 65 73 63        3217 	.ascii "presc"
      000533 00                    3218 	.db	0
      000534 00 00 00 9C           3219 	.dw	0,156
      000538 00                    3220 	.uleb128	0
      000539 03                    3221 	.uleb128	3
      00053A 00 00 05 8A           3222 	.dw	0,1418
      00053E 43 4C 4B 5F 41 64 6A  3223 	.ascii "CLK_AdjustHSICalibrationValue"
             75 73 74 48 53 49 43
             61 6C 69 62 72 61 74
             69 6F 6E 56 61 6C 75
             65
      00055B 00                    3224 	.db	0
      00055C 00 00r04r70           3225 	.dw	0,(_CLK_AdjustHSICalibrationValue)
      000560 00 00r04r8F           3226 	.dw	0,(XG$CLK_AdjustHSICalibrationValue$0$0+7)
      000564 01                    3227 	.db	1
      000565 00 00r00r50           3228 	.dw	0,(Ldebug_loc_start+80)
      000569 04                    3229 	.uleb128	4
      00056A 02                    3230 	.db	2
      00056B 91                    3231 	.db	145
      00056C 04                    3232 	.sleb128	4
      00056D 43 4C 4B 5F 48 53 49  3233 	.ascii "CLK_HSICalibrationValue"
             43 61 6C 69 62 72 61
             74 69 6F 6E 56 61 6C
             75 65
      000584 00                    3234 	.db	0
      000585 00 00 00 9C           3235 	.dw	0,156
      000589 00                    3236 	.uleb128	0
      00058A 02                    3237 	.uleb128	2
      00058B 43 4C 4B 5F 53 59 53  3238 	.ascii "CLK_SYSCLKEmergencyClear"
             43 4C 4B 45 6D 65 72
             67 65 6E 63 79 43 6C
             65 61 72
      0005A3 00                    3239 	.db	0
      0005A4 00 00r04r8F           3240 	.dw	0,(_CLK_SYSCLKEmergencyClear)
      0005A8 00 00r04rA6           3241 	.dw	0,(XG$CLK_SYSCLKEmergencyClear$0$0+7)
      0005AC 01                    3242 	.db	1
      0005AD 00 00r00r3C           3243 	.dw	0,(Ldebug_loc_start+60)
      0005B1 09                    3244 	.uleb128	9
      0005B2 00 00 06 20           3245 	.dw	0,1568
      0005B6 43 4C 4B 5F 47 65 74  3246 	.ascii "CLK_GetFlagStatus"
             46 6C 61 67 53 74 61
             74 75 73
      0005C7 00                    3247 	.db	0
      0005C8 00 00r04rA6           3248 	.dw	0,(_CLK_GetFlagStatus)
      0005CC 00 00r05r01           3249 	.dw	0,(XG$CLK_GetFlagStatus$0$0+7)
      0005D0 01                    3250 	.db	1
      0005D1 00 00r00r28           3251 	.dw	0,(Ldebug_loc_start+40)
      0005D5 00 00 00 9C           3252 	.dw	0,156
      0005D9 04                    3253 	.uleb128	4
      0005DA 02                    3254 	.db	2
      0005DB 91                    3255 	.db	145
      0005DC 04                    3256 	.sleb128	4
      0005DD 43 4C 4B 5F 46 4C 41  3257 	.ascii "CLK_FLAG"
             47
      0005E5 00                    3258 	.db	0
      0005E6 00 00 03 26           3259 	.dw	0,806
      0005EA 05                    3260 	.uleb128	5
      0005EB 05                    3261 	.uleb128	5
      0005EC 05                    3262 	.uleb128	5
      0005ED 05                    3263 	.uleb128	5
      0005EE 05                    3264 	.uleb128	5
      0005EF 05                    3265 	.uleb128	5
      0005F0 05                    3266 	.uleb128	5
      0005F1 0B                    3267 	.uleb128	11
      0005F2 73 74 61 74 75 73 72  3268 	.ascii "statusreg"
             65 67
      0005FB 00                    3269 	.db	0
      0005FC 00 00 03 26           3270 	.dw	0,806
      000600 0A                    3271 	.uleb128	10
      000601 01                    3272 	.db	1
      000602 51                    3273 	.db	81
      000603 74 6D 70 72 65 67     3274 	.ascii "tmpreg"
      000609 00                    3275 	.db	0
      00060A 00 00 00 9C           3276 	.dw	0,156
      00060E 0A                    3277 	.uleb128	10
      00060F 01                    3278 	.db	1
      000610 51                    3279 	.db	81
      000611 62 69 74 73 74 61 74  3280 	.ascii "bitstatus"
             75 73
      00061A 00                    3281 	.db	0
      00061B 00 00 00 9C           3282 	.dw	0,156
      00061F 00                    3283 	.uleb128	0
      000620 09                    3284 	.uleb128	9
      000621 00 00 06 77           3285 	.dw	0,1655
      000625 43 4C 4B 5F 47 65 74  3286 	.ascii "CLK_GetITStatus"
             49 54 53 74 61 74 75
             73
      000634 00                    3287 	.db	0
      000635 00 00r05r01           3288 	.dw	0,(_CLK_GetITStatus)
      000639 00 00r05r3A           3289 	.dw	0,(XG$CLK_GetITStatus$0$0+7)
      00063D 01                    3290 	.db	1
      00063E 00 00r00r14           3291 	.dw	0,(Ldebug_loc_start+20)
      000642 00 00 00 9C           3292 	.dw	0,156
      000646 04                    3293 	.uleb128	4
      000647 02                    3294 	.db	2
      000648 91                    3295 	.db	145
      000649 04                    3296 	.sleb128	4
      00064A 43 4C 4B 5F 49 54     3297 	.ascii "CLK_IT"
      000650 00                    3298 	.db	0
      000651 00 00 00 9C           3299 	.dw	0,156
      000655 07                    3300 	.uleb128	7
      000656 00 00 06 5D           3301 	.dw	0,1629
      00065A 05                    3302 	.uleb128	5
      00065B 05                    3303 	.uleb128	5
      00065C 00                    3304 	.uleb128	0
      00065D 07                    3305 	.uleb128	7
      00065E 00 00 06 65           3306 	.dw	0,1637
      000662 05                    3307 	.uleb128	5
      000663 05                    3308 	.uleb128	5
      000664 00                    3309 	.uleb128	0
      000665 0A                    3310 	.uleb128	10
      000666 01                    3311 	.db	1
      000667 51                    3312 	.db	81
      000668 62 69 74 73 74 61 74  3313 	.ascii "bitstatus"
             75 73
      000671 00                    3314 	.db	0
      000672 00 00 00 9C           3315 	.dw	0,156
      000676 00                    3316 	.uleb128	0
      000677 03                    3317 	.uleb128	3
      000678 00 00 06 B1           3318 	.dw	0,1713
      00067C 43 4C 4B 5F 43 6C 65  3319 	.ascii "CLK_ClearITPendingBit"
             61 72 49 54 50 65 6E
             64 69 6E 67 42 69 74
      000691 00                    3320 	.db	0
      000692 00 00r05r3A           3321 	.dw	0,(_CLK_ClearITPendingBit)
      000696 00 00r05r63           3322 	.dw	0,(XG$CLK_ClearITPendingBit$0$0+7)
      00069A 01                    3323 	.db	1
      00069B 00 00r00r00           3324 	.dw	0,(Ldebug_loc_start)
      00069F 04                    3325 	.uleb128	4
      0006A0 02                    3326 	.db	2
      0006A1 91                    3327 	.db	145
      0006A2 04                    3328 	.sleb128	4
      0006A3 43 4C 4B 5F 49 54     3329 	.ascii "CLK_IT"
      0006A9 00                    3330 	.db	0
      0006AA 00 00 00 9C           3331 	.dw	0,156
      0006AE 05                    3332 	.uleb128	5
      0006AF 05                    3333 	.uleb128	5
      0006B0 00                    3334 	.uleb128	0
      0006B1 0D                    3335 	.uleb128	13
      0006B2 00 00 00 9C           3336 	.dw	0,156
      0006B6 0E                    3337 	.uleb128	14
      0006B7 00 00 06 C3           3338 	.dw	0,1731
      0006BB 04                    3339 	.db	4
      0006BC 00 00 06 B1           3340 	.dw	0,1713
      0006C0 0F                    3341 	.uleb128	15
      0006C1 03                    3342 	.db	3
      0006C2 00                    3343 	.uleb128	0
      0006C3 10                    3344 	.uleb128	16
      0006C4 05                    3345 	.db	5
      0006C5 03                    3346 	.db	3
      0006C6 00 00r05r63           3347 	.dw	0,(_HSIDivFactor)
      0006CA 48 53 49 44 69 76 46  3348 	.ascii "HSIDivFactor"
             61 63 74 6F 72
      0006D6 00                    3349 	.db	0
      0006D7 01                    3350 	.db	1
      0006D8 00 00 06 B6           3351 	.dw	0,1718
      0006DC 0E                    3352 	.uleb128	14
      0006DD 00 00 06 E9           3353 	.dw	0,1769
      0006E1 08                    3354 	.db	8
      0006E2 00 00 06 B1           3355 	.dw	0,1713
      0006E6 0F                    3356 	.uleb128	15
      0006E7 07                    3357 	.db	7
      0006E8 00                    3358 	.uleb128	0
      0006E9 10                    3359 	.uleb128	16
      0006EA 05                    3360 	.db	5
      0006EB 03                    3361 	.db	3
      0006EC 00 00r05r67           3362 	.dw	0,(_CLKPrescTable)
      0006F0 43 4C 4B 50 72 65 73  3363 	.ascii "CLKPrescTable"
             63 54 61 62 6C 65
      0006FD 00                    3364 	.db	0
      0006FE 01                    3365 	.db	1
      0006FF 00 00 06 DC           3366 	.dw	0,1756
      000703 00                    3367 	.uleb128	0
      000704 00                    3368 	.uleb128	0
      000705 00                    3369 	.uleb128	0
      000706                       3370 Ldebug_info_end:
                                   3371 
                                   3372 	.area .debug_pubnames (NOLOAD)
      000000 00 00 02 3D           3373 	.dw	0,Ldebug_pubnames_end-Ldebug_pubnames_start
      000004                       3374 Ldebug_pubnames_start:
      000004 00 02                 3375 	.dw	2
      000006 00 00r00r00           3376 	.dw	0,(Ldebug_info_start-4)
      00000A 00 00 07 06           3377 	.dw	0,4+Ldebug_info_end-Ldebug_info_start
      00000E 00 00 00 47           3378 	.dw	0,71
      000012 43 4C 4B 5F 44 65 49  3379 	.ascii "CLK_DeInit"
             6E 69 74
      00001C 00                    3380 	.db	0
      00001D 00 00 00 60           3381 	.dw	0,96
      000021 43 4C 4B 5F 46 61 73  3382 	.ascii "CLK_FastHaltWakeUpCmd"
             74 48 61 6C 74 57 61
             6B 65 55 70 43 6D 64
      000036 00                    3383 	.db	0
      000037 00 00 00 AD           3384 	.dw	0,173
      00003B 43 4C 4B 5F 48 53 45  3385 	.ascii "CLK_HSECmd"
             43 6D 64
      000045 00                    3386 	.db	0
      000046 00 00 00 DE           3387 	.dw	0,222
      00004A 43 4C 4B 5F 48 53 49  3388 	.ascii "CLK_HSICmd"
             43 6D 64
      000054 00                    3389 	.db	0
      000055 00 00 01 0F           3390 	.dw	0,271
      000059 43 4C 4B 5F 4C 53 49  3391 	.ascii "CLK_LSICmd"
             43 6D 64
      000063 00                    3392 	.db	0
      000064 00 00 01 40           3393 	.dw	0,320
      000068 43 4C 4B 5F 43 43 4F  3394 	.ascii "CLK_CCOCmd"
             43 6D 64
      000072 00                    3395 	.db	0
      000073 00 00 01 71           3396 	.dw	0,369
      000077 43 4C 4B 5F 43 6C 6F  3397 	.ascii "CLK_ClockSwitchCmd"
             63 6B 53 77 69 74 63
             68 43 6D 64
      000089 00                    3398 	.db	0
      00008A 00 00 01 AA           3399 	.dw	0,426
      00008E 43 4C 4B 5F 53 6C 6F  3400 	.ascii "CLK_SlowActiveHaltWakeUpCmd"
             77 41 63 74 69 76 65
             48 61 6C 74 57 61 6B
             65 55 70 43 6D 64
      0000A9 00                    3401 	.db	0
      0000AA 00 00 01 EC           3402 	.dw	0,492
      0000AE 43 4C 4B 5F 50 65 72  3403 	.ascii "CLK_PeripheralClockConfig"
             69 70 68 65 72 61 6C
             43 6C 6F 63 6B 43 6F
             6E 66 69 67
      0000C7 00                    3404 	.db	0
      0000C8 00 00 02 4D           3405 	.dw	0,589
      0000CC 43 4C 4B 5F 43 6C 6F  3406 	.ascii "CLK_ClockSwitchConfig"
             63 6B 53 77 69 74 63
             68 43 6F 6E 66 69 67
      0000E1 00                    3407 	.db	0
      0000E2 00 00 03 36           3408 	.dw	0,822
      0000E6 43 4C 4B 5F 48 53 49  3409 	.ascii "CLK_HSIPrescalerConfig"
             50 72 65 73 63 61 6C
             65 72 43 6F 6E 66 69
             67
      0000FC 00                    3410 	.db	0
      0000FD 00 00 03 75           3411 	.dw	0,885
      000101 43 4C 4B 5F 43 43 4F  3412 	.ascii "CLK_CCOConfig"
             43 6F 6E 66 69 67
      00010E 00                    3413 	.db	0
      00010F 00 00 03 A6           3414 	.dw	0,934
      000113 43 4C 4B 5F 49 54 43  3415 	.ascii "CLK_ITConfig"
             6F 6E 66 69 67
      00011F 00                    3416 	.db	0
      000120 00 00 03 F0           3417 	.dw	0,1008
      000124 43 4C 4B 5F 53 59 53  3418 	.ascii "CLK_SYSCLKConfig"
             43 4C 4B 43 6F 6E 66
             69 67
      000134 00                    3419 	.db	0
      000135 00 00 04 2C           3420 	.dw	0,1068
      000139 43 4C 4B 5F 53 57 49  3421 	.ascii "CLK_SWIMConfig"
             4D 43 6F 6E 66 69 67
      000147 00                    3422 	.db	0
      000148 00 00 04 68           3423 	.dw	0,1128
      00014C 43 4C 4B 5F 43 6C 6F  3424 	.ascii "CLK_ClockSecuritySystemEnable"
             63 6B 53 65 63 75 72
             69 74 79 53 79 73 74
             65 6D 45 6E 61 62 6C
             65
      000169 00                    3425 	.db	0
      00016A 00 00 04 94           3426 	.dw	0,1172
      00016E 43 4C 4B 5F 47 65 74  3427 	.ascii "CLK_GetSYSCLKSource"
             53 59 53 43 4C 4B 53
             6F 75 72 63 65
      000181 00                    3428 	.db	0
      000182 00 00 04 CB           3429 	.dw	0,1227
      000186 43 4C 4B 5F 47 65 74  3430 	.ascii "CLK_GetClockFreq"
             43 6C 6F 63 6B 46 72
             65 71
      000196 00                    3431 	.db	0
      000197 00 00 05 39           3432 	.dw	0,1337
      00019B 43 4C 4B 5F 41 64 6A  3433 	.ascii "CLK_AdjustHSICalibrationValue"
             75 73 74 48 53 49 43
             61 6C 69 62 72 61 74
             69 6F 6E 56 61 6C 75
             65
      0001B8 00                    3434 	.db	0
      0001B9 00 00 05 8A           3435 	.dw	0,1418
      0001BD 43 4C 4B 5F 53 59 53  3436 	.ascii "CLK_SYSCLKEmergencyClear"
             43 4C 4B 45 6D 65 72
             67 65 6E 63 79 43 6C
             65 61 72
      0001D5 00                    3437 	.db	0
      0001D6 00 00 05 B1           3438 	.dw	0,1457
      0001DA 43 4C 4B 5F 47 65 74  3439 	.ascii "CLK_GetFlagStatus"
             46 6C 61 67 53 74 61
             74 75 73
      0001EB 00                    3440 	.db	0
      0001EC 00 00 06 20           3441 	.dw	0,1568
      0001F0 43 4C 4B 5F 47 65 74  3442 	.ascii "CLK_GetITStatus"
             49 54 53 74 61 74 75
             73
      0001FF 00                    3443 	.db	0
      000200 00 00 06 77           3444 	.dw	0,1655
      000204 43 4C 4B 5F 43 6C 65  3445 	.ascii "CLK_ClearITPendingBit"
             61 72 49 54 50 65 6E
             64 69 6E 67 42 69 74
      000219 00                    3446 	.db	0
      00021A 00 00 06 C3           3447 	.dw	0,1731
      00021E 48 53 49 44 69 76 46  3448 	.ascii "HSIDivFactor"
             61 63 74 6F 72
      00022A 00                    3449 	.db	0
      00022B 00 00 06 E9           3450 	.dw	0,1769
      00022F 43 4C 4B 50 72 65 73  3451 	.ascii "CLKPrescTable"
             63 54 61 62 6C 65
      00023C 00                    3452 	.db	0
      00023D 00 00 00 00           3453 	.dw	0,0
      000241                       3454 Ldebug_pubnames_end:
                                   3455 
                                   3456 	.area .debug_frame (NOLOAD)
      000000 00 00                 3457 	.dw	0
      000002 00 0E                 3458 	.dw	Ldebug_CIE_end-Ldebug_CIE_start
      000004                       3459 Ldebug_CIE_start:
      000004 FF FF                 3460 	.dw	0xffff
      000006 FF FF                 3461 	.dw	0xffff
      000008 01                    3462 	.db	1
      000009 00                    3463 	.db	0
      00000A 01                    3464 	.uleb128	1
      00000B 01                    3465 	.sleb128	1
      00000C 00                    3466 	.db	0
      00000D 0C                    3467 	.db	12
      00000E 00                    3468 	.uleb128	0
      00000F 00                    3469 	.uleb128	0
      000010 80                    3470 	.db	128
      000011 00                    3471 	.uleb128	0
      000012                       3472 Ldebug_CIE_end:
