                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl main
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; Stack segment in internal ram 
                                     22 ;--------------------------------------------------------
                                     23 	.area	SSEG
      000001                         24 __start__stack:
      000001                         25 	.ds	1
                                     26 
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DABS (ABS)
                                     31 ;--------------------------------------------------------
                                     32 ; interrupt vector 
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
      008000                         35 __interrupt_vect:
      008000 82 00 80 83             36 	int s_GSINIT ;reset
      008004 82 00 00 00             37 	int 0x0000 ;trap
      008008 82 00 00 00             38 	int 0x0000 ;int0
      00800C 82 00 00 00             39 	int 0x0000 ;int1
      008010 82 00 00 00             40 	int 0x0000 ;int2
      008014 82 00 00 00             41 	int 0x0000 ;int3
      008018 82 00 00 00             42 	int 0x0000 ;int4
      00801C 82 00 00 00             43 	int 0x0000 ;int5
      008020 82 00 00 00             44 	int 0x0000 ;int6
      008024 82 00 00 00             45 	int 0x0000 ;int7
      008028 82 00 00 00             46 	int 0x0000 ;int8
      00802C 82 00 00 00             47 	int 0x0000 ;int9
      008030 82 00 00 00             48 	int 0x0000 ;int10
      008034 82 00 00 00             49 	int 0x0000 ;int11
      008038 82 00 00 00             50 	int 0x0000 ;int12
      00803C 82 00 00 00             51 	int 0x0000 ;int13
      008040 82 00 00 00             52 	int 0x0000 ;int14
      008044 82 00 00 00             53 	int 0x0000 ;int15
      008048 82 00 00 00             54 	int 0x0000 ;int16
      00804C 82 00 00 00             55 	int 0x0000 ;int17
      008050 82 00 00 00             56 	int 0x0000 ;int18
      008054 82 00 00 00             57 	int 0x0000 ;int19
      008058 82 00 00 00             58 	int 0x0000 ;int20
      00805C 82 00 00 00             59 	int 0x0000 ;int21
      008060 82 00 00 00             60 	int 0x0000 ;int22
      008064 82 00 00 00             61 	int 0x0000 ;int23
      008068 82 00 00 00             62 	int 0x0000 ;int24
      00806C 82 00 00 00             63 	int 0x0000 ;int25
      008070 82 00 00 00             64 	int 0x0000 ;int26
      008074 82 00 00 00             65 	int 0x0000 ;int27
      008078 82 00 00 00             66 	int 0x0000 ;int28
      00807C 82 00 00 00             67 	int 0x0000 ;int29
                                     68 ;--------------------------------------------------------
                                     69 ; global & static initialisations
                                     70 ;--------------------------------------------------------
                                     71 	.area HOME
                                     72 	.area GSINIT
                                     73 	.area GSFINAL
                                     74 	.area GSINIT
                                     75 .globl start
      008083                         76 start:
      008083                         77 __sdcc_gs_init_startup:
      008083 AE 07 FF         [ 2]   78 	ldw x, #0x7ff
      008086 96               [ 1]   79 	ldw x, sp
      008087                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      008087 AE 00 00         [ 2]   82 	ldw x, #l_DATA
      00808A 27 07            [ 1]   83 	jreq	00002$
      00808C                         84 00001$:
      00808C 72 4F 00 00      [ 1]   85 	clr (s_DATA - 1, x)
      008090 5A               [ 2]   86 	decw x
      008091 26 F9            [ 1]   87 	jrne	00001$
      008093                         88 00002$:
      008093 AE 00 00         [ 2]   89 	ldw	x, #l_INITIALIZER
      008096 27 09            [ 1]   90 	jreq	00004$
      008098                         91 00003$:
      008098 D6 80 C5         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      00809B D7 00 00         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      00809E 5A               [ 2]   94 	decw	x
      00809F 26 F7            [ 1]   95 	jrne	00003$
      0080A1                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      0080A1 CC 80 80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      008080                        105 __sdcc_program_startup:
      008080 CC 80 A4         [ 2]  106 	jp	main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	main.c: 3: int main() {
                                    113 ;	-----------------------------------------
                                    114 ;	 function main
                                    115 ;	-----------------------------------------
      0080A4                        116 main:
      0080A4 52 02            [ 2]  117 	sub	sp, #2
                                    118 ;	main.c: 6: PD_DDR = (1 << 3); // LED on PD3
      0080A6 35 08 50 11      [ 1]  119 	mov	0x5011+0, #0x08
                                    120 ;	main.c: 7: PD_CR1 = (1 << 3);
      0080AA 35 08 50 12      [ 1]  121 	mov	0x5012+0, #0x08
                                    122 ;	main.c: 9: do {
      0080AE                        123 00102$:
                                    124 ;	main.c: 11: PD_ODR ^= (1 << 3);
      0080AE AE 50 0F         [ 2]  125 	ldw	x, #0x500f
      0080B1 F6               [ 1]  126 	ld	a, (x)
      0080B2 A8 08            [ 1]  127 	xor	a, #0x08
      0080B4 F7               [ 1]  128 	ld	(x), a
                                    129 ;	main.c: 13: for(d = 0; d < 29000; d++)
      0080B5 AE 71 48         [ 2]  130 	ldw	x, #0x7148
      0080B8                        131 00107$:
      0080B8 5A               [ 2]  132 	decw	x
      0080B9 1F 01            [ 2]  133 	ldw	(0x01, sp), x
      0080BB 1E 01            [ 2]  134 	ldw	x, (0x01, sp)
      0080BD 16 01            [ 2]  135 	ldw	y, (0x01, sp)
      0080BF 26 F7            [ 1]  136 	jrne	00107$
                                    137 ;	main.c: 16: } while(1);
      0080C1 20 EB            [ 2]  138 	jra	00102$
      0080C3 5B 02            [ 2]  139 	addw	sp, #2
      0080C5 81               [ 4]  140 	ret
                                    141 	.area CODE
                                    142 	.area INITIALIZER
                                    143 	.area CABS (ABS)
