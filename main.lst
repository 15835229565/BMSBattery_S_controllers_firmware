                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl main
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; Stack segment in internal ram 
                                     22 ;--------------------------------------------------------
                                     23 	.area	SSEG
      000000                         24 __start__stack:
      000000                         25 	.ds	1
                                     26 
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DABS (ABS)
                                     31 ;--------------------------------------------------------
                                     32 ; interrupt vector 
                                     33 ;--------------------------------------------------------
                                     34 	.area HOME
      000000                         35 __interrupt_vect:
      000000 82v00u00u00             36 	int s_GSINIT ;reset
      000004 82 00 00 00             37 	int 0x0000 ;trap
      000008 82 00 00 00             38 	int 0x0000 ;int0
      00000C 82 00 00 00             39 	int 0x0000 ;int1
      000010 82 00 00 00             40 	int 0x0000 ;int2
      000014 82 00 00 00             41 	int 0x0000 ;int3
      000018 82 00 00 00             42 	int 0x0000 ;int4
      00001C 82 00 00 00             43 	int 0x0000 ;int5
      000020 82 00 00 00             44 	int 0x0000 ;int6
      000024 82 00 00 00             45 	int 0x0000 ;int7
      000028 82 00 00 00             46 	int 0x0000 ;int8
      00002C 82 00 00 00             47 	int 0x0000 ;int9
      000030 82 00 00 00             48 	int 0x0000 ;int10
      000034 82 00 00 00             49 	int 0x0000 ;int11
      000038 82 00 00 00             50 	int 0x0000 ;int12
      00003C 82 00 00 00             51 	int 0x0000 ;int13
      000040 82 00 00 00             52 	int 0x0000 ;int14
      000044 82 00 00 00             53 	int 0x0000 ;int15
      000048 82 00 00 00             54 	int 0x0000 ;int16
      00004C 82 00 00 00             55 	int 0x0000 ;int17
      000050 82 00 00 00             56 	int 0x0000 ;int18
      000054 82 00 00 00             57 	int 0x0000 ;int19
      000058 82 00 00 00             58 	int 0x0000 ;int20
      00005C 82 00 00 00             59 	int 0x0000 ;int21
      000060 82 00 00 00             60 	int 0x0000 ;int22
      000064 82 00 00 00             61 	int 0x0000 ;int23
      000068 82 00 00 00             62 	int 0x0000 ;int24
      00006C 82 00 00 00             63 	int 0x0000 ;int25
      000070 82 00 00 00             64 	int 0x0000 ;int26
      000074 82 00 00 00             65 	int 0x0000 ;int27
      000078 82 00 00 00             66 	int 0x0000 ;int28
      00007C 82 00 00 00             67 	int 0x0000 ;int29
                                     68 ;--------------------------------------------------------
                                     69 ; global & static initialisations
                                     70 ;--------------------------------------------------------
                                     71 	.area HOME
                                     72 	.area GSINIT
                                     73 	.area GSFINAL
                                     74 	.area GSINIT
                                     75 .globl start
      000000                         76 start:
      000000                         77 __sdcc_gs_init_startup:
      000000 AE 07 FF         [ 2]   78 	ldw x, #0x7ff
      000003 96               [ 1]   79 	ldw x, sp
      000004                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      000004 AEr00r00         [ 2]   82 	ldw x, #l_DATA
      000007 27 07            [ 1]   83 	jreq	00002$
      000009                         84 00001$:
      000009 72 4FuFFuFF      [ 1]   85 	clr (s_DATA - 1, x)
      00000D 5A               [ 2]   86 	decw x
      00000E 26 F9            [ 1]   87 	jrne	00001$
      000010                         88 00002$:
      000010 AEr00r00         [ 2]   89 	ldw	x, #l_INITIALIZER
      000013 27 09            [ 1]   90 	jreq	00004$
      000015                         91 00003$:
      000015 D6uFFuFF         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      000018 D7uFFuFF         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      00001B 5A               [ 2]   94 	decw	x
      00001C 26 F7            [ 1]   95 	jrne	00003$
      00001E                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      000000 CCr00r80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      000080                        105 __sdcc_program_startup:
      000080 CCr00r00         [ 2]  106 	jp	main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	main.c: 3: int main() {
                                    113 ;	-----------------------------------------
                                    114 ;	 function main
                                    115 ;	-----------------------------------------
      000000                        116 main:
      000000 52 02            [ 2]  117 	sub	sp, #2
                                    118 ;	main.c: 6: PD_DDR = (1 << 3); // LED on PD3
      000002 35 08 50 11      [ 1]  119 	mov	0x5011+0, #0x08
                                    120 ;	main.c: 7: PD_CR1 = (1 << 3);
      000006 35 08 50 12      [ 1]  121 	mov	0x5012+0, #0x08
                                    122 ;	main.c: 9: do {
      00000A                        123 00102$:
                                    124 ;	main.c: 11: PD_ODR ^= (1 << 3);
      00000A AE 50 0F         [ 2]  125 	ldw	x, #0x500f
      00000D F6               [ 1]  126 	ld	a, (x)
      00000E A8 08            [ 1]  127 	xor	a, #0x08
      000010 F7               [ 1]  128 	ld	(x), a
                                    129 ;	main.c: 13: for(d = 0; d < 29000; d++)
      000011 AE 71 48         [ 2]  130 	ldw	x, #0x7148
      000014                        131 00107$:
      000014 5A               [ 2]  132 	decw	x
      000015 1F 01            [ 2]  133 	ldw	(0x01, sp), x
      000017 1E 01            [ 2]  134 	ldw	x, (0x01, sp)
      000019 16 01            [ 2]  135 	ldw	y, (0x01, sp)
      00001B 26 F7            [ 1]  136 	jrne	00107$
                                    137 ;	main.c: 16: } while(1);
      00001D 20 EB            [ 2]  138 	jra	00102$
      00001F 5B 02            [ 2]  139 	addw	sp, #2
      000021 81               [ 4]  140 	ret
                                    141 	.area CODE
                                    142 	.area INITIALIZER
                                    143 	.area CABS (ABS)
